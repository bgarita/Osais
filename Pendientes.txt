
Compilar y correr en pruebas La Flor.  Es necesario validar que se generan los
xml de facturación electrónica.  Si no funcionara, se puede deshacer el cambio
con git restore.  Probado, todo funciona perfectamente 08/07/2020, excepto jasper reports

NOTA: Jasper Reports (el plugin) no funciona con java14. Solo funciona con java 8

Factura electrónica (V4.3): (VERSIÓN = "4.0r7")
Buscar la forma de relacionar la respueta de Hacienda con el proveedor para que se puedan hacer búsquedas en la pantalla de consulta.

Notas Generales:
1. Explicar a los usuarios que de ahora en adelante no se debe marcar Generar xml y Enviar xml 
   juntos porque ahora se necesita que el xml firmado exista y eso solo sucede cuando el MH
   lo da por aceptado. En todo caso el sistema le dará un error indicando que el xml firmado
   aún no existe.
   Entonces el proceso se debe correr en dos etapas; 1 para generar el xml y el pdf
   y 2 Cuando ya el xml haya sido aceptado por Hacienda.  En esta segunda etapa solo 
   se debe elegir enviar correo.

2. IMPLEMENTACIÓN:
   Usuario y clave del anexo (para envío de facturas electrónicas):
        Usuario:    osais_FE
        Clave:      FE2018$
    
PENDIENTE
1.  Agregar a la clase DirectoyStructure.java una constante con el nombre de
    companyHome cuyo valor sea this.home + Ut.getProperty(Ut.FILE_SEPARATOR) + Menu.BASEDATOS
    Con esto tendremos una carpeta home para cada compañía y ese home sería consecuente
    con el nombre de la base de datos.
    Esto permite que se ajuste el resto de las variables que definen la estructura
    de carpetas que usa el sistema para efectos de mantener todos los archivos separados
    especialmente los xmls.

2.  Agregar función a esta misma clase para que guarde en un archivo de texto todos
    los valores de las constantes para que la herramienta de FE en windows lo pueda leer.

3.  Agregar otra constante systemLog a esa misma clase y modificar la clase Bitacorja.java 
    para que utilice esa constante.  También se debe modificar esa misma clase para que
    el nombre del archivo que se genera ya no sea log.txt sino que sea el nombre de la
    base de datos.
    En base de datos no se requieren cambios ya que lo que se guarda en saisystem,
    específicamente en la tabla notificado ya lleva una columna llamada basedatos,
    que en la práctica es lo mismo que compañía.

4.  Analizar el sistema de Factura electrónica (windows) para para que utilice los valores 
    guardados por la clase del punto 2.  Estos valores serán siempre relativos al home
    de Osais y por lo tanto ahora tendrán algún nombre antes que el que tiene actualmente.
    Por ejemplo, si hablamos de la compañía PUL entonces la dirección de los xmls ya no será
    "xmls\\" como está actualmente en el EXE sino que será "PUL\\xmls\\". Esto se debe
    a que el home de la aplicación será siempre la misma que la de Osais aunque se encuentre
    en otra ubicación. El .EXE deberá seguir estando en la carpeta xml 
    ya que ahí es donde se guardan los .LOG que son el resultado los mensajes generados
    por el EXE (los Writeln() que genera el sistema).



--- CONTABILIDAD ---
Contabilidad #4 (parqueo don Mincho)
- Cierres mensuales verificados
- Configuración para cierre fiscal en diciembre verificado (saldos seguidos, correcto el acumulado)


- Crear proceso para generar asiento de cierre anual basado en asientoc.prg
    Pendiente: Registrar asientos para validar que los cambios que se le hicieron
                a la pantalla de registro de asientos no le hayan afectado la funcionalidad. 
- Crear proceso de cierre anual

NOTA: Tener en cuenta que aún no se ha cargado ASLCG02



NOTAS:
1.  Se creó la tabla hcocatalo con la misma estructura de cocatalogo más el campo fecha_cierre.
    Esta fecha es de tipo date y se usa como parte de la llave para guardar la fecha del último día del mes en proceso.
2.  Se creó una función saldoAl() dentro de UtilBD.java que obtiene el saldo de una cuenta específica 
    a una fecha específica. Esta función será usada en varios procesos como el 
    movimiento de cuentas que está en el mantenimiento de cuentas o el auxiliar analítico.
    


--- CABYS ---
Para la implementación del CABYS (Catálogo de Bienes y Servicios) de Hacienda
se debe hacer lo siguiente:
1. Crear una tabla con ese nombre cabys con tres campos (codigocabys, descrip, impuesto)                    1 hora          LISTO
   También se crea una tabla de auditoría para guardar los borrados o modificaciones a la tabla original    1 hora          LISTO
   Hacer todo el proces de integridad referencial para que el motor procese los cambios                     1 hora          LISTO
2. Crear un proceso que busque el CABYS descargado de Hacienda y lo lea entero                              5 horas         LISTO
    determinando si el producto existe o no. Este proceso debe ser capaz de procesar
    hojas de Excel de cualquier versión para que no existan limitaciones por el 
    número de versión.
    a. Si existe actualizar la descripción y el impuesto.
    b. Si no existe agregar el registro.
    c. Debe agregar un registro con el codigocabys en blanco, la descripción = "Producto CABYS no definido", impuesto= -1.00
   Este proceso deberá estar actualizándose frecuentemente de manera que si Hacienda
   hace cambios, el sistema se actualice cuando se descarga el CABYS.
   NOTA: En el caso del impuesto viene la palabra Excento en vez de un cero en la
         hoja de Excel.  Esto se debe validar para que el programa no se caiga y
         a la vez para poner un cero en la tabla cabys.
3. Agregar un campo (codigocabys) en las tablas inarticu, hinarticu, fadetall y                             1 hora
   wrk_fadetall que sean llave foránea de la tabla cabys con actualización en 
   cascada y set restricción de borrado. Este campo tendrá un espacio en blanco
   como default.
4. Modificar la pantalla de mantenimiento de artículos para que utilice y valide                            2 horas
   el código cabys.
5. Crear un método en la clase UtilBD.java que determine el impuesto a usar a                               2 horas
   la hora de hacer una factura. 
    -- Parámetros: código de tarifa y codigo cabys
    -- Devolución: porcentaje de impuesto (-1.00 si el código cabys no es encontrado)
   a. Si el impuesto en la tabla tarifa_iva es diferente del que se encuentra
      en la tabla cabys se debe informar al usuario pero se le advertirá que
      el impuesto a utilizar será el de cabys.
6. Modificar la pantalla de facturación para que use este nuevo método.                                     2 horas
   Si el valor retornado es negativo debe enviar un mensaje de error que diga
   "Producto CABYS no definido". Este error de validación se puede dar en los
   siguientes casos:
   a. Cuando el código cabys no existe en la tabla cabys.
   b. Cuando el código cabys en la tabla inarticu está en blanco.
   Si se produce este error de validación no se permitirá factura dicho artículo.
   Esta pantalla debe asegurarse de guardar el nuevo campo en las tablas de 
   facturación.  Para eso es necesario modificar todos los procedimientos almacenados
   que se usan tanto para agregar los registros en wrk_fadetall como en fadetall.
7. Modificar el proceso de generación del XML para que incluya el nuevo campo y                             3 horas
   use el valor de cabys.
8. Pruebas y depuración con el ambiente de pruebas de Hacienda                                              4 horas
/*
 * ConsultaSumarizada.java 
 *
 * Created on 16/02/2013, 10:54:04 PM
 */

package interfase.consultas;

import accesoDatos.UtilBD;
import interfase.otros.Buscador;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.ListModel;
import Exceptions.NotUniqueValueException;
import Mail.Bitacora;
import logica.utilitarios.Ut;

/**
 *
 * @author Bosco
 */
@SuppressWarnings("serial")
public class ConsultaSumarizada extends java.awt.Dialog {
    private final Connection conn;  // Conexión a la base de datos

    public ConsultaSumarizada(
            java.awt.Frame parent,
            boolean modal,
            Connection c) {
        
        super(parent, modal);
        initComponents();

        this.setAlwaysOnTop(true);

        conn = c;
    } // end constructor

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmdSalir = new javax.swing.JButton();
        txtClicode = new javax.swing.JFormattedTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtFacnume = new javax.swing.JFormattedTextField();
        jPanel1 = new javax.swing.JPanel();
        txtTotal = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstFacturas = new javax.swing.JList();
        btnEliminar = new javax.swing.JButton();
        cmdBuscar = new javax.swing.JButton();
        lblClidesc = new javax.swing.JLabel();

        setIconImage(null);
        setModalityType(java.awt.Dialog.ModalityType.DOCUMENT_MODAL);
        setTitle("Cálculo defacturas");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        cmdSalir.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        cmdSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/control-power.png"))); // NOI18N
        cmdSalir.setText("Cerrar");
        cmdSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSalirActionPerformed(evt);
            }
        });

        try {
            txtClicode.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("**********")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtClicode.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtClicode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtClicodeActionPerformed(evt);
            }
        });
        txtClicode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtClicodeFocusGained(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Cliente");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Factura");

        try {
            txtFacnume.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("**********")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtFacnume.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtFacnume.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFacnumeActionPerformed(evt);
            }
        });
        txtFacnume.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtFacnumeFocusGained(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "TOTAL", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP));
        jPanel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        txtTotal.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtTotal.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtTotal, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        lstFacturas.setForeground(new java.awt.Color(102, 102, 255));
        lstFacturas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstFacturasMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(lstFacturas);

        btnEliminar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnEliminar.setForeground(new java.awt.Color(255, 0, 0));
        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/eraser.png"))); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.setEnabled(false);
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        cmdBuscar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        cmdBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/binocular.png"))); // NOI18N
        cmdBuscar.setText("Buscar");
        cmdBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdBuscarActionPerformed(evt);
            }
        });

        lblClidesc.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblClidesc.setForeground(new java.awt.Color(0, 0, 153));
        lblClidesc.setText(" ");
        lblClidesc.setToolTipText("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtClicode, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmdBuscar)
                                .addGap(0, 183, Short.MAX_VALUE))
                            .addComponent(lblClidesc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(btnEliminar)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtFacnume, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(165, 165, 165)
                .addComponent(cmdSalir)
                .addContainerGap(201, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(txtClicode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(cmdBuscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblClidesc)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtFacnume, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(btnEliminar)
                        .addGap(37, 37, 37)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addComponent(cmdSalir)
                .addGap(4, 4, 4))
        );

        setSize(new java.awt.Dimension(444, 345));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog

    private void cmdSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSalirActionPerformed
        dispose();
    }//GEN-LAST:event_cmdSalirActionPerformed

    private void txtClicodeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtClicodeFocusGained
        txtClicode.selectAll();
    }//GEN-LAST:event_txtClicodeFocusGained

    private void txtFacnumeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFacnumeFocusGained
        txtFacnume.selectAll();
    }//GEN-LAST:event_txtFacnumeFocusGained

    private void cmdBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdBuscarActionPerformed

        Buscador bd;
        bd = new Buscador(
                new java.awt.Frame(), true,
                "inclient","clicode,clidesc","clidesc",txtClicode,conn);
        bd.setTitle("Buscar clientes");
        bd.lblBuscar.setText("Nombre:");
        bd.setVisible(true);
        txtClicodeActionPerformed(null);
        bd.dispose();
    }//GEN-LAST:event_cmdBuscarActionPerformed

    private void txtClicodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtClicodeActionPerformed
        try {
            lblClidesc.setText(
                    UtilBD.getDBString(
                    conn, "inclient", "clicode = " + txtClicode.getText(), "clidesc"));
        } catch (NotUniqueValueException | SQLException ex) {
            Logger.getLogger(ConsultaSumarizada.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(
                    null,
                    ex.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            new Bitacora().writeToLog(this.getClass().getName() + "--> " + ex.getMessage());
            return;
        } // end try-catch
        txtFacnume.requestFocusInWindow();
    }//GEN-LAST:event_txtClicodeActionPerformed

    @SuppressWarnings("unchecked")
    private void txtFacnumeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFacnumeActionPerformed
        DefaultListModel dlm = new DefaultListModel();
        ListModel lm = lstFacturas.getModel();
        String elemento, temp;
        double total;
        int pos;
        
        // usar esto en un métodoque se llame calcularTotal
        for (int i = 0; i < lm.getSize(); i++){            
            // Validar si el número de factura ya existe en la lista.
            elemento = lm.getElementAt(i).toString();
            pos = Ut.AT(elemento, " ");
            temp = elemento.substring(pos).trim();
            pos = Ut.AT(temp, " ");
            temp = temp.substring(0, pos).trim();
            if (Integer.parseInt(temp) == Integer.parseInt(txtFacnume.getText().trim())){
                this.setAlwaysOnTop(false); // Esto permite ver el mensaje.
                JOptionPane.showMessageDialog(null,
                    "Factura ya existe.  \nDigite otro número.",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
                this.setAlwaysOnTop(true);
                return;
            } // end if
            
            dlm.addElement(elemento);
        } // for
        try {
            elemento = UtilBD.getDBString(conn, "faencabe", 
                    "facnume = " + txtFacnume.getText() + " and facnd = 0 and facestado = '' and " +
                    "clicode = " + txtClicode.getText(), 
                    "Concat('Fact ', Lpad(facnume,10,'0'), '   Saldo ', facsald) as factura");
        } catch (    NotUniqueValueException | SQLException ex) {
            Logger.getLogger(ConsultaSumarizada.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(
                    null,
                    ex.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            new Bitacora().writeToLog(this.getClass().getName() + "--> " + ex.getMessage());
            return;
        } // end try-catch
        
        if (elemento.isEmpty()){
            this.setAlwaysOnTop(false); // Esto permite ver el mensaje.
            JOptionPane.showMessageDialog(null,
                    "Factura no pertenece a este cliente.  \nDigite otro número.",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            this.setAlwaysOnTop(true);
            return;
        } // end if
        
        dlm.addElement(elemento);
        
        lstFacturas.setModel(dlm);
        total = totalizarLista();
        try {
            txtTotal.setText(Ut.fDecimal(String.valueOf(total), "#,##0.00"));
        } catch (Exception ex) {
            Logger.getLogger(ConsultaSumarizada.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null,
                    ex.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            new Bitacora().writeToLog(this.getClass().getName() + "--> " + ex.getMessage());
            this.setAlwaysOnTop(true);
        }
        
        txtFacnume.setText("");
    }//GEN-LAST:event_txtFacnumeActionPerformed

    private void lstFacturasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstFacturasMouseClicked
        int indice = lstFacturas.getSelectedIndex();
        if (indice < 0){
            return;
        } // end if
        this.btnEliminar.setEnabled(true);
    }//GEN-LAST:event_lstFacturasMouseClicked

    @SuppressWarnings("unchecked")
    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        DefaultListModel dlm = new DefaultListModel();
        ListModel lm = lstFacturas.getModel();
       
        Object item = lstFacturas.getSelectedValue();
        if (item == null){
            return;
        } // end if
        
        for (int i = 0; i < lm.getSize(); i++){
            // Si el item seleccionado es igual al de la posición i entonces lo
            // omito para que quede excluido.
            if (item.equals(lm.getElementAt(i))){
                continue;
            } // end if
            dlm.addElement(item);
        } // end for
        
        lstFacturas.setModel(dlm);
        
        try {
            txtTotal.setText(Ut.fDecimal(String.valueOf(totalizarLista()), "#,##0.00"));
        } catch (Exception ex) {
            Logger.getLogger(ConsultaSumarizada.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null,
                    ex.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            new Bitacora().writeToLog(this.getClass().getName() + "--> " + ex.getMessage());
        }
        btnEliminar.setEnabled(false);
    }//GEN-LAST:event_btnEliminarActionPerformed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton cmdBuscar;
    private javax.swing.JButton cmdSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblClidesc;
    private javax.swing.JList lstFacturas;
    private javax.swing.JFormattedTextField txtClicode;
    private javax.swing.JFormattedTextField txtFacnume;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables

    
    private double totalizarLista(){
        ListModel lm;
        lm = lstFacturas.getModel();
        String elemento;
        double total = 0.00;
        int pos;
        
        for (int i = 0; i < lm.getSize(); i++){            
            elemento = lm.getElementAt(i).toString();
            pos = Ut.AT(elemento, "Saldo");
            total += Double.parseDouble(elemento.substring(pos+5).trim());
        } // for
        return total;
    } // end calcularTotal   
}

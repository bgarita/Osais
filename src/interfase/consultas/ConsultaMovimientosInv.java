/*
 * ConsultaMovimientosInv.java 
 *
 * Created on 17/08/2011, 08:40:00 PM
 */
package interfase.consultas;

import Mail.Bitacora;
import accesoDatos.CMD;
import accesoDatos.UtilBD;
import interfase.otros.Buscador;
import interfase.reportes.RepDocInv;
import java.awt.Color;
import java.awt.Cursor;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import logica.utilitarios.FormatoTabla;
import logica.utilitarios.Ut;

/**
 *
 * @author Bosco Garita
 */
@SuppressWarnings("serial")
public class ConsultaMovimientosInv extends JFrame {

    private Connection conn = null;
    private FormatoTabla formato;
    private Bitacora b = new Bitacora();

    /**
     * Creates new form Bodegas
     *
     * @param c
     * @param artcode
     * @param mov
     */
    public ConsultaMovimientosInv(Connection c, String artcode, int mov) {
        b.setLogLevel(Bitacora.ERROR);
        try {
            initComponents();
            conn = c;
            lblArtdesc.setText("");
            txtArtcode.setText(artcode);

            if (mov == 1) {
                radEntrada.setSelected(true);
                radEntradaActionPerformed(null);
            } else {
                radSalida.setSelected(true);
                radSalidaActionPerformed(null);
            } // end if-else

            formato = new FormatoTabla();
            formato.formatColumn(tblMovimientos, 5, FormatoTabla.H_RIGHT, Color.BLUE);
            formato.formatColumn(tblMovimientos, 4, FormatoTabla.H_CENTER, Color.RED);
        } catch (Exception ex) {
            Logger.getLogger(this.getClass().getName()).log(Level.SEVERE, null, ex);
            b.writeToLog(this.getClass().getName() + "--> " + ex.getMessage());
        }
    } // end constructor

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        lblFamilia1 = new javax.swing.JLabel();
        txtArtcode = new javax.swing.JTextField();
        lblArtdesc = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblMovimientos = new javax.swing.JTable();
        cmdCerrar = new javax.swing.JButton();
        radEntrada = new javax.swing.JRadioButton();
        radSalida = new javax.swing.JRadioButton();
        jPanel1 = new javax.swing.JPanel();
        DatMovfech1 = new com.toedter.calendar.JDateChooser();
        lblFamilia2 = new javax.swing.JLabel();
        lblFamilia3 = new javax.swing.JLabel();
        DatMovfech2 = new com.toedter.calendar.JDateChooser();
        txtBodega = new javax.swing.JFormattedTextField();
        btnFiltro = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        mnuArchivo = new javax.swing.JMenu();
        mnuSalir = new javax.swing.JMenuItem();
        mnuEdicion = new javax.swing.JMenu();
        mnuBuscar = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Movimientos de inventario");

        lblFamilia1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblFamilia1.setText("Art√≠culo");

        txtArtcode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtArtcodeActionPerformed(evt);
            }
        });

        lblArtdesc.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblArtdesc.setForeground(new java.awt.Color(0, 102, 51));
        lblArtdesc.setText("Artdesc");

        tblMovimientos.setAutoCreateRowSorter(true);
        tblMovimientos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Documento", "Tipo", "Fecha", "Bodega", "Proveedor", "Cantidad", "usuario"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblMovimientos.setFillsViewportHeight(true);
        tblMovimientos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMovimientosMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tblMovimientosMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                tblMovimientosMouseExited(evt);
            }
        });
        jScrollPane2.setViewportView(tblMovimientos);
        tblMovimientos.getColumnModel().getColumn(0).setMinWidth(80);
        tblMovimientos.getColumnModel().getColumn(0).setPreferredWidth(90);
        tblMovimientos.getColumnModel().getColumn(0).setMaxWidth(150);
        tblMovimientos.getColumnModel().getColumn(1).setMinWidth(150);
        tblMovimientos.getColumnModel().getColumn(1).setPreferredWidth(230);
        tblMovimientos.getColumnModel().getColumn(1).setMaxWidth(350);
        tblMovimientos.getColumnModel().getColumn(2).setMinWidth(65);
        tblMovimientos.getColumnModel().getColumn(2).setPreferredWidth(80);
        tblMovimientos.getColumnModel().getColumn(2).setMaxWidth(85);
        tblMovimientos.getColumnModel().getColumn(3).setMinWidth(30);
        tblMovimientos.getColumnModel().getColumn(3).setPreferredWidth(50);
        tblMovimientos.getColumnModel().getColumn(3).setMaxWidth(70);

        cmdCerrar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        cmdCerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/control-power.png"))); // NOI18N
        cmdCerrar.setText("Salir");
        cmdCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCerrarActionPerformed(evt);
            }
        });

        buttonGroup1.add(radEntrada);
        radEntrada.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        radEntrada.setForeground(new java.awt.Color(255, 0, 255));
        radEntrada.setSelected(true);
        radEntrada.setText("Entrada");
        radEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radEntradaActionPerformed(evt);
            }
        });

        buttonGroup1.add(radSalida);
        radSalida.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        radSalida.setForeground(new java.awt.Color(255, 0, 255));
        radSalida.setText("Salida");
        radSalida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radSalidaActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Filtro"));

        lblFamilia2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblFamilia2.setText("Fechas:");

        lblFamilia3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblFamilia3.setText("Bodega:");

        txtBodega.setColumns(3);
        try {
            txtBodega.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("***")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtBodega.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtBodegaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtBodegaFocusLost(evt);
            }
        });

        btnFiltro.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnFiltro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/24x24 png icons/Filter.png"))); // NOI18N
        btnFiltro.setText("Aplicar/quitar filtro");
        btnFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFiltroActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(lblFamilia2)
                .addGap(11, 11, 11)
                .addComponent(DatMovfech1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DatMovfech2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblFamilia3)
                .addGap(8, 8, 8)
                .addComponent(txtBodega, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addComponent(btnFiltro))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {DatMovfech1, DatMovfech2});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblFamilia2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DatMovfech1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DatMovfech2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblFamilia3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtBodega, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnFiltro)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        mnuArchivo.setText("Archivo");

        mnuSalir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.CTRL_MASK));
        mnuSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/control-power.png"))); // NOI18N
        mnuSalir.setText("Salir");
        mnuSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuSalirActionPerformed(evt);
            }
        });
        mnuArchivo.add(mnuSalir);

        jMenuBar1.add(mnuArchivo);

        mnuEdicion.setText("Edici√≥n");

        mnuBuscar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.CTRL_MASK));
        mnuBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/binocular.png"))); // NOI18N
        mnuBuscar.setText("Buscar");
        mnuBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuBuscarActionPerformed(evt);
            }
        });
        mnuEdicion.add(mnuBuscar);

        jMenuBar1.add(mnuEdicion);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(754, Short.MAX_VALUE)
                .addComponent(cmdCerrar)
                .addGap(12, 12, 12))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 799, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(radEntrada)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radSalida)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 92, Short.MAX_VALUE)
                        .addComponent(lblFamilia1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtArtcode, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblArtdesc, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(radEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(radSalida, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblFamilia1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtArtcode, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblArtdesc, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 295, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmdCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4))
        );

        setSize(new java.awt.Dimension(833, 494));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void mnuSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuSalirActionPerformed
        dispose();
}//GEN-LAST:event_mnuSalirActionPerformed

    private void mnuBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuBuscarActionPerformed
        Buscador bd = new Buscador(new java.awt.Frame(), true,
                "inarticu", "artcode,artdesc", "artdesc", txtArtcode, conn);
        bd.setTitle("Buscar art√≠culos");
        bd.lblBuscar.setText("Art√≠culo");
        bd.setVisible(true);
        txtArtcodeActionPerformed(null);
}//GEN-LAST:event_mnuBuscarActionPerformed

    private void txtArtcodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtArtcodeActionPerformed
        String artcode = txtArtcode.getText().trim();
        String sqlSent
                = "Select artdesc "
                + "From inarticu Where artcode = ?";
        if (artcode.isEmpty()) {
            return;
        } // end if

        // Limpiar la tabla
        for (int i = 0; i < tblMovimientos.getModel().getRowCount(); i++) {
            for (int j = 0; j < tblMovimientos.getModel().getColumnCount(); j++) {
                tblMovimientos.setValueAt(null, i, j);
            } // end for
        } // end for

        try {
            PreparedStatement ps = conn.prepareStatement(sqlSent);
            ps.setString(1, artcode);
            ResultSet rs = ps.executeQuery();
            if (!Ut.goRecord(rs, Ut.FIRST)) {
                JOptionPane.showMessageDialog(null,
                        "Art√≠culo no existe.\n"
                        + "Pruebe con el buscador (CTRL + B).",
                        "Error",
                        JOptionPane.ERROR_MESSAGE);
                return;
            } // end if

            lblArtdesc.setText(rs.getString("artdesc").trim());

            // Cargar la tabla de movimientos
            cargarMovimientos();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,
                    ex.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            b.writeToLog(this.getClass().getName() + "--> " + ex.getMessage());
        } // end try-catch
    }//GEN-LAST:event_txtArtcodeActionPerformed

    private void cmdCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCerrarActionPerformed
        dispose();
}//GEN-LAST:event_cmdCerrarActionPerformed

    private void radEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radEntradaActionPerformed
        if (radEntrada.isSelected()) {
            this.setTitle("Movimientos de inventario (entradas)");
        }  // end if
        if (!txtArtcode.getText().trim().isEmpty()) {
            txtArtcodeActionPerformed(evt);
        }
    }//GEN-LAST:event_radEntradaActionPerformed

    private void radSalidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radSalidaActionPerformed
        if (radSalida.isSelected()) {
            this.setTitle("Movimientos de inventario (salidas)");
        } // end if
        if (!txtArtcode.getText().trim().isEmpty()) {
            txtArtcodeActionPerformed(evt);
        }
    }//GEN-LAST:event_radSalidaActionPerformed

    private void tblMovimientosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMovimientosMouseClicked
        int row = tblMovimientos.getSelectedRow();
        if (tblMovimientos.getValueAt(row, 1) == null) {
            return;
        } // end if
        String movdocu, tipoMov;
        movdocu = tblMovimientos.getValueAt(row, 0).toString();
        tipoMov = tblMovimientos.getValueAt(row, 1).toString();
        RepDocInv.main(conn, tipoMov, movdocu);
    }//GEN-LAST:event_tblMovimientosMouseClicked

    private void tblMovimientosMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMovimientosMouseEntered
        Cursor c;
        c = new Cursor(Cursor.HAND_CURSOR);
        this.setCursor(c);
    }//GEN-LAST:event_tblMovimientosMouseEntered

    private void tblMovimientosMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMovimientosMouseExited
        this.setCursor(null);
    }//GEN-LAST:event_tblMovimientosMouseExited

    private void txtBodegaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBodegaFocusGained
        txtBodega.selectAll();
    }//GEN-LAST:event_txtBodegaFocusGained

    private void txtBodegaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBodegaFocusLost
        txtBodega.setText(txtBodega.getText().toUpperCase());
    }//GEN-LAST:event_txtBodegaFocusLost

    private void btnFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFiltroActionPerformed
        txtArtcodeActionPerformed(evt);
    }//GEN-LAST:event_btnFiltroActionPerformed

    /**
     * @param c
     * @param artcode
     * @param mov
     */
    public static void main(Connection c, String artcode, int mov) {
        try {
            // Integraci√≥n del segundo nivel de seguridad.
            if (!UtilBD.tienePermiso(c, "ConsultaMovimientosInv")) {
                JOptionPane.showMessageDialog(null,
                        "Usted no est√° autorizado para ejecutar este proceso",
                        "Error - Permisos",
                        JOptionPane.ERROR_MESSAGE);
                return;
            } // end if
        } catch (Exception ex) {
            Logger.getLogger(ConsultaMovimientosInv.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null,
                    ex.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }

        ConsultaMovimientosInv run = new ConsultaMovimientosInv(c, artcode, mov);
        run.setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser DatMovfech1;
    private com.toedter.calendar.JDateChooser DatMovfech2;
    private javax.swing.JButton btnFiltro;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton cmdCerrar;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblArtdesc;
    private javax.swing.JLabel lblFamilia1;
    private javax.swing.JLabel lblFamilia2;
    private javax.swing.JLabel lblFamilia3;
    private javax.swing.JMenu mnuArchivo;
    private javax.swing.JMenuItem mnuBuscar;
    private javax.swing.JMenu mnuEdicion;
    private javax.swing.JMenuItem mnuSalir;
    private javax.swing.JRadioButton radEntrada;
    private javax.swing.JRadioButton radSalida;
    private javax.swing.JTable tblMovimientos;
    private javax.swing.JTextField txtArtcode;
    private javax.swing.JFormattedTextField txtBodega;
    // End of variables declaration//GEN-END:variables

    private void cargarMovimientos() {
        // En este select no se incluye la cl√°usula ORDER BY porque
        // la tabla tiene activada la propiedad de ordenamiento y por lo tanto
        // el usuario puede ordenar los datos por cualquier columna.
        String sqlSent
                = "Select "
                + "   a.movdocu, b.Descrip, dtoc(c.movfech) as movfech, "
                + "   a.bodega, a.procode, a.movcant, c.user "
                + "from inmovimd a "
                + "Inner join intiposdoc b on a.movtido = b.movtido "
                + "Inner join inmovime   c on a.movdocu = c.movdocu "
                + "and a.movtimo = c.movtimo and a.movtido = c.movtido "
                + "Where a.artcode = ? and a.movtimo = ? and c.estado is null";

        String movtimo = radEntrada.isSelected() ? "E" : "S";

        /*
         * Bosco agregado 05/05/2013
         * Agrego un filtro para que la consulta le sea m√°s √∫til al usuario.
         */
        String extraWhere = ""; // Se usa para aplicar los filtros adicionales
        java.sql.Timestamp movfech1 = null, movfech2 = null;
        int posParametro = 3;

        // Solo si ambos controles tienen fechas procedo a agregar este filtro
        if (DatMovfech1.getDate() != null && DatMovfech1.getDate() != null) {
            movfech1 = new java.sql.Timestamp(Ut.ttod(DatMovfech1.getDate().getTime()).getTime());
            //Date d = Ut.ttod(DatMovfech1.getDate().getTime());
            movfech2 = new java.sql.Timestamp(DatMovfech2.getDate().getTime());
            extraWhere += " and movfech between ? and ? ";
        } // end if

        // Solo si txtBodega es diferente de blanco aplico el filtro.
        if (!txtBodega.getText().trim().isEmpty()) {
            extraWhere += " and bodega = ? ";
        } // end if

        // Si hay alg√∫n filtro v√°lido lo agrego al select principal.
        if (!extraWhere.trim().isEmpty()) {
            sqlSent += extraWhere;
        } // end if
        /* Fin Bosco agregado 05/05/2013 */

        PreparedStatement ps;
        ResultSet rs;
        try {
            ps = conn.prepareStatement(sqlSent,
                    ResultSet.TYPE_SCROLL_SENSITIVE,
                    ResultSet.CONCUR_READ_ONLY);
            ps.setString(1, txtArtcode.getText().trim());
            ps.setString(2, movtimo);
            /*
             * Bosco agregado 05/05/2013
             * Verifico si hay filtro para aplicar y de ser as√≠ verifico
             * cu√°ntos par√°metros se deben establecer.
             */
            if (!extraWhere.trim().isEmpty()) {
                // movfech1 es v√°lida solo y solo si movfech2 tambi√©n lo es.
                if (movfech1 != null) {
                    ps.setTimestamp(posParametro, movfech1);
                    posParametro++;
                    ps.setTimestamp(posParametro, movfech2);
                    posParametro++;
                } // end if
                // Establecer el filtro de bodega.
                if (!txtBodega.getText().trim().isEmpty()) {
                    ps.setString(posParametro, txtBodega.getText().trim());
                } // end if
            } // end if
            /* Fin Bosco agregado 05/05/2013 */

            rs = CMD.select(ps);

            if (rs == null || !rs.first()) {
                return;
            } // end if

            // Establecer el tama√±o de la tabla.
            rs.last();
            int dataRows = rs.getRow();

            DefaultTableModel dtm = (DefaultTableModel) tblMovimientos.getModel();
            dtm.setRowCount(dataRows);
            tblMovimientos.setModel(dtm);

            // Cargar la tabla.
            int row = 0;
            rs.beforeFirst();
            while (rs.next()) {
                tblMovimientos.setValueAt(rs.getObject("movdocu"), row, 0);
                tblMovimientos.setValueAt(rs.getObject("descrip"), row, 1);
                tblMovimientos.setValueAt(rs.getObject("movfech"), row, 2);
                tblMovimientos.setValueAt(rs.getObject("bodega"), row, 3);
                tblMovimientos.setValueAt(rs.getObject("procode"), row, 4);
                tblMovimientos.setValueAt(rs.getDouble("movcant"), row, 5);
                tblMovimientos.setValueAt(rs.getObject("user"), row, 6);
                row++;
            } // end while
            ps.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,
                    ex.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
        }
    } // end cargarMovimientos
} // end class

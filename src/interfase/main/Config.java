/*
 * Config.java
 *
 * Created on 17/05/2009, 03:10:10 PM
 */
package interfase.main;

import Exceptions.NotUniqueValueException;
import Mail.Bitacora;
import accesoDatos.CMD;
import accesoDatos.UtilBD;
import interfase.otros.Navegador;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import logica.Fondo;
import logica.IMantenimiento;
import Exceptions.SQLInjectionException;
import logica.utilitarios.Ut;


/**
 *
 * @author Bosco Garita
 */
public final class Config extends javax.swing.JFrame implements IMantenimiento {
    private static final long serialVersionUID = 15L;

    private Connection conn = null;
    private ResultSet rs = null;
    private ResultSet rsMoneda = null;
    private Navegador nav = null;
    private String tabla = "";
    private boolean primeraVez;
    private Fondo FondoP;
    private String bodega;
    private String codigoTC;          // Código de moneda local
    private String codigoDolar;       // Código del dólar
    private short movtidoE, movtidoS; // Tipos de movimiento para inter-codigo
    //private boolean genasienfac;    // Generar asientos contables de facturación
    private boolean inicio = true;
    private Properties props;       // Configuración de correo electrónico
    private final Bitacora b = new Bitacora();

    /**
     * Creates new form Config
     *
     * @param c
     * @param wp
     */
    public Config(Connection c, Fondo wp) {
        initComponents();

        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                btnSalirActionPerformed(null);
            } // end windowClosing
        } // end class
        ); // end Listener

        FondoP = wp;
        conn = c;
        nav = new Navegador();
        nav.setConexion(c);
        tabla = "config";
        try {
            this.props = Ut.getMailConfig();
            rs = nav.cargarRegistro(Navegador.TODOS, "", tabla, "Empresa");
        } catch (IOException | SQLException | SQLInjectionException ex) {
            JOptionPane.showMessageDialog(null,
                    ex.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            b.writeToLog(this.getClass().getName() + "--> " + ex.getMessage(), Bitacora.ERROR);
            return;
        } // end try-catch

        cargarObjetos();

        inicio = false;
        ubicarCodigo(this.cboMoneda, codigoTC);
        ubicarCodigo(this.cbocodigoDolar, codigoDolar);
    } // end constructor

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        tabGeneral = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cboImpresion = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        cboMascaratel = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        spnNotifComInt = new javax.swing.JSpinner();
        cmdWallPaper = new javax.swing.JButton();
        txtWallPaper = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        cboMoneda = new javax.swing.JComboBox<String>();
        jLabel14 = new javax.swing.JLabel();
        cbocodigoDolar = new javax.swing.JComboBox<>();
        chkSincronizar = new javax.swing.JCheckBox();
        jLabel24 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        chkPrecioAut = new javax.swing.JCheckBox();
        chkRedondear = new javax.swing.JCheckBox();
        chkMultiBodega = new javax.swing.JCheckBox();
        chkBloquearConsDi = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();
        cboDescrip = new javax.swing.JComboBox<>();
        chkasignarprovaut = new javax.swing.JCheckBox();
        jLabel21 = new javax.swing.JLabel();
        cboMovtidoE = new javax.swing.JComboBox<>();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        cboMovtidoS = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        chkCreditoaf = new javax.swing.JCheckBox();
        chkAplicarNotaC = new javax.swing.JCheckBox();
        chkBloquearConR = new javax.swing.JCheckBox();
        txtDiasDevol = new javax.swing.JFormattedTextField();
        txtMora = new javax.swing.JFormattedTextField();
        txtIntervalo = new javax.swing.JFormattedTextField();
        txtIncrementoM = new javax.swing.JFormattedTextField();
        txtDiasG = new javax.swing.JFormattedTextField();
        chkDistPago = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        txtDescAutom = new javax.swing.JFormattedTextField();
        jLabel7 = new javax.swing.JLabel();
        txtBloqDias = new javax.swing.JFormattedTextField();
        chkExist0 = new javax.swing.JCheckBox();
        chkPrecio0 = new javax.swing.JCheckBox();
        chkRedond5 = new javax.swing.JCheckBox();
        chkBloquearConsF = new javax.swing.JCheckBox();
        chkBloquearFechaF = new javax.swing.JCheckBox();
        chkBloquearNpag = new javax.swing.JCheckBox();
        chkBloquearCatP = new javax.swing.JCheckBox();
        chkUsarIvi = new javax.swing.JCheckBox();
        spndiasFactTemp = new javax.swing.JSpinner();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        cboVariarPrecios = new javax.swing.JComboBox<>();
        chkGenAsienFac = new javax.swing.JCheckBox();
        chkfactcomoPOS = new javax.swing.JCheckBox();
        txtClicode = new javax.swing.JFormattedTextField();
        lblClidesc = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        cboformatoPrecio = new javax.swing.JComboBox<>();
        jLabel19 = new javax.swing.JLabel();
        cboformatoCant = new javax.swing.JComboBox<>();
        chkimprimirFactura = new javax.swing.JCheckBox();
        jLabel20 = new javax.swing.JLabel();
        spnPrecioOferta = new javax.swing.JSpinner();
        cboDiaOferta = new javax.swing.JComboBox<>();
        chkGenMovCaja = new javax.swing.JCheckBox();
        chkenviarFacturaE = new javax.swing.JCheckBox();
        chkUsarCabys = new javax.swing.JCheckBox();
        jPanel6 = new javax.swing.JPanel();
        radEnviarXML = new javax.swing.JRadioButton();
        radEnviarDatos = new javax.swing.JRadioButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        txtHost = new javax.swing.JTextField();
        chkAuth = new javax.swing.JCheckBox();
        chkstarttls = new javax.swing.JCheckBox();
        txtPort = new javax.swing.JFormattedTextField();
        txtUser = new javax.swing.JTextField();
        txtPassword = new javax.swing.JTextField();
        btnGuardar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Parámetros generales");

        jPanel1.setPreferredSize(new java.awt.Dimension(500, 200));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Destino de reportes");

        cboImpresion.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cboImpresion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pantalla", "Impresora", "Control manual" }));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Máscara telefónica");

        cboMascaratel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cboMascaratel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "##-##-##-##", "####-##-##", "####-####", "#-###-####", "########" }));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Intervalo para notificaciones");

        spnNotifComInt.setModel(new javax.swing.SpinnerNumberModel(0, 0, 999, 1));
        spnNotifComInt.setToolTipText("Minutos para notificar");

        cmdWallPaper.setText("Fondo de pantalla...");
        cmdWallPaper.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdWallPaperActionPerformed(evt);
            }
        });

        txtWallPaper.setEditable(false);
        txtWallPaper.setColumns(60);
        txtWallPaper.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtWallPaper.setForeground(java.awt.Color.blue);

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel13.setText("Moneda Predet.");
        jLabel13.setToolTipText("Moneda predeterminada - normalmente se usa la moneda local");

        cboMoneda.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cboMoneda.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboMoneda.setToolTipText("Usar Moneda local");
        cboMoneda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboMonedaActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel14.setText("Ref. Dólar");

        cbocodigoDolar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cbocodigoDolar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbocodigoDolar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbocodigoDolarActionPerformed(evt);
            }
        });

        chkSincronizar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        chkSincronizar.setText("Sincronizar catálogos");

        jLabel24.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel24.setText("(Se usa cuando se cargan archivos de texto de movimientos)");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(106, 106, 106)
                                .addComponent(cboImpresion, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(53, 53, 53)
                                .addComponent(spnNotifComInt, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(jLabel13)
                            .addComponent(jLabel2))
                        .addGap(12, 12, 12)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cboMascaratel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cboMoneda, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbocodigoDolar, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(48, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(chkSincronizar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel24))
                            .addComponent(cmdWallPaper)
                            .addComponent(txtWallPaper, javax.swing.GroupLayout.PREFERRED_SIZE, 618, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel1)
                    .addComponent(cboImpresion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(cboMascaratel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel13)
                    .addComponent(cboMoneda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel4)
                    .addComponent(spnNotifComInt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(cbocodigoDolar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addComponent(cmdWallPaper)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtWallPaper, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkSincronizar)
                    .addComponent(jLabel24))
                .addContainerGap(156, Short.MAX_VALUE))
        );

        tabGeneral.addTab("General", jPanel1);

        chkPrecioAut.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        chkPrecioAut.setText("Cambio de precios automático");

        chkRedondear.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        chkRedondear.setText("Redondear precios a entero");

        chkMultiBodega.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        chkMultiBodega.setText("Permitir documentos multi-bodega");

        chkBloquearConsDi.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        chkBloquearConsDi.setText("Bloquear consecutivo documentos Inv");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Bodega predeterminada");

        cboDescrip.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cboDescrip.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cboDescripMouseClicked(evt);
            }
        });
        cboDescrip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboDescripActionPerformed(evt);
            }
        });

        chkasignarprovaut.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        chkasignarprovaut.setText("Asignar proveedor default automáticamente");
        chkasignarprovaut.setToolTipText("Asigna el proveedor predeterminado automáticamente basado en el mejor costo de compra");

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel21.setText("Movimientos inter-código:");

        cboMovtidoE.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cboMovtidoE.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cboMovtidoEMouseClicked(evt);
            }
        });
        cboMovtidoE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboMovtidoEActionPerformed(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel22.setText("Entradas");

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel23.setText("Salidas");

        cboMovtidoS.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cboMovtidoS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cboMovtidoSMouseClicked(evt);
            }
        });
        cboMovtidoS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboMovtidoSActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chkBloquearConsDi)
                            .addComponent(chkMultiBodega)
                            .addComponent(chkRedondear)
                            .addComponent(chkPrecioAut)
                            .addComponent(chkasignarprovaut)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel21)
                            .addComponent(jLabel5)
                            .addComponent(jLabel22, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel23, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(8, 8, 8)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cboMovtidoE, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cboDescrip, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cboMovtidoS, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(124, Short.MAX_VALUE))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cboDescrip, cboMovtidoE, cboMovtidoS});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cboDescrip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel21)
                .addGap(4, 4, 4)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel22)
                    .addComponent(cboMovtidoE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(cboMovtidoS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chkPrecioAut)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkRedondear)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkMultiBodega)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkBloquearConsDi)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkasignarprovaut)
                .addContainerGap(167, Short.MAX_VALUE))
        );

        tabGeneral.addTab("Inventarios", jPanel2);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setText("Días para aceptar devoluciones:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setText("Interés moratorio:");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setText("Invervalo en días:");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setText("Incremento mensual:");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setText("Días de gracia:");

        chkCreditoaf.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        chkCreditoaf.setText("Permitir créditos a favor");

        chkAplicarNotaC.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        chkAplicarNotaC.setText("Aplicar notas de crédito al crearlas");

        chkBloquearConR.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        chkBloquearConR.setText("Bloquear consecutivo de recibos");

        txtDiasDevol.setColumns(3);
        txtDiasDevol.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        txtDiasDevol.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtDiasDevol.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtDiasDevol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDiasDevolActionPerformed(evt);
            }
        });
        txtDiasDevol.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDiasDevolFocusGained(evt);
            }
        });

        txtMora.setColumns(8);
        txtMora.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        txtMora.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtMora.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtMora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMoraActionPerformed(evt);
            }
        });
        txtMora.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtMoraFocusGained(evt);
            }
        });

        txtIntervalo.setColumns(3);
        txtIntervalo.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        txtIntervalo.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtIntervalo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtIntervalo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIntervaloActionPerformed(evt);
            }
        });
        txtIntervalo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtIntervaloFocusGained(evt);
            }
        });

        txtIncrementoM.setColumns(8);
        txtIncrementoM.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        txtIncrementoM.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtIncrementoM.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        txtDiasG.setColumns(3);
        txtDiasG.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        txtDiasG.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtDiasG.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        chkDistPago.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        chkDistPago.setText("Distribución automática de pago/NC");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtDiasDevol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtMora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtIntervalo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtIncrementoM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtDiasG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(45, 45, 45)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chkCreditoaf)
                    .addComponent(chkBloquearConR)
                    .addComponent(chkAplicarNotaC)
                    .addComponent(chkDistPago))
                .addGap(120, 120, 120))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(99, 99, 99)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtDiasDevol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkCreditoaf))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtMora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkBloquearConR))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtIntervalo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkAplicarNotaC))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(txtIncrementoM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(txtDiasG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chkDistPago)))
                .addContainerGap(198, Short.MAX_VALUE))
        );

        tabGeneral.addTab("Cuentas por cobrar", jPanel4);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("Descuento automático");

        txtDescAutom.setColumns(5);
        txtDescAutom.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        txtDescAutom.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtDescAutom.setToolTipText("Porcentaje de descuento a aplicar automáticamente en facturas de contado");
        txtDescAutom.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtDescAutom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDescAutomActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setText("Bloqueo automático");

        txtBloqDias.setColumns(4);
        txtBloqDias.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("####"))));
        txtBloqDias.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtBloqDias.setToolTipText("Días para bloquear cliente desde su última compra");
        txtBloqDias.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtBloqDias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBloqDiasActionPerformed(evt);
            }
        });

        chkExist0.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        chkExist0.setText("Facturar sin existencia");

        chkPrecio0.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        chkPrecio0.setText("Permitir precios en cero");

        chkRedond5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        chkRedond5.setText("Redondear facturas (5-10)");
        chkRedond5.setToolTipText("Aplica los precios");

        chkBloquearConsF.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        chkBloquearConsF.setText("Bloquear consecutivo de facturas");

        chkBloquearFechaF.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        chkBloquearFechaF.setText("Bloquear fecha de la factura");

        chkBloquearNpag.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        chkBloquearNpag.setText("Bloquear # pagos en la factura");

        chkBloquearCatP.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        chkBloquearCatP.setText("Bloquear categoría de precios y descuentos");

        chkUsarIvi.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        chkUsarIvi.setText("Los precios llevan el impuesto incluido");

        spndiasFactTemp.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        spndiasFactTemp.setModel(new javax.swing.SpinnerNumberModel(0, 0, 180, 1));
        spndiasFactTemp.setToolTipText("Número de días a conservar las facturas temporales");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel15.setText("Días facturas temporales");

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel16.setText("Precios");

        cboVariarPrecios.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cboVariarPrecios.setForeground(new java.awt.Color(255, 0, 51));
        cboVariarPrecios.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Permitir variación hacia arriba", "Permitir variación hacia abajo", "No permitir variación de precios", "Permitir cualquier variación" }));

        chkGenAsienFac.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        chkGenAsienFac.setText("Generar los asisentos contables");

        chkfactcomoPOS.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        chkfactcomoPOS.setText("Emular POS");

        txtClicode.setColumns(4);
        txtClicode.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("####"))));
        txtClicode.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtClicode.setToolTipText("Cliente predeterminado para emular POS");
        txtClicode.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtClicode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtClicodeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtClicodeFocusLost(evt);
            }
        });
        txtClicode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtClicodeActionPerformed(evt);
            }
        });

        lblClidesc.setForeground(java.awt.Color.blue);
        lblClidesc.setText("cliente");

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel18.setText("Formato precios");

        cboformatoPrecio.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cboformatoPrecio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "0.00", "#,##0.00", "#,##0.000", "#,##0.0000", "#,##0.00000", "#,##0.000000" }));
        cboformatoPrecio.setToolTipText("Formato numérico");

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel19.setText("Formato cantidades");

        cboformatoCant.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cboformatoCant.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "0.00", "#,##0.00", "#,##0.000", "#,##0.0000", "#,##0.00000", "#,##0.000000" }));
        cboformatoCant.setToolTipText("Formato numérico");

        chkimprimirFactura.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        chkimprimirFactura.setSelected(true);
        chkimprimirFactura.setText("Imprimir facturas y NC al guardar");

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel20.setText("Precio de oferta");

        spnPrecioOferta.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        spnPrecioOferta.setModel(new javax.swing.SpinnerNumberModel(Short.valueOf((short)1), Short.valueOf((short)1), Short.valueOf((short)5), Short.valueOf((short)1)));
        spnPrecioOferta.setToolTipText("Número de precio utilizado para ofertas");

        cboDiaOferta.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cboDiaOferta.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ninguno", "Domingo", "Lunes", "Martes", "Miércoles", "Jueves", "Viernes", "Sábado" }));
        cboDiaOferta.setToolTipText("Día en que se aplicará el precio de oferta");

        chkGenMovCaja.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        chkGenMovCaja.setText("Generar movimientos de caja");

        chkenviarFacturaE.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        chkenviarFacturaE.setText("Enviar documentos electrónicos");

        chkUsarCabys.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        chkUsarCabys.setText("Usar CABYS");

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Modo de envío de los documentos electrónicos"));

        buttonGroup1.add(radEnviarXML);
        radEnviarXML.setText("Enviar XML");

        buttonGroup1.add(radEnviarDatos);
        radEnviarDatos.setSelected(true);
        radEnviarDatos.setText("Enviar datos");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radEnviarXML)
                    .addComponent(radEnviarDatos))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(radEnviarXML)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radEnviarDatos)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtBloqDias, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDescAutom, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(spndiasFactTemp, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(chkBloquearCatP)
                    .addComponent(chkUsarIvi)
                    .addComponent(chkPrecio0)
                    .addComponent(chkRedond5)
                    .addComponent(chkBloquearConsF)
                    .addComponent(chkBloquearFechaF)
                    .addComponent(chkBloquearNpag)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addGap(18, 18, 18)
                        .addComponent(spnPrecioOferta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(cboDiaOferta, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(29, 29, 29)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 138, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cboVariarPrecios, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cboformatoCant, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cboformatoPrecio, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(chkimprimirFactura)
                                    .addComponent(chkExist0)
                                    .addComponent(chkGenAsienFac)
                                    .addComponent(chkGenMovCaja)
                                    .addComponent(chkenviarFacturaE)
                                    .addComponent(chkUsarCabys)
                                    .addComponent(jLabel18)
                                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(chkfactcomoPOS)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtClicode, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblClidesc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtDescAutom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(cboVariarPrecios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(cboformatoCant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(txtBloqDias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(cboformatoPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(spndiasFactTemp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(spnPrecioOferta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboDiaOferta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkimprimirFactura, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkPrecio0, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkExist0)
                    .addComponent(chkRedond5, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkfactcomoPOS, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtClicode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblClidesc)
                    .addComponent(chkBloquearConsF, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkGenAsienFac, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkBloquearFechaF, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkBloquearNpag, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkGenMovCaja, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkBloquearCatP, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkenviarFacturaE, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkUsarIvi, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkUsarCabys, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(70, Short.MAX_VALUE))
        );

        tabGeneral.addTab("Facturación", jPanel3);

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel25.setForeground(java.awt.Color.blue);
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel25.setText("Establecer los parámetros de configuración para GMAIL");

        jLabel26.setText("smtp host");

        jLabel29.setText("smtp port");

        jLabel30.setText("smtp user");

        jLabel31.setText("smtp password");

        chkAuth.setSelected(true);
        chkAuth.setText("smtp auth");

        chkstarttls.setSelected(true);
        chkstarttls.setText("smtp starttls enable");

        txtPort.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(chkAuth)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(chkstarttls))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel26, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel29, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel31, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel30, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(82, 82, 82)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 324, Short.MAX_VALUE)
                                    .addComponent(txtUser, javax.swing.GroupLayout.DEFAULT_SIZE, 324, Short.MAX_VALUE)
                                    .addComponent(txtHost, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtPort, javax.swing.GroupLayout.Alignment.LEADING))))
                        .addGap(64, 64, 64)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel25)
                .addGap(47, 47, 47)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel26)
                    .addComponent(txtHost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel29)
                    .addComponent(txtPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel30)
                    .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel31)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(70, 70, 70)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkAuth)
                    .addComponent(chkstarttls))
                .addContainerGap(142, Short.MAX_VALUE))
        );

        tabGeneral.addTab("Correo electrónico", jPanel5);

        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/WZSAVE.png"))); // NOI18N
        btnGuardar.setToolTipText("Guardar registro");
        btnGuardar.setMaximumSize(new java.awt.Dimension(93, 29));
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/WZCLOSE.png"))); // NOI18N
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(579, Short.MAX_VALUE)
                        .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSalir))
                    .addComponent(tabGeneral, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnGuardar, btnSalir});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(tabGeneral, javax.swing.GroupLayout.DEFAULT_SIZE, 456, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnSalir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        guardarRegistro();
}//GEN-LAST:event_btnGuardarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        try {
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(Config.class.getName()).log(Level.SEVERE, null, ex);
            b.writeToLog(this.getClass().getName() + "--> " + ex.getMessage(), Bitacora.ERROR);
        }
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void txtClicodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtClicodeActionPerformed
        txtClicode.transferFocus();
    }//GEN-LAST:event_txtClicodeActionPerformed

    private void txtClicodeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtClicodeFocusLost
        this.lblClidesc.setText("");
        try {
            this.lblClidesc.setText(
                    UtilBD.getDBString(conn, "inclient", "clicode = '"
                            + txtClicode.getText().trim() + "'", "clidesc"));
        } catch (NotUniqueValueException | SQLException ex) {
            Logger.getLogger(Config.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null,
                    ex.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            b.writeToLog(this.getClass().getName() + "--> " + ex.getMessage(), Bitacora.ERROR);
        } // end try-catch
    }//GEN-LAST:event_txtClicodeFocusLost

    private void txtClicodeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtClicodeFocusGained
        txtClicode.selectAll();
    }//GEN-LAST:event_txtClicodeFocusGained

    private void txtBloqDiasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBloqDiasActionPerformed
        txtBloqDias.transferFocus();
    }//GEN-LAST:event_txtBloqDiasActionPerformed

    private void txtDescAutomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDescAutomActionPerformed
        txtDescAutom.transferFocus();
    }//GEN-LAST:event_txtDescAutomActionPerformed

    private void txtIntervaloFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtIntervaloFocusGained
        txtIntervalo.selectAll();
    }//GEN-LAST:event_txtIntervaloFocusGained

    private void txtIntervaloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIntervaloActionPerformed
        txtIntervalo.transferFocus();
    }//GEN-LAST:event_txtIntervaloActionPerformed

    private void txtMoraFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMoraFocusGained
        txtMora.selectAll();
    }//GEN-LAST:event_txtMoraFocusGained

    private void txtMoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMoraActionPerformed
        txtMora.transferFocus();
    }//GEN-LAST:event_txtMoraActionPerformed

    private void txtDiasDevolFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDiasDevolFocusGained
        txtDiasDevol.selectAll();
    }//GEN-LAST:event_txtDiasDevolFocusGained

    private void txtDiasDevolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDiasDevolActionPerformed
        txtDiasDevol.transferFocus();
    }//GEN-LAST:event_txtDiasDevolActionPerformed

    private void cboMovtidoSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboMovtidoSActionPerformed
        if (inicio) {
            return;
        } // end if
        cboMovtidoSMouseClicked(null);
    }//GEN-LAST:event_cboMovtidoSActionPerformed

    private void cboMovtidoSMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cboMovtidoSMouseClicked
        if (this.cboMovtidoS.getSelectedItem() == null) {
            return;
        } // end if
        String temp = this.cboMovtidoS.getSelectedItem().toString().substring(0, 3).trim();
        this.movtidoS = Short.parseShort(temp);
    }//GEN-LAST:event_cboMovtidoSMouseClicked

    private void cboMovtidoEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboMovtidoEActionPerformed
        if (inicio) {
            return;
        } // end if
        cboMovtidoEMouseClicked(null);
    }//GEN-LAST:event_cboMovtidoEActionPerformed

    private void cboMovtidoEMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cboMovtidoEMouseClicked
        if (this.cboMovtidoE.getSelectedItem() == null) {
            return;
        } // end if
        String temp = this.cboMovtidoE.getSelectedItem().toString().substring(0, 3).trim();
        this.movtidoE = Short.parseShort(temp);
    }//GEN-LAST:event_cboMovtidoEMouseClicked

    private void cboDescripActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboDescripActionPerformed
        if (inicio) {
            return;
        } // end if
        cboDescripMouseClicked(null);
    }//GEN-LAST:event_cboDescripActionPerformed

    private void cboDescripMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cboDescripMouseClicked
        bodega = this.cboDescrip.getSelectedItem().toString().substring(0, 3);
    }//GEN-LAST:event_cboDescripMouseClicked

    private void cbocodigoDolarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbocodigoDolarActionPerformed
        ubicarCodigo(this.cbocodigoDolar, "Dólar");
    }//GEN-LAST:event_cbocodigoDolarActionPerformed

    private void cboMonedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboMonedaActionPerformed
        ubicarCodigo(this.cboMoneda, "Local");
    }//GEN-LAST:event_cboMonedaActionPerformed

    private void cmdWallPaperActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdWallPaperActionPerformed
        // Mostrar cuadro de diálogo para que el usuario pueda seleccionar el archivo
        JFileChooser selectorArchivo = new JFileChooser();
        selectorArchivo.setFileSelectionMode(JFileChooser.FILES_ONLY);

        int resultado = selectorArchivo.showOpenDialog(null);

        // Si el usuario hizo clic en el botón Cancelar del cuadro de diálogo, regresar
        if (resultado == JFileChooser.CANCEL_OPTION) {
            return;
        } // end if
        // obtener el archivo seleccionado
        File nombreArchivo = selectorArchivo.getSelectedFile();
        txtWallPaper.setText(nombreArchivo.getAbsolutePath());

        // Cambio la imagen del fondo de pantalla.
        // Este fondo solo será temporal si el usuario no oprime guardar.
        FondoP.setImagen(txtWallPaper.getText());

    }//GEN-LAST:event_cmdWallPaperActionPerformed

    /**
     * @param c Connection conexión a la base de datos
     * @param wp Fondo Fondo de pantalla
     */
    public static void main(final Connection c, final Fondo wp) {
        try {
            // Bosco agregado 18/07/2011
            // Integración del segundo nivel de seguridad.
            if (!UtilBD.tienePermiso(c, "Config")) {
                JOptionPane.showMessageDialog(null,
                        "Usted no está autorizado para ejecutar este proceso",
                        "Error - Permisos",
                        JOptionPane.ERROR_MESSAGE);
                return;
            } // end if
        } catch (Exception ex) {
            Logger.getLogger(Config.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null,
                    ex.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        // Fin Bosco agregado 18/07/2011
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Config(c, wp).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnSalir;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cboDescrip;
    private javax.swing.JComboBox<String> cboDiaOferta;
    private javax.swing.JComboBox<String> cboImpresion;
    private javax.swing.JComboBox<String> cboMascaratel;
    private javax.swing.JComboBox<String> cboMoneda;
    private javax.swing.JComboBox<String> cboMovtidoE;
    private javax.swing.JComboBox<String> cboMovtidoS;
    private javax.swing.JComboBox<String> cboVariarPrecios;
    private javax.swing.JComboBox<String> cbocodigoDolar;
    private javax.swing.JComboBox<String> cboformatoCant;
    private javax.swing.JComboBox<String> cboformatoPrecio;
    private javax.swing.JCheckBox chkAplicarNotaC;
    private javax.swing.JCheckBox chkAuth;
    private javax.swing.JCheckBox chkBloquearCatP;
    private javax.swing.JCheckBox chkBloquearConR;
    private javax.swing.JCheckBox chkBloquearConsDi;
    private javax.swing.JCheckBox chkBloquearConsF;
    private javax.swing.JCheckBox chkBloquearFechaF;
    private javax.swing.JCheckBox chkBloquearNpag;
    private javax.swing.JCheckBox chkCreditoaf;
    private javax.swing.JCheckBox chkDistPago;
    private javax.swing.JCheckBox chkExist0;
    private javax.swing.JCheckBox chkGenAsienFac;
    private javax.swing.JCheckBox chkGenMovCaja;
    private javax.swing.JCheckBox chkMultiBodega;
    private javax.swing.JCheckBox chkPrecio0;
    private javax.swing.JCheckBox chkPrecioAut;
    private javax.swing.JCheckBox chkRedond5;
    private javax.swing.JCheckBox chkRedondear;
    private javax.swing.JCheckBox chkSincronizar;
    private javax.swing.JCheckBox chkUsarCabys;
    private javax.swing.JCheckBox chkUsarIvi;
    private javax.swing.JCheckBox chkasignarprovaut;
    private javax.swing.JCheckBox chkenviarFacturaE;
    private javax.swing.JCheckBox chkfactcomoPOS;
    private javax.swing.JCheckBox chkimprimirFactura;
    private javax.swing.JCheckBox chkstarttls;
    private javax.swing.JButton cmdWallPaper;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JLabel lblClidesc;
    private javax.swing.JRadioButton radEnviarDatos;
    private javax.swing.JRadioButton radEnviarXML;
    private javax.swing.JSpinner spnNotifComInt;
    private javax.swing.JSpinner spnPrecioOferta;
    private javax.swing.JSpinner spndiasFactTemp;
    private javax.swing.JTabbedPane tabGeneral;
    private javax.swing.JFormattedTextField txtBloqDias;
    private javax.swing.JFormattedTextField txtClicode;
    private javax.swing.JFormattedTextField txtDescAutom;
    private javax.swing.JFormattedTextField txtDiasDevol;
    private javax.swing.JFormattedTextField txtDiasG;
    private javax.swing.JTextField txtHost;
    private javax.swing.JFormattedTextField txtIncrementoM;
    private javax.swing.JFormattedTextField txtIntervalo;
    private javax.swing.JFormattedTextField txtMora;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JFormattedTextField txtPort;
    private javax.swing.JTextField txtUser;
    private javax.swing.JTextField txtWallPaper;
    // End of variables declaration//GEN-END:variables

    @Override
    public void cargarObjetos() {
        // Bosco agregado 24/12/2018
        this.txtHost.setText(this.props.getProperty("mail.smtp.host"));
        this.txtPort.setText(this.props.getProperty("mail.smtp.port"));
        this.txtUser.setText(this.props.getProperty("mail.smtp.user"));
        this.txtPassword.setText(this.props.getProperty("mail.smtp.clave"));
        this.chkAuth.setSelected(this.props.getProperty("mail.smtp.auth").equalsIgnoreCase("true"));
        this.chkstarttls.setSelected(this.props.getProperty("mail.smtp.starttls.enable").equalsIgnoreCase("true"));
        // Fin Bosco agregado 24/12/2018
        String destReportes;
        try {
            // Si no hay registros entonces incializo la bandera de primera vez
            if (!rs.first()) {
                primeraVez = true;
                return;
            } // end if

            // Cejilla General
            destReportes = rs.getString("Impresion");
            switch (destReportes) {
                case "P":
                    // Pantalla
                    cboImpresion.setSelectedIndex(0);
                    break;
                case "I":
                    // Impresosra
                    cboImpresion.setSelectedIndex(1);
                    break;
                default:
                    // Control manual
                    cboImpresion.setSelectedIndex(2);
                    break;
            } // end switch

            codigoTC = rs.getString("codigoTC").trim();

            // Bosco agregado 31/10/2010.
            // Si ya se ha establecido la moneda local no permito
            // que se vuelva a cambiar (ver documento técnico).
            if (!codigoTC.isEmpty()) {
                this.cboMoneda.setEnabled(false);
                this.cboMoneda.setToolTipText("No se puede cambiar");
            } // end if
            // Fin Bosco agregado 31/10/2010.

            codigoDolar = rs.getString("codigoDolar").trim();
            cargarMonedas();
            cboMascaratel.setSelectedItem(rs.getObject("Mascaratel"));
            spnNotifComInt.setValue(rs.getObject("NotifComInt"));
            txtWallPaper.setText((String) rs.getObject("WallPaper"));
            chkSincronizar.setSelected(rs.getBoolean("sincronizarTablas"));

            // Cejilla Inventarios
            bodega = rs.getString("bodega");
            boolean continuar;
            int indice;
            // Cargar el combo y elegir la que aparezca en la base de datos
            try (ResultSet rsBodega = // Cargar todas las bodegas
                    nav.ejecutarQuery(
                            "Select concat(bodega,' ',descrip) from bodegas")) {
                // Cargar el combo y elegir la que aparezca en la base de datos
                continuar = (rsBodega != null && rsBodega.first());
                indice = 0;
                this.cboDescrip.addItem("    Ninguna");
                indice++;
                while (continuar) {
                    this.cboDescrip.addItem(rsBodega.getString(1));
                    if (rsBodega.getString(1).substring(0, 3).equals(bodega)) {
                        this.cboDescrip.setSelectedIndex(indice);
                    } // end if
                    continuar = rsBodega.next();
                    indice++;
                } // end while
            }

            // Agregado Bosco 05/02/2015
            movtidoE = rs.getShort("movtidoE");
            movtidoS = rs.getShort("movtidoS");
            ResultSet rsMovtido = // Cargar los tipos de documento
                    nav.ejecutarQuery(
                            "Select movtido, concat(lpad(movtido,3,' '),' ',descrip), EntradaSalida from intiposdoc");
            continuar = (rsMovtido != null && rsMovtido.first());
            indice = 0;
            int indiceS = 0;
            short movtido;
            String ES;

            while (continuar) {
                movtido = rsMovtido.getShort("movtido");
                ES = rsMovtido.getString("EntradaSalida").trim();

                if (ES.isEmpty() || ES.equals("E")) {
                    this.cboMovtidoE.addItem(rsMovtido.getString(2));
                    indice++;
                } // end if

                if (ES.isEmpty() || ES.equals("S")) {
                    this.cboMovtidoS.addItem(rsMovtido.getString(2));
                    indiceS++;
                } // end if

                if ((ES.isEmpty() || ES.equals("E")) && movtido == this.movtidoE) {
                    this.cboMovtidoE.setSelectedIndex(indice - 1);
                } // end if
                if ((ES.isEmpty() || ES.equals("S")) && movtido == this.movtidoS) {
                    this.cboMovtidoS.setSelectedIndex(indiceS - 1);
                } // end if
                continuar = rsMovtido.next();
            } // end while
            rsMovtido.close();
            // Fin Agregado Bosco 05/02/2015

            this.chkPrecioAut.setSelected(rs.getBoolean("PrecioAut"));
            this.chkRedondear.setSelected(rs.getBoolean("Redondear"));
            this.chkMultiBodega.setSelected(rs.getBoolean("MultiBodega"));
            this.chkBloquearConsDi.setSelected(rs.getBoolean("BloquearConsDi"));
            this.chkasignarprovaut.setSelected(rs.getBoolean("asignarprovaut")); // Bosco agregado 30/12/2013

            // Cejilla Facturación
            this.txtDescAutom.setText(Ut.setDecimalFormat(Float.toString(
                    rs.getFloat("DescAutom")), "#,##0.00"));
            this.txtBloqDias.setText(Integer.toString(rs.getInt("BloqDias")));
            this.chkExist0.setSelected(rs.getBoolean("Exist0"));
            this.chkPrecio0.setSelected(rs.getBoolean("Precio0"));
            this.chkRedond5.setSelected(rs.getBoolean("Redond5"));
            this.chkBloquearConsF.setSelected(rs.getBoolean("BloquearConsF"));
            this.chkBloquearFechaF.setSelected(rs.getBoolean("BloquearFechaF"));
            this.chkBloquearNpag.setSelected(rs.getBoolean("BloquearNpag"));
            this.chkBloquearCatP.setSelected(rs.getBoolean("BloquearCatP"));
            this.chkUsarIvi.setSelected(rs.getBoolean("UsarIvi"));
            this.chkUsarCabys.setSelected(rs.getBoolean("usarCabys"));
            this.spndiasFactTemp.setValue(rs.getObject("diasFactTemp"));
            this.cboVariarPrecios.setSelectedIndex(rs.getInt("variarprecios") - 1);
            this.chkGenAsienFac.setSelected(rs.getBoolean("genasienfac"));
            this.chkGenMovCaja.setSelected(rs.getBoolean("genmovcaja")); // Agregado 08/07/2015
            // Bosco agregado 24/12/2013
            Ut.seek(this.cboformatoCant, rs.getString("formatoCant"));
            Ut.seek(this.cboformatoPrecio, rs.getString("formatoPrecio"));
            // Fin Bosco agregado 24/12/2013

            // Bosco agregado 26/12/2013
            this.chkimprimirFactura.setSelected(rs.getBoolean("imprimirFactura"));
            // Fin Bosco agregado 26/12/2013

            // Bosco agregado 01/03/2014
            this.spnPrecioOferta.setValue(rs.getShort("precioOferta"));
            this.cboDiaOferta.setSelectedIndex(rs.getInt("diaOferta"));
            // Fin Bosco agregado 01/03/2014
            
            // Bosco agregado 17/07/2019. Este campo decide si se envían o no los documentos electrónicos.
            this.chkenviarFacturaE.setSelected(rs.getBoolean("enviarFacturaE"));
            // Fin Bosco agregado 17/07/2019
            
            this.radEnviarDatos.setSelected(true);
            if (rs.getInt("modoFacturaE") == 1){
                this.radEnviarXML.setSelected(true);
            }

            // Cejilla Cuentas por cobrar
            this.txtDiasDevol.setText(Integer.toString(rs.getInt("DiasDevol")));
            this.txtMora.setText(Ut.setDecimalFormat(Float.toString(
                    rs.getFloat("Mora")), "#,##0.00"));
            this.txtIntervalo.setText(Integer.toString(rs.getInt("Intervalo")));
            this.txtIncrementoM.setText(Ut.setDecimalFormat(Float.toString(
                    rs.getFloat("IncrementoM")), "#,##0.00"));
            this.txtDiasG.setText(Integer.toString(rs.getInt("DiasG")));
            this.chkCreditoaf.setSelected(rs.getBoolean("Creditoaf"));
            this.chkAplicarNotaC.setSelected(rs.getBoolean("AplicarNotaC"));
            this.chkBloquearConR.setSelected(rs.getBoolean("BloquearConR"));
            // Bosco agregado 22/12/2011.
            this.chkDistPago.setSelected(rs.getBoolean("DistPago"));
            // Fin Bosco agregado 22/12/2011.

            // Ubico el código de moneda en el rsMoneda
            if (cboMoneda == null) {
                return;
            } // end if

            if (Ut.seek(rsMoneda, codigoTC, "codigo")) {
                Ut.seek(cboMoneda, rsMoneda.getString("descrip"));
            } // end if

            if (Ut.seek(rsMoneda, codigoDolar, "codigo")) {
                Ut.seek(cbocodigoDolar, rsMoneda.getString("descrip"));
            } // end if

            // Bosco agregado 10/12/2013
            this.chkfactcomoPOS.setSelected(rs.getBoolean("factcomoPOS"));
            this.txtClicode.setText(rs.getString("clicode"));
            this.txtClicodeFocusLost(null);
            // Fin Bosco agregado 10/12/2013
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null,
                    ex.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            b.writeToLog(this.getClass().getName() + "--> " + ex.getMessage(), Bitacora.ERROR);
        } // end try-catch

    } // end cargarObjetos

    @Override
    public boolean consultarRegistro(String llave) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void guardarRegistro() {
        try {
            // Validar el precio de oferta.
            if (!sePuedeUsarPrecio()) {
                JOptionPane.showMessageDialog(null,
                        "Este precio ya está asignado a algún cliente.\n"
                        + "Debe ir al mantenimiento de clientes y modificar\n"
                        + "el número de precio del o los clientes que lo \n"
                        + "lo estén utilizando o utilizar otro número en esta\n"
                        + "misma pantalla.");
                return;
            } // end if
        } catch (SQLException ex) {
            Logger.getLogger(Config.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null,
                    ex.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            b.writeToLog(this.getClass().getName() + "--> " + ex.getMessage(), Bitacora.ERROR);
            return;
        } // end if

        // Cejilla General
        String impresion, mascaratel, wallPaper, timbre;
        short notifComInt;

        switch (cboImpresion.getSelectedIndex()) {
            case 0:
                impresion = "P";
                break;
            case 1:
                impresion = "I";
                break;
            default:
                impresion = "M";
        } // end switch

        mascaratel = cboMascaratel.getSelectedItem().toString().trim();

        notifComInt = Short.parseShort(spnNotifComInt.getValue().toString().trim());
        wallPaper = txtWallPaper.getText().trim();
        short sincronizar = (short) (this.chkSincronizar.isSelected() ? 1 : 0);

        // Cambio el back slash por el slash
        String tempWP = "";
        for (int i = 0; i < wallPaper.length(); i++) {
            if (wallPaper.charAt(i) == '\\') {
                tempWP = tempWP + "/";
            } else {
                tempWP = tempWP + wallPaper.charAt(i);
            } // end if
        } // end for
        wallPaper = tempWP;

        // Cejilla Inventarios
        short precioAut, redondear, multiBodega, bloquearConsDi;
        boolean asignarprovaut; // Bosco agregado 30/12/2013

        // Aquí no se usa una variable para la bodega predeterminada
        // porque ya existe una que se carga al inicio y que es modi-
        // ficada cada vez que el usuario elige algún valor del combo.
        precioAut = (short) (this.chkPrecioAut.isSelected() ? 1 : 0);
        redondear = (short) (this.chkRedondear.isSelected() ? 1 : 0);
        multiBodega = (short) (this.chkMultiBodega.isSelected() ? 1 : 0);
        bloquearConsDi = (short) (this.chkBloquearConsDi.isSelected() ? 1 : 0);
        asignarprovaut = this.chkasignarprovaut.isSelected(); // Bosco agregado 30/12/2013

        // Cejilla Facturación
        short bloqDias, exist0, precio0, redond5, bloquearConsF,
                bloquearFechaF, bloquearNpag, bloquearCatP, usarIvi,
                diasFactTemp, variarprecios, genasienfac, factcomoPOS,
                precioOferta, diaOferta, genmovcaja, enviarFacturaE,
                usarCabys;
        float descAutomatico;
        // Bosco agregado 24/12/2013
        String formatoCant, formatoPrecio;
        formatoCant = this.cboformatoCant.getSelectedItem().toString();
        formatoPrecio = this.cboformatoPrecio.getSelectedItem().toString();
        // Fin Bosco agregado 24/12/2013

        // Bosco agregado 26/12/213
        boolean imprimirFactura = this.chkimprimirFactura.isSelected();
        // Fin Bosco agregado 26/12/213

        try {
            descAutomatico = Float.valueOf(Ut.quitarFormato(
                    txtDescAutom.getText().trim()));
            bloqDias = Short.parseShort(Ut.quitarFormato(
                    txtBloqDias.getText().trim()));
            precioOferta = Short.parseShort(spnPrecioOferta.getValue().toString()); // Bosco agregado 01/03/2014
        } catch (Exception ex) {
            Logger.getLogger(Config.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null,
                    ex.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            b.writeToLog(this.getClass().getName() + "--> " + ex.getMessage(), Bitacora.ERROR);
            return;
        } // end try-catch

        diaOferta = (short) cboDiaOferta.getSelectedIndex(); // Bosco agregado 01/03/2014

        exist0 = (short) (this.chkExist0.isSelected() ? 1 : 0);
        precio0 = (short) (this.chkPrecio0.isSelected() ? 1 : 0);
        redond5 = (short) (this.chkRedond5.isSelected() ? 1 : 0);
        bloquearConsF = (short) (this.chkBloquearConsF.isSelected() ? 1 : 0);
        bloquearFechaF = (short) (this.chkBloquearFechaF.isSelected() ? 1 : 0);
        bloquearNpag = (short) (this.chkBloquearNpag.isSelected() ? 1 : 0);
        bloquearCatP = (short) (this.chkBloquearCatP.isSelected() ? 1 : 0);
        usarIvi     = (short) (this.chkUsarIvi.isSelected() ? 1 : 0);
        usarCabys   = (short) (this.chkUsarCabys.isSelected() ? 1 : 0);
        diasFactTemp = Short.parseShort(this.spndiasFactTemp.getValue().toString());
        variarprecios = (short) (this.cboVariarPrecios.getSelectedIndex() + 1);
        genasienfac = (short) (this.chkGenAsienFac.isSelected() ? 1 : 0);
        genmovcaja = (short) (this.chkGenMovCaja.isSelected() ? 1 : 0); // Bosco agregado 08/07/2015

        // Bosco agregado 10/12/2013
        factcomoPOS = (short) (this.chkfactcomoPOS.isSelected() ? 1 : 0);
        int clicode = Integer.parseInt(this.txtClicode.getText().trim());
        // Fin Bosco agregado 10/12/2013
        
        // Bosco agregado 17/07/2019
        enviarFacturaE = (short) (this.chkenviarFacturaE.isSelected() ? 1 : 0);
        // Fin Bosco agregado 17/07/2019

        // Cejilla Cuentas por cobrar
        short diasDevol, intervalo, diasG, creditoaf,
                aplicarNotaC, bloquearConR, distPago;
        float mora, incrementoM;

        try {
            diasDevol = Short.parseShort(Ut.quitarFormato(
                    txtDiasDevol.getText().trim()));
            mora = Float.parseFloat(Ut.quitarFormato(
                    txtMora.getText().trim()));
            intervalo = Short.parseShort(Ut.quitarFormato(
                    txtIntervalo.getText().trim()));
            incrementoM = Float.parseFloat(Ut.quitarFormato(
                    txtIncrementoM.getText().trim()));
            diasG = Short.parseShort(Ut.quitarFormato(txtDiasG.getText().trim()));
        } catch (Exception ex) {
            Logger.getLogger(Config.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null,
                    ex.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            b.writeToLog(this.getClass().getName() + "--> " + ex.getMessage(), Bitacora.ERROR);
            return;
        } // end try-catch

        creditoaf = (short) (this.chkCreditoaf.isSelected() ? 1 : 0);
        aplicarNotaC = (short) (this.chkAplicarNotaC.isSelected() ? 1 : 0);
        bloquearConR = (short) (this.chkBloquearConR.isSelected() ? 1 : 0);
        distPago = (short) (this.chkDistPago.isSelected() ? 1 : 0);

        // Preparo la sentencial SQL
        String sqlUpdate = null;
        PreparedStatement ps;
        if (!primeraVez) {
            // La tabla config tiene un trigger que se encarga de
            // cambiar la máscara telefónica en toda la base de datos.
            sqlUpdate
                    = "Update config Set "
                    + "Impresion   = ?," +  // 1
                    "Mascaratel  = ?," +    // 2
                    "NotifComInt = ?," +    // 3
                    "WallPaper   = ?," +    // 4
                    "codigoTC    = ?," +    // 5
                    "codigoDolar = ?," +    // 6
                    "PrecioAut   = ?," +    // 7
                    "Redondear   = ?," +    // 8
                    "MultiBodega = ?," +    // 9
                    "BloquearConsDi = ?," + // 10
                    "Bodega      = ?," +    // 11
                    "DescAutom   = ?," +    // 12
                    "BloqDias    = ?," +    // 13
                    "Exist0      = ?," +    // 14
                    "Precio0     = ?," +    // 15
                    "Redond5     = ?," +    // 16
                    "BloquearConsF  = ?," + // 17
                    "BloquearFechaF = ?," + // 18
                    "BloquearNpag   = ?," + // 19
                    "BloquearCatP   = ?," + // 20
                    "UsarIvi        = ?," + // 21
                    "diasFactTemp   = ?," + // 22
                    "variarprecios  = ?," + // 23
                    "timbre         = ?," + // 24
                    "genasienfac    = ?," + // 25
                    "DiasDevol      = ?," + // 26
                    "Mora           = ?," + // 27
                    "Intervalo      = ?," + // 28
                    "IncrementoM    = ?," + // 29
                    "DiasG          = ?," + // 30
                    "Creditoaf      = ?," + // 31
                    "AplicarNotaC   = ?," + // 32
                    "BloquearConR   = ?," + // 33
                    "factcomoPOS    = ?," + // 34
                    "clicode        = ?," + // 35
                    "DistPago       = ?," + // 36
                    "formatoCant    = ?," + // 37  Bosco agregado 24/12/2013
                    "formatoPrecio  = ?," + // 38  Bosco agregado 24/12/2013
                    "imprimirFactura= ?," + // 39  Bosco agregado 26/12/2013
                    "asignarprovaut = ?," + // 40  Bosco agregado 30/12/2013
                    "precioOferta   = ?," + // 41  Bosco agregado 01/03/2014
                    "diaOferta      = ?," + // 42  Bosco agregado 01/03/2014
                    "movtidoE       = ?," + // 43  Bosco agregado 08/02/2015
                    "movtidoS       = ?," + // 44  Bosco agregado 08/02/2015
                    "genmovcaja     = ?," + // 45  Bosco agregado 08/07/2015
                    "enviarFacturaE = ?," + // 46  Bosco agregado 17/07/2019
                    "sincronizarTablas = ?, " + // 47  Bosco agregado 16/08/2016
                    "usarCabys = ?, " +         // 48
                    "modoFacturaE = ? ";        // 49 

        } else {
            // Falta codificar para cuando es la primera vez que se crea
            // el registro. Esto realmente no es necesario porque cuando
            // se instala el sistema eso es lo primero que se hace.
        } // end if

        try {
            ps = conn.prepareStatement(sqlUpdate);

            // Cejilla General
            ps.setString(1, impresion);
            ps.setString(2, mascaratel);
            ps.setShort(3, notifComInt);
            ps.setString(4, wallPaper);
            ps.setString(5, codigoTC);
            ps.setString(6, codigoDolar);
            ps.setShort(47, sincronizar);

            // Cejilla Inventarios
            ps.setShort(7, precioAut);
            ps.setShort(8, redondear);
            ps.setShort(9, multiBodega);
            ps.setShort(10, bloquearConsDi);
            ps.setString(11, bodega);
            ps.setShort(43, movtidoE);
            ps.setShort(44, movtidoS);

            // Cejilla Facturación
            ps.setFloat(12, descAutomatico);
            ps.setShort(13, bloqDias);
            ps.setShort(14, exist0);
            ps.setShort(15, precio0);
            ps.setShort(16, redond5);
            ps.setShort(17, bloquearConsF);
            ps.setShort(18, bloquearFechaF);
            ps.setShort(19, bloquearNpag);
            ps.setShort(20, bloquearCatP);
            ps.setShort(21, usarIvi);
            ps.setShort(22, diasFactTemp);
            ps.setShort(23, variarprecios);
            ps.setString(24, ""); // Timbre, ya no se usa
            ps.setShort(25, genasienfac);
            ps.setShort(45, genmovcaja);
            ps.setShort(46, enviarFacturaE);
            ps.setShort(48, usarCabys);
            ps.setInt(49, this.radEnviarXML.isSelected() ? 1:2);

            // Cejilla Cuentas por cobrar
            ps.setShort(26, diasDevol);
            ps.setFloat(27, mora);
            ps.setShort(28, intervalo);
            ps.setFloat(29, incrementoM);
            ps.setShort(30, diasG);
            ps.setShort(31, creditoaf);
            ps.setShort(32, aplicarNotaC);
            ps.setShort(33, bloquearConR);
            ps.setShort(34, factcomoPOS);
            ps.setInt(35, clicode);
            ps.setShort(36, distPago);
            ps.setString(37, formatoCant);      // Bosco agregado 24/12/2013
            ps.setString(38, formatoPrecio);    // Bosco agregado 24/12/2013
            ps.setBoolean(39, imprimirFactura); // Bosco agregado 26/12/2013
            ps.setBoolean(40, asignarprovaut);  // Bosco agregado 30/12/2013
            ps.setShort(41, precioOferta);      // Bosco agregado 01/03/2014
            ps.setShort(42, diaOferta);         // Bosco agregado 01/03/2014

            CMD.update(ps);
            ps.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,
                    ex.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            b.writeToLog(this.getClass().getName() + "--> " + ex.getMessage(), Bitacora.ERROR);
            return;
        } // end try-catch

        // Cejilla correo electrónico
        try (FileWriter fw = new FileWriter("mail.props")) {
            props.put("mail.smtp.host", this.txtHost.getText().trim());
            props.put("mail.smtp.user", this.txtUser.getText().trim());
            props.put("mail.smtp.clave", this.txtPassword.getText().trim());
            props.put("mail.smtp.auth", this.chkAuth.isSelected() ? "true":"false");
            props.put("mail.smtp.starttls.enable", this.chkstarttls.isSelected() ? "true":"false");
            props.put("mail.smtp.port", this.txtPort.getText().trim());
            props.store(fw, "Parámetros para el envío de correos");
            fw.flush();
            fw.close();
        } catch (IOException ex) {
            Logger.getLogger(Config.class.getName()).log(Level.SEVERE, null, ex);
            b.writeToLog(this.getClass().getName() + "--> " + ex.getMessage(), Bitacora.ERROR);
            return;
        }

        JOptionPane.showMessageDialog(null,
                "Registro guardado satisfactoriamente",
                "Mensaje",
                JOptionPane.INFORMATION_MESSAGE);
        

        btnSalirActionPerformed(null);
    } // end guardarRegistro

    @Override
    public boolean validarDatos() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void habilitarObjetos(boolean todos) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    private void cargarMonedas() {
        try {
            rsMoneda
                    = nav.cargarRegistro(
                            Navegador.TODOS, "", "monedas", "codigo");
            if (rsMoneda == null) {
                return;
            } // end if
            this.cboMoneda.removeAllItems();
            this.cbocodigoDolar.removeAllItems();
            rsMoneda.beforeFirst();
            while (rsMoneda.next()) {
                cboMoneda.addItem(rsMoneda.getString("descrip"));
                cbocodigoDolar.addItem(rsMoneda.getString("descrip"));
            } // end while
        } catch (SQLException | SQLInjectionException ex) {
            JOptionPane.showMessageDialog(
                    null,
                    ex.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            b.writeToLog(this.getClass().getName() + "--> " + ex.getMessage(), Bitacora.ERROR);
        }
    } // end cargarMonedas

    private void ubicarCodigo(javax.swing.JComboBox<String> combo, String tipo) {
        if (inicio) {
            return;
        } // end if

        try {
            if (combo.getItemCount() > 0 && Ut.seek(
                    rsMoneda, combo.getSelectedItem().toString(),
                    "descrip")) {

                if (tipo.equals("Local")) {
                    this.codigoTC = rsMoneda.getString("codigo").trim();
                } else {
                    this.codigoDolar = rsMoneda.getString("codigo").trim();
                } // end if

            } // end if
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(
                    null, ex.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            b.writeToLog(this.getClass().getName() + "--> " + ex.getMessage(), Bitacora.ERROR);
        } // end try-catch
    } // end ubicarCodigo

    private boolean sePuedeUsarPrecio() throws SQLException {
        String sqlSent;
        short precio;
        precio = Short.parseShort(spnPrecioOferta.getValue().toString());
        sqlSent = "Select cliprec from inclient where cliprec = ?";
        PreparedStatement ps;
        ResultSet rsX;
        boolean existe = false;

        ps = conn.prepareStatement(sqlSent,
                ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_READ_ONLY);
        ps.setShort(1, precio);
        rsX = CMD.select(ps);

        if (rsX != null && rsX.first()) {
            existe = true;
        } // end if
        ps.close();

        return !existe;
    } // end sePuedeUsarPrecio
} // class

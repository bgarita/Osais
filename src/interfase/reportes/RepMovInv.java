/*
 * RepMovInv.java 
 *
 * Created on 08/09/2009, 10:48:28 AM
 */

package interfase.reportes;

import accesoDatos.UtilBD;
import interfase.otros.Buscador;
import interfase.otros.Navegador;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import logica.utilitarios.Ut;

/**
 *
 * @author Bosco Garita
 */
@SuppressWarnings("serial")
public class RepMovInv extends JFrame {

    private Connection conn = null;
    Navegador Nav = null;
    private Buscador   bd = null;
    // Constantes para las búsquedas
    private final int ARTCODE1 = 1;
    private final int ARTCODE2 = 2;
    private final int BODEGA1  = 3;
    private final int BODEGA2  = 4;

    private int objetoBusqueda = ARTCODE1;
    
    /** Creates new form */
    public RepMovInv(Connection c) throws SQLException {
        initComponents();

        conn = c;

        Calendar cal = GregorianCalendar.getInstance();
        DatMovfech1.setDate(cal.getTime());
        DatMovfech2.setDate(cal.getTime());

        Nav = new Navegador();
        Nav.setConexion(conn);

    } // end constructor

    public void setConexion(Connection c){ conn = c; }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        lblArtcode = new javax.swing.JLabel();
        lblArtcode4 = new javax.swing.JLabel();
        txtArtcode1 = new javax.swing.JFormattedTextField();
        txtBodega1 = new javax.swing.JFormattedTextField();
        lblArtcode2 = new javax.swing.JLabel();
        lblArtcode3 = new javax.swing.JLabel();
        txtArtcode2 = new javax.swing.JFormattedTextField();
        txtBodega2 = new javax.swing.JFormattedTextField();
        lblArtcode5 = new javax.swing.JLabel();
        lblArtcode6 = new javax.swing.JLabel();
        lblArtcode7 = new javax.swing.JLabel();
        txtMovdocu1 = new javax.swing.JFormattedTextField();
        txtMovdocu2 = new javax.swing.JFormattedTextField();
        txtUser1 = new javax.swing.JFormattedTextField();
        txtUser2 = new javax.swing.JFormattedTextField();
        DatMovfech1 = new com.toedter.calendar.JDateChooser();
        DatMovfech2 = new com.toedter.calendar.JDateChooser();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cboOrden = new javax.swing.JComboBox();
        jPanel5 = new javax.swing.JPanel();
        cmdImprimir = new javax.swing.JButton();
        cmdCerrar = new javax.swing.JButton();
        chkDetallado = new javax.swing.JCheckBox();
        jMenuBar1 = new javax.swing.JMenuBar();
        mnuArchivo = new javax.swing.JMenu();
        mnuGuardar = new javax.swing.JMenuItem();
        mnuSalir = new javax.swing.JMenuItem();
        mnuEdicion = new javax.swing.JMenu();
        mnuBuscar = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Movimientos de inventario");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Rangos del reporte", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12), new java.awt.Color(51, 153, 0))); // NOI18N

        lblArtcode.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblArtcode.setForeground(new java.awt.Color(0, 51, 255));
        lblArtcode.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblArtcode.setText("Artículos");
        lblArtcode.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        lblArtcode4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblArtcode4.setForeground(new java.awt.Color(0, 51, 255));
        lblArtcode4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblArtcode4.setText("Bodegas");
        lblArtcode4.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        try {
            txtArtcode1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("********************")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtArtcode1.setToolTipText("Código del artículo - Blanco = todos");
        txtArtcode1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtArtcode1ActionPerformed(evt);
            }
        });
        txtArtcode1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtArtcode1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtArtcode1FocusLost(evt);
            }
        });

        try {
            txtBodega1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("***")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtBodega1.setToolTipText("Código de bodega - Blanco = todas");
        txtBodega1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBodega1ActionPerformed(evt);
            }
        });
        txtBodega1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtBodega1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtBodega1FocusLost(evt);
            }
        });

        lblArtcode2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblArtcode2.setForeground(new java.awt.Color(255, 0, 204));
        lblArtcode2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblArtcode2.setText("Desde");
        lblArtcode2.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        lblArtcode3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblArtcode3.setForeground(new java.awt.Color(255, 0, 204));
        lblArtcode3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblArtcode3.setText("Hasta");
        lblArtcode3.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        try {
            txtArtcode2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("********************")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtArtcode2.setToolTipText("Código del artículo - Blanco = todos");
        txtArtcode2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtArtcode2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtArtcode2FocusLost(evt);
            }
        });

        try {
            txtBodega2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("***")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtBodega2.setToolTipText("Código de bodega - Blanco = todas");
        txtBodega2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtBodega2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtBodega2FocusLost(evt);
            }
        });

        lblArtcode5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblArtcode5.setForeground(new java.awt.Color(0, 51, 255));
        lblArtcode5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblArtcode5.setText("Documentos");
        lblArtcode5.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        lblArtcode6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblArtcode6.setForeground(new java.awt.Color(0, 51, 255));
        lblArtcode6.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblArtcode6.setText("Usuarios");
        lblArtcode6.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        lblArtcode7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblArtcode7.setForeground(new java.awt.Color(0, 51, 255));
        lblArtcode7.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblArtcode7.setText("Fechas");
        lblArtcode7.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        try {
            txtMovdocu1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("**********")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtMovdocu1.setToolTipText("Número de documento - Blanco = todos");
        txtMovdocu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMovdocu1ActionPerformed(evt);
            }
        });
        txtMovdocu1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtMovdocu1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMovdocu1FocusLost(evt);
            }
        });

        try {
            txtMovdocu2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("**********")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtMovdocu2.setToolTipText("Número de documento - Blanco = todos");
        txtMovdocu2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtMovdocu2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMovdocu2FocusLost(evt);
            }
        });

        try {
            txtUser1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("****************")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtUser1.setToolTipText("Usuario - Blanco = todos");
        txtUser1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUser1ActionPerformed(evt);
            }
        });
        txtUser1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtUser1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtUser1FocusLost(evt);
            }
        });

        try {
            txtUser2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("**********")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtUser2.setToolTipText("Usuario - Blanco = todos");
        txtUser2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtUser2FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtUser2FocusLost(evt);
            }
        });

        DatMovfech1.setToolTipText("Fecha del movimiento - Blanco = todas");

        DatMovfech2.setToolTipText("Fecha del movimiento - Blanco = todas");
        DatMovfech2.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                DatMovfech2PropertyChange(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblArtcode3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblArtcode2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblArtcode)
                    .addComponent(txtArtcode1)
                    .addComponent(txtArtcode2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblArtcode4)
                    .addComponent(txtBodega1, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                    .addComponent(txtBodega2, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE))
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblArtcode5, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                        .addGap(6, 6, 6)
                        .addComponent(lblArtcode6)
                        .addGap(38, 38, 38)
                        .addComponent(lblArtcode7)
                        .addGap(86, 86, 86))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtMovdocu2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                            .addComponent(txtMovdocu1, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtUser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtUser2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(DatMovfech1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(DatMovfech2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtArtcode1, txtArtcode2});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtBodega1, txtBodega2});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtUser1, txtUser2});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblArtcode4)
                    .addComponent(lblArtcode)
                    .addComponent(lblArtcode6)
                    .addComponent(lblArtcode5)
                    .addComponent(lblArtcode7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(txtBodega1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblArtcode2)
                    .addComponent(txtArtcode1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMovdocu1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DatMovfech1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(txtBodega2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblArtcode3)
                    .addComponent(txtArtcode2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMovdocu2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DatMovfech2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Ordenar reporte por");

        cboOrden.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Fecha y documento", "Código", "Descripción" }));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(cboOrden, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cboOrden, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(88, Short.MAX_VALUE))
        );

        cmdImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/WZPRINT.png"))); // NOI18N
        cmdImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdImprimirActionPerformed(evt);
            }
        });

        cmdCerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/control-power.png"))); // NOI18N
        cmdCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCerrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cmdImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmdCerrar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cmdCerrar, cmdImprimir});

        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(cmdCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cmdImprimir))
                .addGap(4, 4, 4))
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {cmdCerrar, cmdImprimir});

        chkDetallado.setText("Informe detallado");

        mnuArchivo.setText("Archivo");

        mnuGuardar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        mnuGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/WZPRINT.JPG"))); // NOI18N
        mnuGuardar.setText("Imprimir");
        mnuGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuGuardarActionPerformed(evt);
            }
        });
        mnuArchivo.add(mnuGuardar);

        mnuSalir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.CTRL_MASK));
        mnuSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/control-power.png"))); // NOI18N
        mnuSalir.setText("Salir");
        mnuSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuSalirActionPerformed(evt);
            }
        });
        mnuArchivo.add(mnuSalir);

        jMenuBar1.add(mnuArchivo);

        mnuEdicion.setText("Edición");

        mnuBuscar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.CTRL_MASK));
        mnuBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/binocular.png"))); // NOI18N
        mnuBuscar.setText("Buscar");
        mnuBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuBuscarActionPerformed(evt);
            }
        });
        mnuEdicion.add(mnuBuscar);

        jMenuBar1.add(mnuEdicion);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(chkDetallado)
                                .addContainerGap())))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 15, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(chkDetallado)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        setSize(new java.awt.Dimension(592, 341));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void mnuSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuSalirActionPerformed
        dispose();
}//GEN-LAST:event_mnuSalirActionPerformed

    private void mnuBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuBuscarActionPerformed
        JTextField objeto;
        switch (objetoBusqueda){
            case ARTCODE1:
                objeto = txtArtcode1;
                break;
            case ARTCODE2:
                objeto = txtArtcode2;
                break;
            case BODEGA1:
                objeto = txtBodega1;
                break;
            case BODEGA2:
                objeto = txtBodega2;
                break;
            default:
                objeto = null;
        } // end switch

        if (objeto == null) {
            return;
        }

        // Asumo como primer buscador la tabla de artículos
        bd = new Buscador(new java.awt.Frame(), true,
                "inarticu", "artcode,artdesc", "artdesc",
                objeto,conn);
        bd.setTitle("Buscar artículos de inventario");

        if (objetoBusqueda >= BODEGA1){
            bd = new Buscador(new java.awt.Frame(), true,
                    "bodegas", "bodega,descrip", "descrip",
                    objeto,conn);
            bd.setTitle("Buscar bodegas");
        } // end if

        bd.lblBuscar.setText("Descripción:");
        bd.setVisible(true);
        bd.dispose();
}//GEN-LAST:event_mnuBuscarActionPerformed

    private void txtArtcode1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtArtcode1FocusGained
        txtArtcode1.selectAll();
        objetoBusqueda = ARTCODE1;
}//GEN-LAST:event_txtArtcode1FocusGained

    private void txtArtcode2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtArtcode2FocusGained
        txtArtcode2.selectAll();
        objetoBusqueda = ARTCODE2;
    }//GEN-LAST:event_txtArtcode2FocusGained

    private void txtArtcode1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtArtcode1FocusLost
        txtArtcode1.setText(txtArtcode1.getText().toUpperCase());
    }//GEN-LAST:event_txtArtcode1FocusLost

    private void txtArtcode2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtArtcode2FocusLost
        if (txtArtcode2.getText() == null ||
                txtArtcode2.getText().trim().equals("")){
            return;
        } // end if

        txtArtcode2.setText(txtArtcode2.getText().toUpperCase());
        String artcode1 = txtArtcode1.getText().trim();
        String artcode2 = txtArtcode2.getText().trim();
        if (artcode1.compareTo(artcode2) > 0){
            JOptionPane.showMessageDialog(null,
                    "Rango incorrecto de artículos.",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            txtArtcode1.requestFocusInWindow();
        } // end if
    }//GEN-LAST:event_txtArtcode2FocusLost

    private void txtBodega1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBodega1FocusGained
        txtBodega1.selectAll();
        objetoBusqueda = BODEGA1;
    }//GEN-LAST:event_txtBodega1FocusGained

    private void txtBodega1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBodega1FocusLost
        txtBodega1.setText(txtBodega1.getText().toUpperCase());
    }//GEN-LAST:event_txtBodega1FocusLost

    private void txtBodega2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBodega2FocusGained
        txtBodega2.selectAll();
        objetoBusqueda = BODEGA2;
    }//GEN-LAST:event_txtBodega2FocusGained

    private void txtBodega2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBodega2FocusLost
        if (txtBodega2.getText() == null ||
                txtBodega2.getText().trim().equals("")){
            return;
        } // end if

        txtBodega2.setText(txtBodega2.getText().toUpperCase());
        String bodega1 = txtBodega1.getText().trim();
        String bodega2 = txtBodega2.getText().trim();
        if (bodega1.compareTo(bodega2) > 0){
            JOptionPane.showMessageDialog(null,
                    "Rango incorrecto de bodegas.",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            txtBodega1.requestFocusInWindow();
        } // end if
    }//GEN-LAST:event_txtBodega2FocusLost

    private void txtArtcode1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtArtcode1ActionPerformed
        txtArtcode2.requestFocusInWindow();
    }//GEN-LAST:event_txtArtcode1ActionPerformed

    private void txtBodega1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBodega1ActionPerformed
        txtBodega2.requestFocusInWindow();
    }//GEN-LAST:event_txtBodega1ActionPerformed

    private void cmdCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCerrarActionPerformed
        dispose();
    }//GEN-LAST:event_cmdCerrarActionPerformed

    private void cmdImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdImprimirActionPerformed
        String artcode1, artcode2,
                bodega1, bodega2,
                movdocu1, movdocu2,
                user1, user2,
                movfech1, movfech2,
                Select, Where, filtro, OrderBy;
        artcode1 = txtArtcode1.getText().trim();
        artcode2 = txtArtcode2.getText().trim();
        bodega1  = txtBodega1.getText().trim();
        bodega2  = txtBodega2.getText().trim();
        movdocu1 = txtMovdocu1.getText().trim();
        movdocu2 = txtMovdocu2.getText().trim();
        user1    = txtUser1.getText().trim();
        user2    = txtUser2.getText().trim();
        movfech1 = Ut.fechaSQL(DatMovfech1.getDate());
        movfech2 = Ut.fechaSQL(DatMovfech2.getDate());

        // Preparo el Select
        // Uso el select para el informe resumido como predeterminado
        // y luego verifico si el usuario lo quiere detallado.
        Select =
                "SELECT     " +
                "a.artcode, " +
                "a.bodega,  " +
                "c.artdesc, " +
                "Sum(If(a.movtimo = 'E',a.movcant,0)) as Entradas,   " +
                "Sum(If(a.movtimo = 'S',a.movcant,0)) as Salidas,    " +
                "Sum(a.movcant * a.movcoun * b.tipoca) as CostoTotal," +
                "(Select empresa from config) as empresa             " +
                "FROM inmovimd a                                     " +
                "INNER JOIN inmovime b ON a.movdocu = b.movdocu      " +
                "INNER JOIN inarticu c ON a.artcode = c.artcode      " +
                "AND a.movtimo = b.movtimo " +
                "AND a.movtido = b.movtido ";

        if (chkDetallado.isSelected()){
            Select =
                    "SELECT     " +
                    "a.artcode, " +
                    "a.bodega,  " +
                    "c.artdesc, " +
                    "a.movtimo, " +
                    "If(a.movtimo = 'E',a.movcant,0) as Entradas,"    +
                    "If(a.movtimo = 'S',a.movcant,0) as Salidas, "    +
                    "a.movcoun, " +
                    "b.tipoca,  " +
                    "a.movcant * a.movcoun * b.tipoca as CostoTotal," +
                    "a.CentroC, " +
                    "a.movdocu, " +
                    "b.movfech, " +
                    "b.user,    " +
                    "(Select empresa from config) as empresa        " +
                    "FROM inmovimd a                                " +
                    "INNER JOIN inmovime b ON a.movdocu = b.movdocu " +
                    "INNER JOIN inarticu c ON a.artcode = c.artcode " +
                    "AND a.movtimo = b.movtimo                      " +
                    "AND a.movtido = b.movtido ";
        } // end if

        // Crear el Where
        Where = "";
        
        filtro = "Rangos del reporte: ";
        
        filtro += "Artículos ";
        filtro += artcode1.isEmpty() && artcode2.isEmpty() ?
            "*Todos*": "del " + artcode1 + " al " + artcode2;

        // Rango de artículos
        if (!artcode1.isEmpty()){
            Where += "a.artcode >= " + "'" + artcode1 + "'";
        } // end if

        if (!artcode2.isEmpty()){
            Where = Where.isEmpty() ? Where : Where + " and ";
            Where += "a.artcode <= " + "'" + artcode2 + "'";
            
        } // end if

        filtro += ", documentos ";
        filtro += movdocu1.isEmpty() && movdocu2.isEmpty() ?
            "*Todos*": "del " + movdocu1 + " al " + movdocu2;
        
        // Rango de documentos.  Establezco los documentos en esta
        // parte del Where para que SQL utilice los índices.
        if (!movdocu1.isEmpty()){
            Where = Where.isEmpty() ? Where : Where + " and ";
            Where += "b.movdocu >= " + "'" + movdocu1 + "'";
        } // end if

        if (!movdocu2.isEmpty()){
            Where = Where.isEmpty() ? Where : Where + " and ";
            Where += "b.movdocu <= " + "'" + movdocu2 + "'";
        } // end if

        
        filtro += ", fechas ";
        filtro += movfech1.isEmpty() && movfech2.isEmpty() ?
            "*Todas*": "de " + movfech1 + " a " + movfech2;
        
        // Rango de fechas.  Establezco la fechas en esta parte
        // del Where para que SQL utilice los índices.
        if (!movfech1.equals("null")){
            Where = Where.isEmpty() ? Where : Where + " and ";
            Where += "b.movfech >= " + movfech1;
        } // end if

        if (!movfech2.equals("null")){
            Where = Where.isEmpty() ? Where : Where + " and ";
            Where += "b.movfech <= " + movfech2;
        } // end if

        filtro += ", bodegas ";
        filtro += bodega1.isEmpty() && bodega2.isEmpty() ?
            "*Todas*": "de " + bodega1 + " a " + bodega2;
        
        // Dejo para el final del Where los campos que no están
        // en ningún índice de la BD.

        // Rango de bodegas
        if (!bodega1.isEmpty()){
            Where = Where.isEmpty() ? Where : Where + " and ";
            Where += "a.bodega >= " + "'" + bodega1 + "'";
        } // end if

        if (!bodega2.isEmpty()){
            Where = Where.isEmpty() ? Where : Where + " and ";
            Where += "a.bodega <= " + "'" + bodega2 + "'";
        } // end if

        
        filtro += ", usuarios ";
        filtro += user1.isEmpty() && user2.isEmpty() ?
            "*Todos*": "del " + user1 + " al " + user2;
        
        // Rango de usuarios
        if (!user1.isEmpty()){
            Where = Where.isEmpty() ? Where : Where + " and ";
            Where += "b.user >= " + "'" + user1 + "'";
        } // end if
        
        // Obtener la longitud del user para comparar solo
        // los caracteres que el usuario digitó.
        String longitudUser = String.valueOf(user2.length());
        if (!user2.isEmpty()){
            Where = Where.isEmpty() ? Where : Where + " and ";
            Where += "substr(b.user,1," + longitudUser + ") <= " + "'" + user2 + "'";
        } // end if
        
        if (Where.isEmpty()){
            Where = "Where b.estado is null";
        } else {
            Where += " and b.estado is null "; 
        } // end if

        Where = Where.isEmpty() ? Where : "Where " + Where + " ";

        Select += Where;
        // Si el informe es resumido hay que agregar el Group By
        // después de Where
        if (!chkDetallado.isSelected()) {
            Select += "GROUP BY artcode, bodega, artdesc ";
        } // end if

        // Rango de bodegas

        
        switch (cboOrden.getSelectedIndex()){
            case 0:
                OrderBy = "Order by movfech,movdocu";
                break;
            case 1:
                OrderBy = "Order by artcode";
                break;
            default: OrderBy = "Order by artdesc";
        } // end switch

        // Si el usuario pide informe resumido entonces el
        // ordenamiento solo aplica para el segundo y tecer orden.
        if (!chkDetallado.isSelected() &&
                cboOrden.getSelectedIndex() == 0) {
            OrderBy = "";
        } // end if
        
        Select += OrderBy;

        String formulario = chkDetallado.isSelected() ?
                    "RepMovDet.jasper" :
                    "RepMovRes.jasper";
        
        ReportesProgressBar rpb = 
                new ReportesProgressBar(
                conn, 
                "Movimientos de inventario",
                formulario,
                Select,
                filtro);
        rpb.setBorderTitle("Consultado base de datos..");
        rpb.setVisible(true);
        rpb.start();
    }//GEN-LAST:event_cmdImprimirActionPerformed

    private void txtMovdocu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMovdocu1ActionPerformed
        txtMovdocu2.requestFocusInWindow();
    }//GEN-LAST:event_txtMovdocu1ActionPerformed

    private void txtMovdocu1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMovdocu1FocusGained
        txtMovdocu1.selectAll();
    }//GEN-LAST:event_txtMovdocu1FocusGained

    private void txtMovdocu1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMovdocu1FocusLost
        txtMovdocu1.setText(txtMovdocu1.getText().toUpperCase());
    }//GEN-LAST:event_txtMovdocu1FocusLost

    private void txtMovdocu2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMovdocu2FocusGained
        txtMovdocu2.selectAll();
    }//GEN-LAST:event_txtMovdocu2FocusGained

    private void txtMovdocu2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMovdocu2FocusLost
        if (txtMovdocu2.getText() == null ||
                txtMovdocu2.getText().trim().equals("")){
            return;
        } // end if

        txtMovdocu2.setText(txtMovdocu2.getText().toUpperCase());
        String movdocu1 = txtMovdocu1.getText().trim();
        String movdocu2 = txtMovdocu2.getText().trim();
        if (movdocu1.compareTo(movdocu2) > 0){
            JOptionPane.showMessageDialog(null,
                    "Rango incorrecto de documentos.",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            txtMovdocu1.requestFocusInWindow();
        } // end if
    }//GEN-LAST:event_txtMovdocu2FocusLost

    private void txtUser1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUser1ActionPerformed
        txtUser2.requestFocusInWindow();
    }//GEN-LAST:event_txtUser1ActionPerformed

    private void txtUser1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtUser1FocusGained
        txtUser1.selectAll();
    }//GEN-LAST:event_txtUser1FocusGained

    private void txtUser1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtUser1FocusLost
        txtUser1.setText(txtUser1.getText().toUpperCase());
    }//GEN-LAST:event_txtUser1FocusLost

    private void txtUser2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtUser2FocusGained
        txtUser2.selectAll();
    }//GEN-LAST:event_txtUser2FocusGained

    private void txtUser2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtUser2FocusLost
        if (txtUser2.getText() == null ||
                txtUser2.getText().trim().equals("")){
            return;
        } // end if

        txtUser2.setText(txtUser2.getText().toUpperCase());
        String user1 = txtUser1.getText().trim();
        String user2 = txtUser2.getText().trim();
        if (user1.compareTo(user2) > 0){
            JOptionPane.showMessageDialog(null,
                    "Rango incorrecto de usuarios.",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            txtUser1.requestFocusInWindow();
        } // end if
    }//GEN-LAST:event_txtUser2FocusLost

    private void DatMovfech2PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_DatMovfech2PropertyChange
        Date fecha1 = DatMovfech1.getDate();
        Date fecha2 = DatMovfech2.getDate();
        if (fecha1.after(fecha2)){
            JOptionPane.showMessageDialog(null,
                    "Rango incorrecto de fechas.",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            DatMovfech1.requestFocusInWindow();
        } // end if
    }//GEN-LAST:event_DatMovfech2PropertyChange

    private void mnuGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuGuardarActionPerformed
        cmdImprimirActionPerformed(evt);
    }//GEN-LAST:event_mnuGuardarActionPerformed


    /**
     * @param c
    */
    public static void main(Connection c) {
        try {
            // Bosco agregado 23/07/2011
            // Integración del segundo nivel de seguridad.
            if (!UtilBD.tienePermiso(c,"RepMovInv")){
                JOptionPane.showMessageDialog(null,
                        "Usted no está autorizado para ejecutar este proceso",
                        "Error - Permisos",
                        JOptionPane.ERROR_MESSAGE);
                return;
            } // Fin Bosco agregado 23/07/2011
            // Fin Bosco agregado 23/07/2011
        } catch (Exception ex) {
            Logger.getLogger(RepMovInv.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, 
                    ex.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }

        //JFrame.setDefaultLookAndFeelDecorated(true);
        try {
            RepMovInv run = new RepMovInv(c);
            run.setVisible(true);
        } catch (SQLException ex) {
             JOptionPane.showMessageDialog(null, 
                     ex.getMessage(),
                    "Error", 
                    JOptionPane.ERROR_MESSAGE);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser DatMovfech1;
    private com.toedter.calendar.JDateChooser DatMovfech2;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox cboOrden;
    private javax.swing.JCheckBox chkDetallado;
    private javax.swing.JButton cmdCerrar;
    private javax.swing.JButton cmdImprimir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JLabel lblArtcode;
    private javax.swing.JLabel lblArtcode2;
    private javax.swing.JLabel lblArtcode3;
    private javax.swing.JLabel lblArtcode4;
    private javax.swing.JLabel lblArtcode5;
    private javax.swing.JLabel lblArtcode6;
    private javax.swing.JLabel lblArtcode7;
    private javax.swing.JMenu mnuArchivo;
    private javax.swing.JMenuItem mnuBuscar;
    private javax.swing.JMenu mnuEdicion;
    private javax.swing.JMenuItem mnuGuardar;
    private javax.swing.JMenuItem mnuSalir;
    private javax.swing.JFormattedTextField txtArtcode1;
    private javax.swing.JFormattedTextField txtArtcode2;
    private javax.swing.JFormattedTextField txtBodega1;
    private javax.swing.JFormattedTextField txtBodega2;
    private javax.swing.JFormattedTextField txtMovdocu1;
    private javax.swing.JFormattedTextField txtMovdocu2;
    private javax.swing.JFormattedTextField txtUser1;
    private javax.swing.JFormattedTextField txtUser2;
    // End of variables declaration//GEN-END:variables

} // end class

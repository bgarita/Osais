/*
/*
 * Minimos.java
 *
 * Created on 29/04/2009, 09:24:08 PM Bosco Garita.
 */

package interfase.mantenimiento;

import Mail.Bitacora;
import accesoDatos.CMD;
import accesoDatos.UtilBD;
import interfase.otros.Navegador;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author Bosco Garita
 */
public class InarticuMinimos extends javax.swing.JFrame {
    private static final long serialVersionUID = 100L;

    private final Statement  stat;
    private final Navegador   nav;
    private String  sqlSent;
    private final String  artcode;
    private final ResultSet    rs;
    private JTextField tminimo = new JTextField();
    private Bitacora b = new Bitacora();

    /** Creates new form Minimos
     * @param c
     * @param pArtcode
     * @param pMinimo
     * @throws java.sql.SQLException */
    public InarticuMinimos(
            Connection c, String pArtcode, JTextField pMinimo) throws SQLException {
        initComponents();
        nav = new Navegador();
        nav.setConexion(c);
        stat = c.createStatement();
        artcode = pArtcode.trim();
        tminimo = pMinimo;
        sqlSent =
                "Select "         +
                "bodexis.bodega," +
                "descrip,"        +
                "artexis,"        +
                "artreserv,"      +
                "(artexis-artreserv) as disponible," +
                "minimo "         +
                "from bodexis "   +
                "Inner Join bodegas on bodexis.bodega = bodegas.bodega " +
                "Where artcode = ? " +
                "order by 1";
        
        PreparedStatement ps = 
                c.prepareStatement(sqlSent, 
                ResultSet.TYPE_SCROLL_SENSITIVE , ResultSet.CONCUR_READ_ONLY);
        ps.setString(1, pArtcode);
        rs = CMD.select(ps);

        // Cargar la tabla
        int fila    = 0;
        int columna = 0;
        
        if (rs == null || !rs.first()){
            ps.close();
            return;
        } // end if
        

        tblBodexis.setValueAt(rs.getObject(1), fila, columna);
        columna++;
        tblBodexis.setValueAt(rs.getObject(2), fila, columna);
        columna++;
        tblBodexis.setValueAt(rs.getObject(3), fila, columna);
        columna++;
        tblBodexis.setValueAt(rs.getObject(4), fila, columna);
        columna++;
        tblBodexis.setValueAt(rs.getObject(5), fila, columna);
        columna++;
        tblBodexis.setValueAt(rs.getObject(6), fila, columna);
        columna = 0;
        while (rs.next()) {
            fila++;
            tblBodexis.setValueAt(rs.getObject(1), fila, columna);
            columna++;
            tblBodexis.setValueAt(rs.getObject(2), fila, columna);
            columna++;
            tblBodexis.setValueAt(rs.getObject(3), fila, columna);
            columna++;
            tblBodexis.setValueAt(rs.getObject(4), fila, columna);
            columna++;
            tblBodexis.setValueAt(rs.getObject(5), fila, columna);
            columna++;
            tblBodexis.setValueAt(rs.getObject(6), fila, columna);
            columna = 0;
        } // end while
    } // end contructor
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblBodexis = new javax.swing.JTable();
        cmdGuardar = new javax.swing.JButton();
        cmdSalir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Establecer mínimos");

        tblBodexis.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Bodega", "Descripción", "Existencia", "Reservado", "Disponible", "Mínimo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Float.class, java.lang.Float.class, java.lang.Float.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblBodexis);

        cmdGuardar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        cmdGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/disk.png"))); // NOI18N
        cmdGuardar.setText("Guardar");
        cmdGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdGuardarActionPerformed(evt);
            }
        });

        cmdSalir.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        cmdSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/control-power.png"))); // NOI18N
        cmdSalir.setText("Salir");
        cmdSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 547, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(172, 172, 172)
                .addComponent(cmdGuardar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmdSalir, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cmdGuardar, cmdSalir});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmdGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmdSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {cmdGuardar, cmdSalir});

        setSize(new java.awt.Dimension(569, 211));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cmdSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSalirActionPerformed
        setVisible(false);
        dispose();
}//GEN-LAST:event_cmdSalirActionPerformed

    private void cmdGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdGuardarActionPerformed
        int fila = 0;
        int sqlresult = 0;
        Float minimo = (float) 0.0;
        
        while (tblBodexis.getValueAt(fila, 0) != null){
            sqlSent =
                "Update bodexis " +
                "Set minimo = " +
                tblBodexis.getValueAt(fila, 5).toString() +
                " " +
                "Where bodega = " + "'" +
                tblBodexis.getValueAt(fila, 0).toString().trim() + "'" +
                " " +
                "and artcode = " + "'" +
                artcode + "'";
            
            try {
                sqlresult+= stat.executeUpdate(sqlSent);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null,
                        ex.getMessage(), 
                        "Error", 
                        JOptionPane.ERROR_MESSAGE);
                sqlresult = 0;
                b.writeToLog(this.getClass().getName() + "--> " + ex.getMessage());
                break;
            } // end try-catch
            
            if (sqlresult > 0){
                minimo+=Float.parseFloat(tblBodexis.getValueAt(fila, 5).toString());
            }
            
            fila++;
            
        } // end while

        if (sqlresult > 0){
            JOptionPane.showMessageDialog(null,
               "Mínimos establecidos satisfactoriamente." +
               "\n\n" + sqlresult + " registros actualizados.",
               "Mensaje", 
               JOptionPane.INFORMATION_MESSAGE);
        } // end if
        
        /*
         Al actualizar este objeto estoy actualizando también el objeto
         original (desde donde fue pasado como parámtro).
         En el caso de la pantalla de mantenimiento de artículos (Inarticu.java)
         esto se hace para evitar que se tenga que cargar de nuevo el registro
         solo por refrescar el mínimo.  Esto por cuando existe un trigger en la
         BD que suma los mínimos y actualiza el maestro de artículos.
        */
        tminimo.setText(minimo.toString());
    }//GEN-LAST:event_cmdGuardarActionPerformed

    /**
     * @param c
     * @param pArtcode
     * @param pMinimo
    */
    public static void main(
            final Connection c,
            final String pArtcode, final JTextField pMinimo) {
        try {
            // Bosco agregado 23/07/2011
            // Integración del segundo nivel de seguridad.
            if (!UtilBD.tienePermiso(c,"Minimos")){
                JOptionPane.showMessageDialog(null,
                        "Usted no está autorizado para ejecutar este proceso",
                        "Error - Permisos",
                        JOptionPane.ERROR_MESSAGE);
                return;
            } // end if
        } catch (Exception ex) {
            Logger.getLogger(InarticuMinimos.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, 
                    ex.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        // Fin Bosco agregado 23/07/2011
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    new InarticuMinimos(c, pArtcode, pMinimo).setVisible(true);
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, 
                            ex.getMessage(),
                            "Error",
                            JOptionPane.ERROR_MESSAGE);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmdGuardar;
    private javax.swing.JButton cmdSalir;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblBodexis;
    // End of variables declaration//GEN-END:variables

}

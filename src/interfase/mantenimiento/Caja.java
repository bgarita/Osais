/* 
 * Caja.java 
 *
 * Created on 26/04/2015, 06:41:28 AM
 */

package interfase.mantenimiento;

import Exceptions.EmptyDataSourceException;
import Mail.Bitacora;
import accesoDatos.CMD;
import accesoDatos.UtilBD;
import interfase.consultas.ConsultaTransaccionesCaja;
import interfase.otros.Buscador;
import interfase.otros.DesgloceDinero2;
import interfase.otros.Navegador;
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import logica.Cacaja;
import logica.Usuario;
import Exceptions.SQLInjectionException;
import logica.utilitarios.Ut;

/**
 *
 * @author Bosco Garita
 */
@SuppressWarnings("serial")
public class Caja extends JFrame {

    private Connection conn = null;
    private Navegador  nav = null;
    private Buscador   bd = null;
    
    private final Cacaja caja;
    private Bitacora log = new Bitacora();

    /** Creates new form Caja
     * @param c
     * @throws java.sql.SQLException
     * @throws Exceptions.SQLInjectionException
     * @throws Exceptions.EmptyDataSourceException */
    public Caja(Connection c) 
            throws SQLException, SQLInjectionException, EmptyDataSourceException {
        initComponents();
        nav = new Navegador();
                
        conn = c;

        nav.setConexion(conn);
        
        caja = new Cacaja(conn);
        
        try {
            caja.setIdcaja(nav.first("caja", "idcaja"));
        } catch (Exception ex) {
            Logger.getLogger(Caja.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, 
                    ex.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            log.writeToLog(this.getClass().getName() + "--> " + ex.getMessage(), Bitacora.ERROR);
            return;
        } // end try-catch
        
        this.txtIdcaja.setText(caja.getIdcaja() + "");
        this.btnRecalcularActionPerformed(null);
    } // end constructor

    public void setConexion(Connection c){ conn = c; }
    
    public Connection getConexion() {return conn; }
    
    public int getIdcaja() {return caja.getIdcaja(); }
    
    public void setFisico(String fis) {
        this.txtFisico.setText(fis); 
        try {
            this.calcularDiferencia();
        } catch (Exception ex) {
            Logger.getLogger(Caja.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, 
                    ex.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            log.writeToLog(this.getClass().getName() + "--> " + ex.getMessage(), Bitacora.ERROR);
        } // end try-catch
    } // end setFisico

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblFamilia = new javax.swing.JLabel();
        txtIdcaja = new javax.swing.JFormattedTextField();
        txtDescripcion = new javax.swing.JFormattedTextField();
        jLabel1 = new javax.swing.JLabel();
        txtFechaInicio = new javax.swing.JTextField();
        txtFechaFinal = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        btnPrimero = new javax.swing.JButton();
        btnAnterior = new javax.swing.JButton();
        btnSiguiente = new javax.swing.JButton();
        btnUltimo = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnBorrar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtUser = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtSaldoInicial = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtDepositos = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtRetiros = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtSaldoFinal = new javax.swing.JTextField();
        lblFisico = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtFisico = new javax.swing.JTextField();
        txtDif = new javax.swing.JTextField();
        chkCerrada = new javax.swing.JCheckBox();
        jLabel9 = new javax.swing.JLabel();
        txtEfectivo = new javax.swing.JTextField();
        btnRecalcular = new javax.swing.JButton();
        btnCerrarCaja = new javax.swing.JButton();
        btnDepositoDirecto = new javax.swing.JButton();
        btnTransacciones = new javax.swing.JButton();
        chkBloqueada = new javax.swing.JCheckBox();
        jMenuBar1 = new javax.swing.JMenuBar();
        mnuArchivo = new javax.swing.JMenu();
        mnuGuardar = new javax.swing.JMenuItem();
        mnuSalir = new javax.swing.JMenuItem();
        mnuEdicion = new javax.swing.JMenu();
        mnuBorrar = new javax.swing.JMenuItem();
        mnuBuscar = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Mantenimiento de cajas");

        lblFamilia.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        lblFamilia.setText("Número");

        txtIdcaja.setColumns(2);
        try {
            txtIdcaja.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("**")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtIdcaja.setToolTipText("Código");
        txtIdcaja.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtIdcajaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtIdcajaFocusLost(evt);
            }
        });
        txtIdcaja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdcajaActionPerformed(evt);
            }
        });

        txtDescripcion.setColumns(40);
        try {
            txtDescripcion.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("******************************")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtDescripcion.setToolTipText("Descripción");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Fechas de procesamiento");

        txtFechaInicio.setForeground(java.awt.Color.blue);
        txtFechaInicio.setToolTipText("");
        txtFechaInicio.setEnabled(false);

        txtFechaFinal.setForeground(java.awt.Color.blue);
        txtFechaFinal.setToolTipText("");
        txtFechaFinal.setEnabled(false);

        btnPrimero.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/WZTOP.png"))); // NOI18N
        btnPrimero.setToolTipText("Ir al primer registro");
        btnPrimero.setFocusCycleRoot(true);
        btnPrimero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrimeroActionPerformed(evt);
            }
        });

        btnAnterior.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/WZBACK.png"))); // NOI18N
        btnAnterior.setToolTipText("Ir al registro anterior");
        btnAnterior.setFocusCycleRoot(true);
        btnAnterior.setMaximumSize(new java.awt.Dimension(93, 29));
        btnAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnteriorActionPerformed(evt);
            }
        });

        btnSiguiente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/WZNEXT.png"))); // NOI18N
        btnSiguiente.setToolTipText("Ir al siguiente registro");
        btnSiguiente.setMaximumSize(new java.awt.Dimension(93, 29));
        btnSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSiguienteActionPerformed(evt);
            }
        });

        btnUltimo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/WZEND.png"))); // NOI18N
        btnUltimo.setToolTipText("Ir al último registro");
        btnUltimo.setFocusCycleRoot(true);
        btnUltimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUltimoActionPerformed(evt);
            }
        });

        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/WZSAVE.png"))); // NOI18N
        btnGuardar.setToolTipText("Guardar registro");
        btnGuardar.setMaximumSize(new java.awt.Dimension(93, 29));
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnBorrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/WZDELETE.png"))); // NOI18N
        btnBorrar.setToolTipText("Borrar registro");
        btnBorrar.setMaximumSize(new java.awt.Dimension(93, 29));
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(btnPrimero, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAnterior, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSiguiente, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnUltimo, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAnterior, btnBorrar, btnGuardar, btnPrimero, btnSiguiente, btnUltimo});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnPrimero)
                    .addComponent(btnAnterior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSiguiente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUltimo, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnAnterior, btnBorrar, btnGuardar, btnPrimero, btnSiguiente, btnUltimo});

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Cajero asignado");

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel3.setFont(new java.awt.Font("UnBatang", 0, 17)); // NOI18N
        jLabel3.setText("Saldo inicial");

        txtSaldoInicial.setEditable(false);
        txtSaldoInicial.setBackground(java.awt.Color.blue);
        txtSaldoInicial.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        txtSaldoInicial.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtSaldoInicial.setText("0.00");
        txtSaldoInicial.setEnabled(false);

        jLabel4.setFont(new java.awt.Font("UnBatang", 0, 17)); // NOI18N
        jLabel4.setText("Depósitos");

        txtDepositos.setEditable(false);
        txtDepositos.setBackground(java.awt.Color.blue);
        txtDepositos.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        txtDepositos.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtDepositos.setText("0.00");
        txtDepositos.setEnabled(false);

        jLabel5.setFont(new java.awt.Font("UnBatang", 0, 17)); // NOI18N
        jLabel5.setText("Retiros");

        txtRetiros.setEditable(false);
        txtRetiros.setBackground(java.awt.Color.blue);
        txtRetiros.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        txtRetiros.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtRetiros.setText("0.00");
        txtRetiros.setEnabled(false);

        jLabel6.setFont(new java.awt.Font("UnBatang", 0, 17)); // NOI18N
        jLabel6.setText("Saldo final");

        txtSaldoFinal.setEditable(false);
        txtSaldoFinal.setBackground(java.awt.Color.blue);
        txtSaldoFinal.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        txtSaldoFinal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtSaldoFinal.setText("0.00");
        txtSaldoFinal.setEnabled(false);

        lblFisico.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        lblFisico.setForeground(new java.awt.Color(1, 127, 63));
        lblFisico.setText("Saldo físico");
        lblFisico.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblFisico.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblFisicoMouseClicked(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("UnBatang", 0, 17)); // NOI18N
        jLabel8.setText("Diferencia");

        txtFisico.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        txtFisico.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtFisico.setText("0.00");
        txtFisico.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtFisicoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFisicoFocusLost(evt);
            }
        });
        txtFisico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFisicoActionPerformed(evt);
            }
        });

        txtDif.setEditable(false);
        txtDif.setBackground(java.awt.Color.blue);
        txtDif.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        txtDif.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtDif.setText("0.00");
        txtDif.setEnabled(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(lblFisico)
                    .addComponent(jLabel6)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDif, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFisico, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSaldoFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtRetiros, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDepositos, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSaldoInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtDepositos, txtDif, txtFisico, txtRetiros, txtSaldoFinal, txtSaldoInicial});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtSaldoInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtDepositos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtRetiros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtSaldoFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFisico)
                    .addComponent(txtFisico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtDif, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        chkCerrada.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        chkCerrada.setText("Cerrada");
        chkCerrada.setToolTipText("");
        chkCerrada.setEnabled(false);

        jLabel9.setFont(new java.awt.Font("Ubuntu", 1, 24)); // NOI18N
        jLabel9.setText("Saldo en efectivo:");

        txtEfectivo.setEditable(false);
        txtEfectivo.setFont(new java.awt.Font("Ubuntu", 1, 24)); // NOI18N
        txtEfectivo.setForeground(new java.awt.Color(70, 62, 241));
        txtEfectivo.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtEfectivo.setText("0.00");
        txtEfectivo.setEnabled(false);

        btnRecalcular.setFont(new java.awt.Font("UnBatang", 1, 15)); // NOI18N
        btnRecalcular.setText("Recalcular");
        btnRecalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRecalcularActionPerformed(evt);
            }
        });

        btnCerrarCaja.setFont(new java.awt.Font("UnBatang", 1, 15)); // NOI18N
        btnCerrarCaja.setForeground(java.awt.Color.red);
        btnCerrarCaja.setText("Cerrar caja");
        btnCerrarCaja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarCajaActionPerformed(evt);
            }
        });

        btnDepositoDirecto.setFont(new java.awt.Font("UnBatang", 1, 15)); // NOI18N
        btnDepositoDirecto.setText("Trans. Directas");
        btnDepositoDirecto.setToolTipText("Registrar depósitos y retiros directos");
        btnDepositoDirecto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDepositoDirectoActionPerformed(evt);
            }
        });

        btnTransacciones.setFont(new java.awt.Font("UnBatang", 1, 15)); // NOI18N
        btnTransacciones.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Factura.png"))); // NOI18N
        btnTransacciones.setText("Transacciones");
        btnTransacciones.setToolTipText("Ver transacciones");
        btnTransacciones.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnTransacciones.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        btnTransacciones.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        btnTransacciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTransaccionesActionPerformed(evt);
            }
        });

        chkBloqueada.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        chkBloqueada.setText("Bloqueada");

        mnuArchivo.setText("Archivo");

        mnuGuardar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_MASK));
        mnuGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/disk.png"))); // NOI18N
        mnuGuardar.setText("Guardar");
        mnuGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuGuardarActionPerformed(evt);
            }
        });
        mnuArchivo.add(mnuGuardar);

        mnuSalir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.CTRL_MASK));
        mnuSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/control-power.png"))); // NOI18N
        mnuSalir.setText("Salir");
        mnuSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuSalirActionPerformed(evt);
            }
        });
        mnuArchivo.add(mnuSalir);

        jMenuBar1.add(mnuArchivo);

        mnuEdicion.setText("Edición");

        mnuBorrar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_DELETE, java.awt.event.InputEvent.CTRL_MASK));
        mnuBorrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/cross.png"))); // NOI18N
        mnuBorrar.setText("Borrar");
        mnuBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuBorrarActionPerformed(evt);
            }
        });
        mnuEdicion.add(mnuBorrar);

        mnuBuscar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.CTRL_MASK));
        mnuBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/binocular.png"))); // NOI18N
        mnuBuscar.setText("Buscar");
        mnuBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuBuscarActionPerformed(evt);
            }
        });
        mnuEdicion.add(mnuBuscar);

        jMenuBar1.add(mnuEdicion);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(chkBloqueada, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtFechaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(txtFechaFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chkCerrada)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblFamilia)
                        .addGap(2, 2, 2)
                        .addComponent(txtIdcaja, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtEfectivo)
                .addGap(12, 12, 12))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnTransacciones, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRecalcular, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDepositoDirecto, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCerrarCaja))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnCerrarCaja, btnDepositoDirecto, btnRecalcular, btnTransacciones});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                        .addComponent(lblFamilia)
                        .addComponent(txtIdcaja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFechaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFechaFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkBloqueada)
                    .addComponent(chkCerrada))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnRecalcular)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDepositoDirecto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnTransacciones)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCerrarCaja))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtEfectivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void mnuGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuGuardarActionPerformed
        btnGuardarActionPerformed(evt);
}//GEN-LAST:event_mnuGuardarActionPerformed

    private void mnuSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuSalirActionPerformed
        dispose();
}//GEN-LAST:event_mnuSalirActionPerformed

    private void mnuBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuBorrarActionPerformed
        btnBorrarActionPerformed(evt);
}//GEN-LAST:event_mnuBorrarActionPerformed

    private void mnuBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuBuscarActionPerformed
        bd = new Buscador(new java.awt.Frame(), true,
                    "caja","idcaja,descripcion","descripcion",txtIdcaja,conn);
        bd.setTitle("Buscar cajas");
        bd.lblBuscar.setText("Caja");
        bd.setVisible(true);
        this.txtIdcajaFocusLost(null);
}//GEN-LAST:event_mnuBuscarActionPerformed

    private void txtIdcajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdcajaActionPerformed
        txtIdcaja.transferFocus();
}//GEN-LAST:event_txtIdcajaActionPerformed

    private void btnPrimeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrimeroActionPerformed
        try {
            int idcaja = nav.first("caja", "idcaja");
            caja.setIdcaja(idcaja);
            if (caja.isError()){
                JOptionPane.showMessageDialog(null, 
                        caja.getMensaje_error(),
                        "Error",
                        JOptionPane.ERROR_MESSAGE);
                return;
            } // end if
            showData();
        } catch (Exception ex) {
            Logger.getLogger(Caja.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, 
                    ex.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            log.writeToLog(this.getClass().getName() + "--> " + ex.getMessage(), Bitacora.ERROR);
        } // end try-catch
        
}//GEN-LAST:event_btnPrimeroActionPerformed

    private void btnAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnteriorActionPerformed
        int idcaja = 0;
        if (!txtIdcaja.getText().trim().isEmpty()){
            idcaja = Integer.parseInt(txtIdcaja.getText().trim());
        } // end if
        
        try {
            idcaja = nav.previous("caja", "idcaja", idcaja);
            caja.setIdcaja(idcaja);
            if (caja.isError()){
                JOptionPane.showMessageDialog(null, 
                        caja.getMensaje_error(),
                        "Error",
                        JOptionPane.ERROR_MESSAGE);
                return;
            } // end if
            showData();
        } catch (Exception ex) {
            Logger.getLogger(Caja.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, 
                    ex.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            log.writeToLog(this.getClass().getName() + "--> " + ex.getMessage(), Bitacora.ERROR);
        } // end try-catch
}//GEN-LAST:event_btnAnteriorActionPerformed

    private void btnSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSiguienteActionPerformed
        int idcaja = 0;
        if (!txtIdcaja.getText().trim().isEmpty()){
            idcaja = Integer.parseInt(txtIdcaja.getText().trim());
        } // end if
        
        try {
            idcaja = nav.next("caja", "idcaja", idcaja);
            caja.setIdcaja(idcaja);
            if (caja.isError()){
                JOptionPane.showMessageDialog(null, 
                        caja.getMensaje_error(),
                        "Error",
                        JOptionPane.ERROR_MESSAGE);
                return;
            } // end if
            showData();
        } catch (Exception ex) {
            Logger.getLogger(Caja.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, 
                    ex.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            log.writeToLog(this.getClass().getName() + "--> " + ex.getMessage(), Bitacora.ERROR);
        } // end try-catch
}//GEN-LAST:event_btnSiguienteActionPerformed

    private void btnUltimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUltimoActionPerformed
        try {
            int idcaja = nav.last("caja", "idcaja");
            caja.setIdcaja(idcaja);
            if (caja.isError()){
                JOptionPane.showMessageDialog(null, 
                        caja.getMensaje_error(),
                        "Error",
                        JOptionPane.ERROR_MESSAGE);
                return;
            } // end if
            showData();
        } catch (Exception ex) {
            Logger.getLogger(Caja.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, 
                    ex.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            log.writeToLog(this.getClass().getName() + "--> " + ex.getMessage(), Bitacora.ERROR);
        } // end try-catch
}//GEN-LAST:event_btnUltimoActionPerformed

    /**
     * Guarda los siguientes campos (únicamente):
     * descripcion  - Nombre de la caja
     * bloqueada    - Estado de bloqueo (S/N)
     * user         - Cajero
     * fisico       - Monto del conteo físico de dinero
     * @param evt 
     */
    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        caja.setDescripcion(this.txtDescripcion.getText().trim());
        caja.setUser(this.txtUser.getText().trim());
        
        if (caja.isError()){
            JOptionPane.showMessageDialog(null, 
                    caja.getMensaje_error(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            return;
        } // end if
        
        
        try {
            String fisico = Ut.quitarFormato(this.txtFisico.getText().trim());
            caja.setFisico(Double.parseDouble(fisico));
            
            CMD.transaction(conn, CMD.START_TRANSACTION);
            
           
            if (caja.existeEnBaseDatos(caja.getIdcaja())){
                caja.update();
            } else {
                caja.insert();
            } // end if
            
            // Se bloquea o desbloquea la caja según corresponda
            if (!caja.isError()){
                caja.bloquear(chkBloqueada.isSelected());
            } // end if
            
            if (caja.isError()){
                CMD.transaction(conn, CMD.ROLLBACK);
                JOptionPane.showMessageDialog(null, 
                        caja.getMensaje_error(),
                        "Error",
                        JOptionPane.ERROR_MESSAGE);
            } else {
                CMD.transaction(conn, CMD.COMMIT);
            } // end if-else
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(
                    null,
                    ex.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            log.writeToLog(this.getClass().getName() + "--> " + ex.getMessage(), Bitacora.ERROR);
            return;
        } // end try-catch
        
        if (caja.isError()){
            JOptionPane.showMessageDialog(
                    null,
                    caja.getMensaje_error(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            return;
        } // end if
        
        // Si el evento fue invocado por el cierre de caja no se debe desplegar
        // este mensaje.
        if (evt != null){
            JOptionPane.showMessageDialog(
                        null,
                        "Caja guardada exitosamente.",
                        "Mensaje",
                        JOptionPane.INFORMATION_MESSAGE);
        } // end if
}//GEN-LAST:event_btnGuardarActionPerformed

    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed
        // No se hace control transaccional porque solo se puede eliminar
        // si no hay transacciones en otras tablas.  La integridad referencial
        // no permitirá la eliminación si así fuera.
        int resp = 
                JOptionPane.showConfirmDialog(null, 
                    "¿Realmente desea eliminar esta caja?",
                    "Confirme...", 
                    JOptionPane.YES_NO_OPTION);
        if (resp != JOptionPane.YES_OPTION){
            return;
        } // end if
        
        int regAf = caja.delete();
        
        if (caja.isError()){
            JOptionPane.showMessageDialog(null,
                    caja.getMensaje_error(),
                    "Error", 
                    JOptionPane.ERROR_MESSAGE);
            return;
        } // end if
        
        if (regAf <= 0){
            JOptionPane.showMessageDialog(null,
                    "El registro no se pudo eliminar.\n" +
                    "Debe ponerse en contacto con el administrador de base de datos.",
                    "Error", 
                    JOptionPane.ERROR_MESSAGE);
        } // end if
}//GEN-LAST:event_btnBorrarActionPerformed

    private void txtIdcajaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtIdcajaFocusLost
        String idcaja = txtIdcaja.getText().trim();
        if (idcaja.isEmpty()){
            return;
        } // end if
        
        caja.setIdcaja(Integer.parseInt(idcaja));
        
        showData();
    }//GEN-LAST:event_txtIdcajaFocusLost

    private void txtIdcajaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtIdcajaFocusGained
        txtIdcaja.selectAll();
    }//GEN-LAST:event_txtIdcajaFocusGained

    private void txtFisicoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFisicoFocusGained
        txtFisico.selectAll();
    }//GEN-LAST:event_txtFisicoFocusGained

    private void txtFisicoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFisicoFocusLost
        try {
            calcularDiferencia();
        } catch (Exception ex) {
            Logger.getLogger(Caja.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, 
                    ex.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            log.writeToLog(this.getClass().getName() + "--> " + ex.getMessage(), Bitacora.ERROR);
        } // end try-catch
    }//GEN-LAST:event_txtFisicoFocusLost

    private void txtFisicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFisicoActionPerformed
        if (txtFisico.getText().trim().isEmpty()){
            return;
        } // end if
        
        try {
            txtFisico.setText(Ut.setDecimalFormat(txtFisico.getText().trim(), "#,##0.00"));
        } catch (Exception ex) {
            Logger.getLogger(Caja.class.getName()).log(Level.SEVERE, null, ex);
            log.writeToLog(this.getClass().getName() + "--> " + ex.getMessage(), Bitacora.ERROR);
        }
        
        txtFisico.transferFocus();
    }//GEN-LAST:event_txtFisicoActionPerformed

    private void btnRecalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRecalcularActionPerformed
        boolean tran = false;
        try {
            CMD.transaction(conn, CMD.START_TRANSACTION);
            tran = true;
            caja.setIdcaja(Integer.parseInt(this.txtIdcaja.getText().trim()));
            
            if (caja.isError()){
                CMD.transaction(conn, CMD.ROLLBACK);
                JOptionPane.showMessageDialog(null, 
                        caja.getMensaje_error(),
                        "Error",
                        JOptionPane.ERROR_MESSAGE);
                return;
            } // end if
            
            caja.calculateBalance();
            
            if (caja.isError()){
                CMD.transaction(conn, CMD.ROLLBACK);
                JOptionPane.showMessageDialog(null, 
                        caja.getMensaje_error(),
                        "Error",
                        JOptionPane.ERROR_MESSAGE);
                return;
            } // end if
            
            CMD.transaction(conn, CMD.COMMIT);
            
            this.showData();
        } catch (SQLException | NumberFormatException | HeadlessException ex) {
            Logger.getLogger(Caja.class.getName()).log(Level.SEVERE, null, ex);
            if (tran){
                try {
                    CMD.transaction(conn, CMD.ROLLBACK);
                } catch (SQLException ex1) {
                    Logger.getLogger(Caja.class.getName()).log(Level.SEVERE, null, ex1);
                    JOptionPane.showMessageDialog(null, 
                            "Error en el motor de base de datos.\n" +
                            "El sistema se cerrará para proteger la integridad.",
                            "Error",
                            JOptionPane.ERROR_MESSAGE);
                    log.writeToLog(this.getClass().getName() + "--> " + ex.getMessage(), Bitacora.ERROR);
                    System.exit(1);
                    return;
                } // end try-catch interno
            } // end if tran
            
            JOptionPane.showMessageDialog(null, 
                    ex.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
        } // end try-catch
    }//GEN-LAST:event_btnRecalcularActionPerformed

    private void btnCerrarCajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarCajaActionPerformed
        try {
            // Se permite realizar el cierre con el saldo físico en cero
            // siempre y cuando también el saldo teórico también este en cero.
            double fis = Double.parseDouble(
                    Ut.quitarFormato(this.txtFisico.getText().trim()));
            double teo = Double.parseDouble(
                    Ut.quitarFormato(this.txtSaldoFinal.getText().trim()));
            if (fis <= 0 && teo != fis){
                JOptionPane.showMessageDialog(null, 
                        "El saldo físico debe ser un monto mayor que cero.\n",
                        "Error",
                        JOptionPane.ERROR_MESSAGE);
                return;
            } // end if
        } catch (Exception ex) {
            Logger.getLogger(Caja.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, 
                    "El valor digitado en el monto físico es incorrecto.",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            log.writeToLog(this.getClass().getName() + "--> " + ex.getMessage(), Bitacora.ERROR);
            return;
        } // end try-catch
        
        // Validar que la caja no esté bloqueada por otro usuario
        if (this.chkBloqueada.isSelected() && !Usuario.USUARIO.equals(caja.getUser().trim())){
            JOptionPane.showMessageDialog(null, 
                    "No puede cerrar la caja ahora.\n" +
                    "El siguiente usuario la tiene bloqueada: " + caja.getUser().trim(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            return;
        } // end if
        
        int resp = 
                JOptionPane.showConfirmDialog(null, 
                        "¿Realmente desea ejecutar el cierre de caja?",
                        "Confirme",
                        JOptionPane.YES_NO_OPTION,
                        JOptionPane.WARNING_MESSAGE);
        if (resp == JOptionPane.NO_OPTION){
            return;
        } // end if
        
        // Antes de realizar el cierre me aseguro que los datos estén guardados
        this.btnGuardarActionPerformed(null);
        
        int idcaja = caja.getIdcaja();
        
        caja.cerrar();
        
        if (caja.isError()){
            JOptionPane.showMessageDialog(null, 
                    caja.getMensaje_error() + "\nProceso cancelado.",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
        } // end if
        
        // Refrescar los datos de caja
        caja.setIdcaja(idcaja);
        this.showData();
    }//GEN-LAST:event_btnCerrarCajaActionPerformed

    private void btnDepositoDirectoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDepositoDirectoActionPerformed
        TransaccionDirecta.main(conn, caja, this);
    }//GEN-LAST:event_btnDepositoDirectoActionPerformed

    private void lblFisicoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblFisicoMouseClicked
        DesgloceDinero2 dd;
        dd = new DesgloceDinero2(this);
        dd.setVisible(true);
        this.txtFisico.requestFocusInWindow();
    }//GEN-LAST:event_lblFisicoMouseClicked

    private void btnTransaccionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTransaccionesActionPerformed
        /*
        Parámetros: idCaja, Conexión, tablaHistorica, fecha1, fecha2
        */
        ConsultaTransaccionesCaja.main(
                Integer.parseInt(this.txtIdcaja.getText().trim()), conn, false, null, null);
    }//GEN-LAST:event_btnTransaccionesActionPerformed

    

    /**
     * @param c
    */
    public static void main(Connection c) {
        try {
            if (!UtilBD.tienePermiso(c,"Caja")){
                JOptionPane.showMessageDialog(null,
                        "Usted no está autorizado para ejecutar este proceso",
                        "Error - Permisos",
                        JOptionPane.ERROR_MESSAGE);
                return;
            } // end if
        } catch (Exception ex) {
            Logger.getLogger(Caja.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, 
                    ex.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        try {
            Caja run = new Caja(c);
            run.setVisible(true);
        } catch (SQLException | SQLInjectionException | EmptyDataSourceException ex) {
            JOptionPane.showMessageDialog(
                    null,
                    ex.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAnterior;
    private javax.swing.JButton btnBorrar;
    private javax.swing.JButton btnCerrarCaja;
    private javax.swing.JButton btnDepositoDirecto;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnPrimero;
    private javax.swing.JButton btnRecalcular;
    private javax.swing.JButton btnSiguiente;
    private javax.swing.JButton btnTransacciones;
    private javax.swing.JButton btnUltimo;
    private javax.swing.JCheckBox chkBloqueada;
    private javax.swing.JCheckBox chkCerrada;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblFamilia;
    private javax.swing.JLabel lblFisico;
    private javax.swing.JMenu mnuArchivo;
    private javax.swing.JMenuItem mnuBorrar;
    private javax.swing.JMenuItem mnuBuscar;
    private javax.swing.JMenu mnuEdicion;
    private javax.swing.JMenuItem mnuGuardar;
    private javax.swing.JMenuItem mnuSalir;
    private javax.swing.JTextField txtDepositos;
    private javax.swing.JFormattedTextField txtDescripcion;
    private javax.swing.JTextField txtDif;
    private javax.swing.JTextField txtEfectivo;
    private javax.swing.JTextField txtFechaFinal;
    private javax.swing.JTextField txtFechaInicio;
    private javax.swing.JTextField txtFisico;
    private javax.swing.JFormattedTextField txtIdcaja;
    private javax.swing.JTextField txtRetiros;
    private javax.swing.JTextField txtSaldoFinal;
    private javax.swing.JTextField txtSaldoInicial;
    private javax.swing.JTextField txtUser;
    // End of variables declaration//GEN-END:variables

    

    private void showData() {
        
        txtIdcaja.setText(caja.getIdcaja()+"");
        txtDescripcion.setText(caja.getDescripcion());
        chkBloqueada.setSelected(caja.isBloqueada());
        chkCerrada.setSelected(caja.isCerrada());
        txtFechaInicio.setText(Ut.dtoc(caja.getFechaInicio()));
        txtFechaFinal.setText(Ut.dtoc(caja.getFechaFinal()));
        txtUser.setText(caja.getUser());
        txtEfectivo.setText("0.00");
        
        try {
            txtSaldoInicial.setText(Ut.setDecimalFormat(caja.getSaldoinicial()+"", "#,##0.00"));
            txtDepositos.setText(Ut.setDecimalFormat(caja.getDepositos()+"", "#,##0.00"));
            txtRetiros.setText(Ut.setDecimalFormat(caja.getRetiros()+"", "#,##0.00"));
            txtSaldoFinal.setText(Ut.setDecimalFormat(caja.getSaldoactual()+"", "#,##0.00"));
            txtFisico.setText(Ut.setDecimalFormat(caja.getFisico()+"", "#,##0.00"));
            txtDif.setText(Ut.setDecimalFormat(
                    (caja.getFisico() - caja.getSaldoactual()) + "", "#,##0.00"));
            txtEfectivo.setText(Ut.setDecimalFormat(caja.getEfectivo()+"", "#,##0.00"));
        } catch (Exception ex) {
            Logger.getLogger(Caja.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, 
                    ex.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            log.writeToLog(this.getClass().getName() + "--> " + ex.getMessage(), Bitacora.ERROR);
        } // end try-catch
    }

    /**
     * Este método, en la teoría, hace el mismo cálculo que el método showData
     * pero en la práctica es ligeramente distinto ya que el cálculo se realiza
     * sobre los valores de los text boxes mientras que showData lo hace desde 
     * los valores de la clase Cacaja.class.  Estos valores son distintos cuando
     * el usuario ingresa el monto físico.
     * @throws ParseException 
     */
    public void calcularDiferencia() throws Exception {
        double saldo, fisico, dif;
        saldo = Double.parseDouble(
                Ut.quitarFormato(this.txtSaldoFinal.getText().trim()));
        fisico = Double.parseDouble(
                Ut.quitarFormato(this.txtFisico.getText().trim()));
        dif = fisico - saldo;
        this.txtDif.setText(Ut.setDecimalFormat(dif+"", "#,##0.00"));
    } // end calcularDiferencia
    
    public void refresh(){
        this.txtIdcajaFocusLost(null);
    }
} // end class
/*
 * Inproved.java 
 *
 * Created on 02/05/2009, 12:06:56 PM Bosco Garita Azofeifa
 * Modificado 02/09/2013, 08:12:00 PM Bosco Garita Azofeifa
 */
package interfase.mantenimiento;

import geografia.view.CantonC;
import geografia.view.DistritoC;
import geografia.view.ProvinciaC;
import geografia.model.CantonM;
import geografia.model.DistritoM;
import geografia.model.ProvinciaM;
import Mail.Bitacora;
import accesoDatos.CMD;
import accesoDatos.UtilBD;
import interfase.consultas.ConsultaFacturasCXP;
import interfase.otros.Buscador;
import interfase.otros.Navegador;
import interfase.reportes.RepAntigSaldosCXP;
import interfase.reportes.RepEstadoCtaCXP;
import interfase.reportes.RepPagosCXP;
import interfase.transacciones.RegistroFacturasC;
import interfase.transacciones.RegistroPagosCXP;
import java.sql.*;
import java.text.DateFormat;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import logica.IMantenimiento;
import contabilidad.logica.Cuenta;
import logica.utilitarios.SQLInjectionException;
import logica.utilitarios.Ut;

/**
 *
 * @author Bosco Garita
 */
@SuppressWarnings("serial")
public class Inproved extends javax.swing.JFrame implements IMantenimiento {

    private Buscador bd;
    private final Connection conn;
    private Navegador nav = null;
    private final Statement stat;
    private ResultSet rs = null;
    private final String tabla;
    // Bosco agregado 02/09/2013
    // Agrego la clase de cuenta contable
    private Cuenta cuenta;
    // Fin Bosco agregado 02/09/2013

    // Información para el xml de compara (Julio 2019)
    private int codigoP;    // Provincia
    private int codigoC;    // Cantón
    private int codigoD;    // Distrito
    private List<ProvinciaM> provincias;
    private List<CantonM> cantones;
    private List<DistritoM> distritos;

    private boolean inicio;
    private Bitacora b = new Bitacora();

    public Inproved(Connection c) throws Exception {
        initComponents();

        inicio = true;

        // Bosco agregado 15/01/2012.
        // Establecer la máscara telefónica de acuerdo con la configuración.
        javax.swing.JFormattedTextField[] campos
                = {txtProtel1, txtProtel2, txtProfax};
        UtilBD.setMascaraT(c, campos);
        // Fin Bosco agregado 15/01/2012.

        btnBuscar.setVisible(false);
        conn = c;
        tabla = "inproved";
        nav = new Navegador();
        nav.setConexion(conn);
        stat = conn.createStatement();

        rs = nav.cargarRegistro(1, " ", tabla, "procode");

        if (rs == null || !rs.first() || rs.getRow() < 1) {
            return;
        } // end if
        // Bosco agregado 02/09/2013
        cuenta = new Cuenta();
        // Fin Bosco agregado 02/09/2013
        cargarObjetos();

        inicio = false;
    } // end constructor

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBuscar = new javax.swing.JButton();
        jPanelBotonera = new javax.swing.JPanel();
        btnPrimero = new javax.swing.JButton();
        btnAnterior = new javax.swing.JButton();
        btnSiguiente = new javax.swing.JButton();
        btnUltimo = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnBorrar = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanelDatosGenerales = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        txtProapar = new javax.swing.JFormattedTextField();
        txtProtel1 = new javax.swing.JFormattedTextField();
        txtProtel2 = new javax.swing.JFormattedTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txaProdir = new javax.swing.JTextArea();
        chkPronac = new javax.swing.JCheckBox();
        jLabel7 = new javax.swing.JLabel();
        txtProfax = new javax.swing.JFormattedTextField();
        jLabel10 = new javax.swing.JLabel();
        txtProfeuc = new javax.swing.JFormattedTextField();
        txtPromouc = new javax.swing.JFormattedTextField();
        btnDiaVisita = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        txtIDProv = new javax.swing.JFormattedTextField();
        cboIdTipo = new javax.swing.JComboBox<>();
        jPanelCredito = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtProplaz = new javax.swing.JFormattedTextField();
        jLabel3 = new javax.swing.JLabel();
        txtProsald = new javax.swing.JFormattedTextField();
        jLabel11 = new javax.swing.JLabel();
        txtMora = new javax.swing.JFormattedTextField();
        cmdVerdetalle = new javax.swing.JButton();
        jPanelOtros = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        txtProcueba = new javax.swing.JFormattedTextField();
        jLabel8 = new javax.swing.JLabel();
        txtMayor = new javax.swing.JTextField();
        txtSub_cta = new javax.swing.JTextField();
        txtSub_sub = new javax.swing.JTextField();
        txtColect = new javax.swing.JTextField();
        lblNom_cta = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        cboProvincia = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        cboCanton = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        cboDistrito = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        txtProcode = new javax.swing.JFormattedTextField();
        txtProdesc = new javax.swing.JFormattedTextField();
        jLabel27 = new javax.swing.JLabel();
        txtProsald1 = new javax.swing.JFormattedTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        mnuArchivo = new javax.swing.JMenu();
        mnuGuardar = new javax.swing.JMenuItem();
        mnuSalir = new javax.swing.JMenuItem();
        mnuEdicion = new javax.swing.JMenu();
        mnuBorrar = new javax.swing.JMenuItem();
        mnuBuscar = new javax.swing.JMenuItem();
        mnuRegFactura = new javax.swing.JMenuItem();
        mnuRegitrarPago = new javax.swing.JMenuItem();
        mnuDiaVisita = new javax.swing.JMenuItem();
        mnuVer = new javax.swing.JMenu();
        mnuFacturas = new javax.swing.JMenuItem();
        mnuPagos = new javax.swing.JMenuItem();
        mnuEstadoCta = new javax.swing.JMenuItem();
        mnuAntigSaldos = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Mantenimiento de proveedores");

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnPrimero.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/WZTOP.png"))); // NOI18N
        btnPrimero.setToolTipText("Ir al primer registro");
        btnPrimero.setFocusCycleRoot(true);
        btnPrimero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrimeroActionPerformed(evt);
            }
        });

        btnAnterior.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/WZBACK.png"))); // NOI18N
        btnAnterior.setToolTipText("Ir al registro anterior");
        btnAnterior.setFocusCycleRoot(true);
        btnAnterior.setMaximumSize(new java.awt.Dimension(93, 29));
        btnAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnteriorActionPerformed(evt);
            }
        });

        btnSiguiente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/WZNEXT.png"))); // NOI18N
        btnSiguiente.setToolTipText("Ir al siguiente registro");
        btnSiguiente.setMaximumSize(new java.awt.Dimension(93, 29));
        btnSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSiguienteActionPerformed(evt);
            }
        });

        btnUltimo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/WZEND.png"))); // NOI18N
        btnUltimo.setToolTipText("Ir al último registro");
        btnUltimo.setFocusCycleRoot(true);
        btnUltimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUltimoActionPerformed(evt);
            }
        });

        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/WZSAVE.png"))); // NOI18N
        btnGuardar.setToolTipText("Guardar registro");
        btnGuardar.setMaximumSize(new java.awt.Dimension(93, 29));
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnBorrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/WZDELETE.png"))); // NOI18N
        btnBorrar.setToolTipText("Borrar registro");
        btnBorrar.setMaximumSize(new java.awt.Dimension(93, 29));
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelBotoneraLayout = new javax.swing.GroupLayout(jPanelBotonera);
        jPanelBotonera.setLayout(jPanelBotoneraLayout);
        jPanelBotoneraLayout.setHorizontalGroup(
            jPanelBotoneraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBotoneraLayout.createSequentialGroup()
                .addGap(139, 139, 139)
                .addComponent(btnPrimero, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(btnAnterior, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(btnSiguiente, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(btnUltimo, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(btnBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelBotoneraLayout.setVerticalGroup(
            jPanelBotoneraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBotoneraLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelBotoneraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnPrimero, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnAnterior, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSiguiente, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUltimo, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnGuardar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBorrar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Apartado");

        txtProapar.setColumns(15);
        try {
            txtProapar.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("***************")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtProapar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtProapar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProaparActionPerformed(evt);
            }
        });

        txtProtel1.setColumns(9);
        try {
            txtProtel1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtProtel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtProtel1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProtel1ActionPerformed(evt);
            }
        });

        txtProtel2.setColumns(9);
        try {
            txtProtel2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtProtel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtProtel2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProtel2ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/telephone.png"))); // NOI18N
        jLabel6.setText("Teéfono");
        jLabel6.setToolTipText("Teléfonos");
        jLabel6.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Dirección");

        txaProdir.setColumns(60);
        txaProdir.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txaProdir.setLineWrap(true);
        txaProdir.setRows(5);
        txaProdir.setWrapStyleWord(true);
        jScrollPane1.setViewportView(txaProdir);

        chkPronac.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        chkPronac.setSelected(true);
        chkPronac.setText("Nacional");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Fax");

        txtProfax.setColumns(9);
        try {
            txtProfax.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtProfax.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtProfax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProfaxActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setText("Última compra");

        txtProfeuc.setEditable(false);
        txtProfeuc.setColumns(10);
        txtProfeuc.setForeground(java.awt.Color.blue);
        txtProfeuc.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));
        txtProfeuc.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        txtPromouc.setEditable(false);
        txtPromouc.setColumns(14);
        txtPromouc.setForeground(java.awt.Color.blue);
        txtPromouc.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        txtPromouc.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtPromouc.setToolTipText("Monto de la última compra (moneda local)");
        txtPromouc.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        btnDiaVisita.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        btnDiaVisita.setText("Días de visita...");
        btnDiaVisita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDiaVisitaActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/email.png"))); // NOI18N
        jLabel13.setText("E-mail");
        jLabel13.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        txtEmail.setColumns(40);
        txtEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtEmailFocusGained(evt);
            }
        });

        jLabel28.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel28.setText("Identificación");

        txtIDProv.setColumns(20);
        try {
            txtIDProv.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("********************")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        cboIdTipo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cboIdTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cédula Persona Física", "Cédula Persona Jurídica", "Documento de Identificación Migratorio para Extranjeros (DIMEX)", "Número de Identificación Tributario Especial (NITE) " }));
        cboIdTipo.setToolTipText("Tipo de identificación segun Hacienda");

        javax.swing.GroupLayout jPanelDatosGeneralesLayout = new javax.swing.GroupLayout(jPanelDatosGenerales);
        jPanelDatosGenerales.setLayout(jPanelDatosGeneralesLayout);
        jPanelDatosGeneralesLayout.setHorizontalGroup(
            jPanelDatosGeneralesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDatosGeneralesLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanelDatosGeneralesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelDatosGeneralesLayout.createSequentialGroup()
                        .addGroup(jPanelDatosGeneralesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(jLabel28)
                            .addComponent(jLabel6)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelDatosGeneralesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDatosGeneralesLayout.createSequentialGroup()
                                .addComponent(txtProtel1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtProtel2, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtProfax, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtProapar, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(chkPronac))
                            .addGroup(jPanelDatosGeneralesLayout.createSequentialGroup()
                                .addComponent(txtIDProv, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cboIdTipo, 0, 1, Short.MAX_VALUE))
                            .addComponent(txtEmail)
                            .addComponent(jScrollPane1)))
                    .addGroup(jPanelDatosGeneralesLayout.createSequentialGroup()
                        .addComponent(btnDiaVisita)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtProfeuc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtPromouc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 12, Short.MAX_VALUE))
        );
        jPanelDatosGeneralesLayout.setVerticalGroup(
            jPanelDatosGeneralesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDatosGeneralesLayout.createSequentialGroup()
                .addGroup(jPanelDatosGeneralesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtProtel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtProtel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtProfax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtProapar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkPronac))
                .addGap(4, 4, 4)
                .addGroup(jPanelDatosGeneralesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel4)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addGroup(jPanelDatosGeneralesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelDatosGeneralesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtIDProv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboIdTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(jPanelDatosGeneralesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDiaVisita)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtProfeuc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPromouc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4))
        );

        jTabbedPane1.addTab("Datos generales", jPanelDatosGenerales);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Plazo en días");

        txtProplaz.setColumns(5);
        txtProplaz.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        txtProplaz.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtProplaz.setToolTipText("Plazo en días");
        txtProplaz.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtProplaz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProplazActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Saldo actual");

        txtProsald.setEditable(false);
        txtProsald.setColumns(14);
        txtProsald.setForeground(java.awt.Color.blue);
        txtProsald.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        txtProsald.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtProsald.setToolTipText("Saldo actual (moneda local)");
        txtProsald.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtProsald.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProsaldActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setText("Monto en mora");

        txtMora.setEditable(false);
        txtMora.setColumns(14);
        txtMora.setForeground(java.awt.Color.red);
        txtMora.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        txtMora.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtMora.setText("0.00");
        txtMora.setToolTipText("Saldo vencido (moneda local)");
        txtMora.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        cmdVerdetalle.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cmdVerdetalle.setForeground(new java.awt.Color(255, 102, 51));
        cmdVerdetalle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Factura.jpg"))); // NOI18N
        cmdVerdetalle.setText("Ver detalle");
        cmdVerdetalle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdVerdetalleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelCreditoLayout = new javax.swing.GroupLayout(jPanelCredito);
        jPanelCredito.setLayout(jPanelCreditoLayout);
        jPanelCreditoLayout.setHorizontalGroup(
            jPanelCreditoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCreditoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelCreditoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelCreditoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtProplaz, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtProsald, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(txtMora, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 159, Short.MAX_VALUE)
                .addComponent(cmdVerdetalle)
                .addGap(127, 127, 127))
        );
        jPanelCreditoLayout.setVerticalGroup(
            jPanelCreditoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCreditoLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanelCreditoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtProplaz, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addGroup(jPanelCreditoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtProsald, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmdVerdetalle))
                .addGap(4, 4, 4)
                .addGroup(jPanelCreditoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Crédito", jPanelCredito);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("Cuenta bancaria");

        txtProcueba.setColumns(20);
        try {
            txtProcueba.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("********************")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtProcueba.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Cuenta contable");

        txtMayor.setColumns(3);
        txtMayor.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtMayor.setToolTipText("Mayor");
        txtMayor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtMayorFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMayorFocusLost(evt);
            }
        });
        txtMayor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMayorKeyTyped(evt);
            }
        });

        txtSub_cta.setColumns(3);
        txtSub_cta.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtSub_cta.setToolTipText("Sub cuenta");
        txtSub_cta.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtSub_ctaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSub_ctaFocusLost(evt);
            }
        });
        txtSub_cta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSub_ctaKeyTyped(evt);
            }
        });

        txtSub_sub.setColumns(3);
        txtSub_sub.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtSub_sub.setToolTipText("Sub cuenta");
        txtSub_sub.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtSub_subFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSub_subFocusLost(evt);
            }
        });
        txtSub_sub.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSub_subKeyTyped(evt);
            }
        });

        txtColect.setColumns(3);
        txtColect.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtColect.setToolTipText("Sub cuenta");
        txtColect.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtColectFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtColectFocusLost(evt);
            }
        });
        txtColect.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtColectKeyTyped(evt);
            }
        });

        lblNom_cta.setForeground(java.awt.Color.blue);
        lblNom_cta.setText(" ");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Ubicación geográfica"));

        cboProvincia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboProvinciaActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel12.setText("Provincia");

        jLabel14.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel14.setText("Cantón");

        cboCanton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboCantonActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel15.setText("Distrito");

        cboDistrito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboDistritoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(cboProvincia, 0, 224, Short.MAX_VALUE))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(cboCanton, 0, 211, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addGap(0, 179, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cboDistrito, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addGap(4, 4, 4)
                        .addComponent(cboDistrito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addGap(4, 4, 4)
                        .addComponent(cboCanton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(4, 4, 4)
                        .addComponent(cboProvincia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanelOtrosLayout = new javax.swing.GroupLayout(jPanelOtros);
        jPanelOtros.setLayout(jPanelOtrosLayout);
        jPanelOtrosLayout.setHorizontalGroup(
            jPanelOtrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelOtrosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelOtrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelOtrosLayout.createSequentialGroup()
                        .addGroup(jPanelOtrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelOtrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelOtrosLayout.createSequentialGroup()
                                .addComponent(txtMayor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtSub_cta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtSub_sub, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtColect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblNom_cta, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtProcueba, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        jPanelOtrosLayout.setVerticalGroup(
            jPanelOtrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelOtrosLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanelOtrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtProcueba, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelOtrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMayor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSub_cta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSub_sub, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtColect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNom_cta))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        jTabbedPane1.addTab("Otros", jPanelOtros);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Proveedor");

        txtProcode.setColumns(15);
        try {
            txtProcode.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("***************")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtProcode.setToolTipText("Código de proveedor");
        txtProcode.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtProcode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtProcodeFocusGained(evt);
            }
        });
        txtProcode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProcodeActionPerformed(evt);
            }
        });

        txtProdesc.setColumns(40);
        try {
            txtProdesc.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("U***************************************")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtProdesc.setToolTipText("Nombre del proveedor");
        txtProdesc.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtProdesc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProdescActionPerformed(evt);
            }
        });

        jLabel27.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel27.setForeground(java.awt.Color.magenta);
        jLabel27.setText("Saldo actual");

        txtProsald1.setEditable(false);
        txtProsald1.setColumns(14);
        txtProsald1.setForeground(java.awt.Color.blue);
        txtProsald1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        txtProsald1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtProsald1.setToolTipText("Saldo actual");
        txtProsald1.setFocusable(false);
        txtProsald1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        mnuArchivo.setText("Archivo");

        mnuGuardar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_MASK));
        mnuGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/disk.png"))); // NOI18N
        mnuGuardar.setText("Guardar");
        mnuGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuGuardarActionPerformed(evt);
            }
        });
        mnuArchivo.add(mnuGuardar);

        mnuSalir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.CTRL_MASK));
        mnuSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/control-power.png"))); // NOI18N
        mnuSalir.setText("Salir");
        mnuSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuSalirActionPerformed(evt);
            }
        });
        mnuArchivo.add(mnuSalir);

        jMenuBar1.add(mnuArchivo);

        mnuEdicion.setText("Edición");

        mnuBorrar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_DELETE, java.awt.event.InputEvent.CTRL_MASK));
        mnuBorrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/cross.png"))); // NOI18N
        mnuBorrar.setText("Borrar");
        mnuBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuBorrarActionPerformed(evt);
            }
        });
        mnuEdicion.add(mnuBorrar);

        mnuBuscar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.CTRL_MASK));
        mnuBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/binocular.png"))); // NOI18N
        mnuBuscar.setText("Buscar");
        mnuBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuBuscarActionPerformed(evt);
            }
        });
        mnuEdicion.add(mnuBuscar);

        mnuRegFactura.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F3, java.awt.event.InputEvent.CTRL_MASK));
        mnuRegFactura.setText("Registrar facturas");
        mnuRegFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuRegFacturaActionPerformed(evt);
            }
        });
        mnuEdicion.add(mnuRegFactura);

        mnuRegitrarPago.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F6, java.awt.event.InputEvent.CTRL_MASK));
        mnuRegitrarPago.setText("Registrar pagos");
        mnuRegitrarPago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuRegitrarPagoActionPerformed(evt);
            }
        });
        mnuEdicion.add(mnuRegitrarPago);

        mnuDiaVisita.setText("Asignar días de visita");
        mnuDiaVisita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuDiaVisitaActionPerformed(evt);
            }
        });
        mnuEdicion.add(mnuDiaVisita);

        jMenuBar1.add(mnuEdicion);

        mnuVer.setMnemonic('v');
        mnuVer.setText("Ver");

        mnuFacturas.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F8, 0));
        mnuFacturas.setText("Facturas/ND/NC - Historial");
        mnuFacturas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuFacturasActionPerformed(evt);
            }
        });
        mnuVer.add(mnuFacturas);

        mnuPagos.setText("Pagos a este proveedor");
        mnuPagos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuPagosActionPerformed(evt);
            }
        });
        mnuVer.add(mnuPagos);

        mnuEstadoCta.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F9, 0));
        mnuEstadoCta.setText("Estado de cuenta");
        mnuEstadoCta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuEstadoCtaActionPerformed(evt);
            }
        });
        mnuVer.add(mnuEstadoCta);

        mnuAntigSaldos.setText("Antigüedad de saldos");
        mnuAntigSaldos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuAntigSaldosActionPerformed(evt);
            }
        });
        mnuVer.add(mnuAntigSaldos);

        jMenuBar1.add(mnuVer);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(2, 2, 2)
                        .addComponent(txtProcode, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtProdesc, javax.swing.GroupLayout.PREFERRED_SIZE, 484, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanelBotonera, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel27)
                .addGap(10, 10, 10)
                .addComponent(txtProsald1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(229, 229, 229))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtProcode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtProdesc, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE))
                .addGap(4, 4, 4)
                .addComponent(jTabbedPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtProsald1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelBotonera, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        bd = new Buscador(new java.awt.Frame(), true,
                "inproved", "procode,prodesc", "prodesc", txtProcode, conn);
        bd.setTitle("Buscar proveedores");
        bd.lblBuscar.setText("Nombre:");
        bd.setVisible(true);
        txtProcodeActionPerformed(null);
        bd.dispose();
}//GEN-LAST:event_btnBuscarActionPerformed

    private void btnPrimeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrimeroActionPerformed
        try {
            rs = nav.cargarRegistro(
                    Navegador.PRIMERO,
                    txtProcode.getText().trim(), tabla, "procode");
            if (rs == null) {
                return;
            } // end if

            cargarObjetos();

        } catch (SQLException | SQLInjectionException ex) {
            JOptionPane.showMessageDialog(null,
                    ex.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            b.writeToLog(this.getClass().getName() + "--> " + ex.getMessage(), Bitacora.ERROR);
        }
}//GEN-LAST:event_btnPrimeroActionPerformed

    private void btnAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnteriorActionPerformed
        try {
            rs = nav.cargarRegistro(
                    Navegador.ANTERIOR,
                    txtProcode.getText().trim(), tabla, "procode");
            if (rs == null) {
                return;
            } // end if

            cargarObjetos();

        } catch (SQLException | SQLInjectionException ex) {
            JOptionPane.showMessageDialog(null,
                    ex.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            b.writeToLog(this.getClass().getName() + "--> " + ex.getMessage(), Bitacora.ERROR);
        }
}//GEN-LAST:event_btnAnteriorActionPerformed

    private void btnSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSiguienteActionPerformed
        try {
            rs = nav.cargarRegistro(
                    Navegador.SIGUIENTE,
                    txtProcode.getText().trim(), tabla, "procode");
            if (rs == null) {
                return;
            } // end if

            cargarObjetos();

        } catch (SQLException | SQLInjectionException ex) {
            JOptionPane.showMessageDialog(null,
                    ex.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            b.writeToLog(this.getClass().getName() + "--> " + ex.getMessage(), Bitacora.ERROR);
        }
}//GEN-LAST:event_btnSiguienteActionPerformed

    private void btnUltimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUltimoActionPerformed

        try {
            rs = nav.cargarRegistro(
                    Navegador.ULTIMO,
                    txtProcode.getText().trim(), tabla, "procode");
            if (rs == null) {
                return;
            } // end if

            cargarObjetos();

        } catch (SQLException | SQLInjectionException ex) {
            JOptionPane.showMessageDialog(null,
                    ex.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            b.writeToLog(this.getClass().getName() + "--> " + ex.getMessage(), Bitacora.ERROR);
        }
}//GEN-LAST:event_btnUltimoActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        guardarRegistro();
}//GEN-LAST:event_btnGuardarActionPerformed

    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed
        eliminarRegistro(txtProcode.getText().trim());
}//GEN-LAST:event_btnBorrarActionPerformed

    private void txtProcodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProcodeActionPerformed
        refrescarObjetos();
        txtProcode.transferFocus();
    }//GEN-LAST:event_txtProcodeActionPerformed

    private void txtProplazActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProplazActionPerformed
        txtProplaz.transferFocus();
    }//GEN-LAST:event_txtProplazActionPerformed

    private void txtProdescActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProdescActionPerformed
        txtProdesc.transferFocus();
    }//GEN-LAST:event_txtProdescActionPerformed

    private void txtProsaldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProsaldActionPerformed
        txtProsald.transferFocus();
    }//GEN-LAST:event_txtProsaldActionPerformed

    private void txtProaparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProaparActionPerformed
        txtProapar.transferFocus();
    }//GEN-LAST:event_txtProaparActionPerformed

    private void txtProtel1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProtel1ActionPerformed
        txtProtel1.transferFocus();
    }//GEN-LAST:event_txtProtel1ActionPerformed

    private void txtProtel2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProtel2ActionPerformed
        txtProtel2.transferFocus();
    }//GEN-LAST:event_txtProtel2ActionPerformed

    private void txtProfaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProfaxActionPerformed
        txtProfax.transferFocus();
    }//GEN-LAST:event_txtProfaxActionPerformed

    private void mnuGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuGuardarActionPerformed
        btnGuardarActionPerformed(evt);
}//GEN-LAST:event_mnuGuardarActionPerformed

    private void mnuSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuSalirActionPerformed
        dispose();
}//GEN-LAST:event_mnuSalirActionPerformed

    private void mnuBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuBorrarActionPerformed

        eliminarRegistro(txtProcode.getText().trim());
}//GEN-LAST:event_mnuBorrarActionPerformed

    private void mnuBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuBuscarActionPerformed
        btnBuscarActionPerformed(evt);
}//GEN-LAST:event_mnuBuscarActionPerformed

    private void txtProcodeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtProcodeFocusGained
        txtProcode.selectAll();
    }//GEN-LAST:event_txtProcodeFocusGained

    private void txtMayorFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMayorFocusGained
        txtMayor.selectAll();
    }//GEN-LAST:event_txtMayorFocusGained

    private void txtMayorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMayorFocusLost
        if (!cuenta.isAValidField(txtMayor.getText())) {
            JOptionPane.showMessageDialog(null,
                    "El valor para este campo no es correcto.\n"
                    + "Debe ingresar un valor numérico de tres dígitos\n"
                    + "o dejar el campo vacío.");
            txtMayor.setText("");
            txtMayor.requestFocusInWindow();
            return;
        } // end if
        cargarCuenta();
    }//GEN-LAST:event_txtMayorFocusLost

    private void txtMayorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMayorKeyTyped
        /*
         * Se usa el dos como referencia porque cuando este evento
         * por tercera vez el campo tendrá dos valores solamente
         * ya que el tercer valor se almacena posterior a todos los
         * eventos y validaciones.
         */
        if (txtMayor.getText().trim().length() == 2) {
            txtMayor.transferFocus();
        }
    }//GEN-LAST:event_txtMayorKeyTyped

    private void txtSub_ctaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSub_ctaFocusGained
        txtSub_cta.selectAll();
    }//GEN-LAST:event_txtSub_ctaFocusGained

    private void txtSub_ctaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSub_ctaFocusLost
        if (!cuenta.isAValidField(txtSub_cta.getText())) {
            JOptionPane.showMessageDialog(null,
                    "El valor para este campo no es correcto.\n"
                    + "Debe ingresar un valor numérico de tres dígitos\n"
                    + "o dejar el campo vacío.");
            txtSub_cta.setText("");
            txtSub_cta.requestFocusInWindow();
            return;
        } // end if
        cargarCuenta();
    }//GEN-LAST:event_txtSub_ctaFocusLost

    private void txtSub_ctaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSub_ctaKeyTyped
        /*
         * Se usa el dos como referencia porque cuando este evento
         * por tercera vez el campo tendrá dos valores solamente
         * ya que el tercer valor se almacena posterior a todos los
         * eventos y validaciones.
         */
        if (txtSub_cta.getText().trim().length() == 2) {
            txtSub_cta.transferFocus();
        }
    }//GEN-LAST:event_txtSub_ctaKeyTyped

    private void txtSub_subFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSub_subFocusGained
        txtSub_sub.selectAll();
    }//GEN-LAST:event_txtSub_subFocusGained

    private void txtSub_subFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSub_subFocusLost
        if (!cuenta.isAValidField(txtSub_sub.getText())) {
            JOptionPane.showMessageDialog(null,
                    "El valor para este campo no es correcto.\n"
                    + "Debe ingresar un valor numérico de tres dígitos\n"
                    + "o dejar el campo vacío.");
            txtSub_sub.setText("");
            txtSub_sub.requestFocusInWindow();
            return;
        } // end if
        cargarCuenta();
    }//GEN-LAST:event_txtSub_subFocusLost

    private void txtSub_subKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSub_subKeyTyped
        /*
         * Se usa el dos como referencia porque cuando este evento
         * corre por tercera vez el campo tendrá dos valores solamente
         * ya que el tercer valor se almacena posterior a todos los
         * eventos y validaciones.
         */
        if (txtSub_sub.getText().trim().length() == 2) {
            txtSub_sub.transferFocus();
        }
    }//GEN-LAST:event_txtSub_subKeyTyped

    private void txtColectFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtColectFocusGained
        txtColect.selectAll();
    }//GEN-LAST:event_txtColectFocusGained

    private void txtColectFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtColectFocusLost
        if (!cuenta.isAValidField(txtColect.getText())) {
            JOptionPane.showMessageDialog(null,
                    "El valor para este campo no es correcto.\n"
                    + "Debe ingresar un valor numérico de tres dígitos\n"
                    + "o dejar el campo vacío.");
            txtColect.setText("");
            txtColect.requestFocusInWindow();
            return;
        } // end if
        cargarCuenta();
    }//GEN-LAST:event_txtColectFocusLost

    private void txtColectKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtColectKeyTyped
        /*
         * Se usa el dos como referencia porque cuando este evento
         * por tercera vez el campo tendrá dos valores solamente
         * ya que el tercer valor se almacena posterior a todos los
         * eventos y validaciones.
         */
        if (txtColect.getText().trim().length() == 2) {
            txtColect.transferFocus();
        }
    }//GEN-LAST:event_txtColectKeyTyped

    private void cmdVerdetalleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdVerdetalleActionPerformed
        try {
            // Facturas y NC con saldo
            new ConsultaFacturasCXP(
                    conn, txtProcode.getText().trim(), true).setVisible(true);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,
                    ex.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            b.writeToLog(this.getClass().getName() + "--> " + ex.getMessage(), Bitacora.ERROR);
        } // end try-catch
    }//GEN-LAST:event_cmdVerdetalleActionPerformed

    private void mnuFacturasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuFacturasActionPerformed
        try {
            new ConsultaFacturasCXP(
                    conn, txtProcode.getText().trim(), false).setVisible(true);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,
                    ex.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            b.writeToLog(this.getClass().getName() + "--> " + ex.getMessage(), Bitacora.ERROR);
        }
    }//GEN-LAST:event_mnuFacturasActionPerformed

    private void mnuPagosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuPagosActionPerformed
        RepPagosCXP.main(conn, this.txtProcode.getText());
    }//GEN-LAST:event_mnuPagosActionPerformed

    private void mnuEstadoCtaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuEstadoCtaActionPerformed
        String procode = txtProcode.getText().trim();
        RepEstadoCtaCXP.main(conn, procode);
    }//GEN-LAST:event_mnuEstadoCtaActionPerformed

    private void mnuAntigSaldosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuAntigSaldosActionPerformed

        String procode = txtProcode.getText().trim();

        RepAntigSaldosCXP.main(conn, procode);

    }//GEN-LAST:event_mnuAntigSaldosActionPerformed

    private void mnuRegFacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuRegFacturaActionPerformed
        String procode = txtProcode.getText().trim();

        RegistroFacturasC.main(2, procode, "", 0.0, 0.0, 0.0, conn);

    }//GEN-LAST:event_mnuRegFacturaActionPerformed

    private void mnuRegitrarPagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuRegitrarPagoActionPerformed
        String procode = txtProcode.getText().trim();
        RegistroPagosCXP.main(conn, procode);
    }//GEN-LAST:event_mnuRegitrarPagoActionPerformed

    private void mnuDiaVisitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuDiaVisitaActionPerformed
        DiasVisitaProveedores.main(conn, txtProcode.getText().trim(), txtProdesc.getText().trim());
    }//GEN-LAST:event_mnuDiaVisitaActionPerformed

    private void btnDiaVisitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDiaVisitaActionPerformed
        mnuDiaVisitaActionPerformed(evt);
    }//GEN-LAST:event_btnDiaVisitaActionPerformed

    private void txtEmailFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEmailFocusGained
        txtEmail.selectAll();
    }//GEN-LAST:event_txtEmailFocusGained

    private void cboProvinciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboProvinciaActionPerformed
        if (this.inicio) {
            return;
        }

        this.codigoP = this.provincias.get(this.cboProvincia.getSelectedIndex()).getCodigo();

        // Cargar los cantones de cacuerdo con la provincia.
        CantonC cc = new CantonC(conn, this.provincias.get(this.cboProvincia.getSelectedIndex()));

        this.cantones = cc.getCantones();
        setCantones();

        // Disparo en cadena la actualización de distritos.
        this.cboCantonActionPerformed(evt);
    }//GEN-LAST:event_cboProvinciaActionPerformed

    private void cboCantonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboCantonActionPerformed
        if (this.inicio) {
            return;
        }

        int index = this.cboCanton.getSelectedIndex();

        if (index >= 0) {
            this.codigoC = this.cantones.get(index).getCodigo();
        } else {
            this.codigoC = 1;
        }

        // Cargar los distritos de cacuerdo con la provincia y el cantón.
        DistritoC dc = new DistritoC(conn, this.cantones.get(index));
        this.distritos = dc.getDistritos();
        setDistritos();
    }//GEN-LAST:event_cboCantonActionPerformed

    private void cboDistritoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboDistritoActionPerformed
        if (inicio) {
            return;
        }

        int index = this.cboDistrito.getSelectedIndex();

        if (index >= 0) {
            this.codigoD = this.distritos.get(index).getCodigo();
        } else {
            this.codigoD = 1;
        }
    }//GEN-LAST:event_cboDistritoActionPerformed

    /**
     * @param c
     */
    public static void main(final Connection c) {
        try {
            // Bosco agregado 23/07/2011
            // Integración del segundo nivel de seguridad.
            if (!UtilBD.tienePermiso(c, "Inproved")) {
                JOptionPane.showMessageDialog(null,
                        "Usted no está autorizado para ejecutar este proceso",
                        "Error - Permisos",
                        JOptionPane.ERROR_MESSAGE);
                return;
            } // Fin Bosco agregado 23/07/2011
            // Fin Bosco agregado 23/07/2011
        } catch (Exception ex) {
            Logger.getLogger(Inproved.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null,
                    ex.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }

        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    new Inproved(c).setVisible(true);
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null,
                            ex.getMessage(),
                            "Error",
                            JOptionPane.ERROR_MESSAGE);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAnterior;
    private javax.swing.JButton btnBorrar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnDiaVisita;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnPrimero;
    private javax.swing.JButton btnSiguiente;
    private javax.swing.JButton btnUltimo;
    private javax.swing.JComboBox cboCanton;
    private javax.swing.JComboBox cboDistrito;
    private javax.swing.JComboBox<String> cboIdTipo;
    private javax.swing.JComboBox cboProvincia;
    private javax.swing.JCheckBox chkPronac;
    private javax.swing.JButton cmdVerdetalle;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelBotonera;
    private javax.swing.JPanel jPanelCredito;
    private javax.swing.JPanel jPanelDatosGenerales;
    private javax.swing.JPanel jPanelOtros;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblNom_cta;
    private javax.swing.JMenuItem mnuAntigSaldos;
    private javax.swing.JMenu mnuArchivo;
    private javax.swing.JMenuItem mnuBorrar;
    private javax.swing.JMenuItem mnuBuscar;
    private javax.swing.JMenuItem mnuDiaVisita;
    private javax.swing.JMenu mnuEdicion;
    private javax.swing.JMenuItem mnuEstadoCta;
    private javax.swing.JMenuItem mnuFacturas;
    private javax.swing.JMenuItem mnuGuardar;
    private javax.swing.JMenuItem mnuPagos;
    private javax.swing.JMenuItem mnuRegFactura;
    private javax.swing.JMenuItem mnuRegitrarPago;
    private javax.swing.JMenuItem mnuSalir;
    private javax.swing.JMenu mnuVer;
    private javax.swing.JTextArea txaProdir;
    private javax.swing.JTextField txtColect;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JFormattedTextField txtIDProv;
    private javax.swing.JTextField txtMayor;
    private javax.swing.JFormattedTextField txtMora;
    private javax.swing.JFormattedTextField txtProapar;
    private javax.swing.JFormattedTextField txtProcode;
    private javax.swing.JFormattedTextField txtProcueba;
    private javax.swing.JFormattedTextField txtProdesc;
    private javax.swing.JFormattedTextField txtProfax;
    private javax.swing.JFormattedTextField txtProfeuc;
    private javax.swing.JFormattedTextField txtPromouc;
    private javax.swing.JFormattedTextField txtProplaz;
    private javax.swing.JFormattedTextField txtProsald;
    private javax.swing.JFormattedTextField txtProsald1;
    private javax.swing.JFormattedTextField txtProtel1;
    private javax.swing.JFormattedTextField txtProtel2;
    private javax.swing.JTextField txtSub_cta;
    private javax.swing.JTextField txtSub_sub;
    // End of variables declaration//GEN-END:variables

    @Override
    public final void cargarObjetos() {
        // Bosco modificado 19/09/2011.
        // Agrego la variable telefono y toda su funcionalidad
        String telefono;
        DateFormat df = DateFormat.getDateInstance();
        try {
            rs.first();
            txtProcode.setText(rs.getString("procode").trim());
            txtProdesc.setText(rs.getString("prodesc").trim());
            txaProdir.setText(rs.getString("prodir").trim());

            telefono = rs.getString("protel1").trim();
            if (telefono.length() < 8) {
                telefono = "";
            } // end if
            txtProtel1.setText(telefono);

            telefono = rs.getString("protel2").trim();
            if (telefono.length() < 8) {
                telefono = "";
            } // end if
            txtProtel2.setText(telefono);

            telefono = rs.getString("profax").trim();
            if (telefono.length() < 8) {
                telefono = "";
            } // end if
            txtProfax.setText(telefono);

            txtProapar.setText(rs.getString("proapar").trim());
            chkPronac.setSelected(rs.getBoolean("pronac"));

            if (rs.getDate("profeuc") != null) {
                txtProfeuc.setText(df.format(rs.getDate("profeuc")));
            } else {
                txtProfeuc.setText("00/00/0000");
            } // end if

            txtPromouc.setText(
                    Ut.setDecimalFormat(rs.getString("promouc"), "#,##0.00"));
            txtProsald.setText(
                    Ut.setDecimalFormat(rs.getString("prosald"), "#,##0.00"));
            txtProplaz.setText(rs.getString("proplaz"));

            // Bosco agregado 22/06/2019
            txtEmail.setText(rs.getString("email"));
            this.codigoP = rs.getInt("provincia");
            this.codigoC = rs.getInt("canton");
            this.codigoD = rs.getInt("distrito");
            this.txtIDProv.setText(rs.getString("idprov"));
            cboIdTipo.setSelectedIndex(rs.getInt("idtipo") - 1);
            // Fin Bosco agregado 22/06/2019

            // Bosco modificado 02/09/2013
            //txtProcueco.setText(rs.getString("procueco"));
            txtMayor.setText(rs.getString("mayor"));
            txtSub_cta.setText(rs.getString("sub_cta"));
            txtSub_sub.setText(rs.getString("sub_sub"));
            txtColect.setText(rs.getString("colect"));
            lblNom_cta.setText("");
            // Si la cuenta está completa entonces cargo la clase cuenta
            if ((rs.getString("mayor")
                    + rs.getString("sub_cta")
                    + rs.getString("sub_sub")
                    + rs.getString("colect")).length() == 12) {
                cuenta = new Cuenta(
                        rs.getString("mayor"),
                        rs.getString("sub_cta"),
                        rs.getString("sub_sub"),
                        rs.getString("colect"),
                        conn);
                if (cuenta.isError()) {
                    JOptionPane.showMessageDialog(null,
                            cuenta.getMensaje_error(),
                            "Error",
                            JOptionPane.ERROR_MESSAGE);
                    return;
                } // end if

                lblNom_cta.setText(cuenta.getNom_cta());
            } // end if
            // Fin Bosco modificado 02/09/2013
            txtProcueba.setText(rs.getString("procueba"));

            txtProsald1.setText(txtProsald.getText());

            // Cargar las provincias
            ProvinciaC pc = new ProvinciaC(conn);
            this.provincias = pc.getProvincias();
            setProvincias();

            // Cargar los cantones de cacuerdo con la provincia.
            CantonC cc = new CantonC(conn, this.provincias.get(this.cboProvincia.getSelectedIndex()));

            this.cantones = cc.getCantones();
            setCantones();
            cc.setCanton(codigoC);

            // Cargar los distritos de cacuerdo con la provincia y el cantón.
            DistritoC dc = new DistritoC(conn, cc.getCanton());

            this.distritos = dc.getDistritos();
            setDistritos();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null,
                    ex.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            b.writeToLog(this.getClass().getName() + "--> " + ex.getMessage(), Bitacora.ERROR);
        }
    } // end cargarObjetos

    @Override
    public void guardarRegistro() {
        if (!validarDatos()) {
            return;
        } // end if

        int sqlresult = 0;
        boolean registroCargado;
        String procode,
                prodesc,
                prodir,
                protel1,
                protel2,
                profax,
                proapar,
                // Bosco modificado 02/09/2013
                //Procueco,
                mayor, sub_cta, sub_sub, colect,
                // Fin Bosco modificado 02/09/2013
                procueba,
                email,
                idProv;

        int pronac, proplaz, idTipo;

        procode = txtProcode.getText().trim();
        prodesc = txtProdesc.getText().trim();
        prodir = txaProdir.getText().trim();
        protel1 = txtProtel1.getText().trim();
        protel2 = txtProtel2.getText().trim();
        profax = txtProfax.getText().trim();
        proapar = txtProapar.getText().trim();
        pronac = (chkPronac.isSelected() == true ? 1 : 0);
        proplaz = Integer.parseInt(txtProplaz.getText().trim());
        // Bosco modificado 02/09/2013
        //Procueco = txtProcueco.getText().trim();
        mayor = txtMayor.getText();
        sub_cta = txtSub_cta.getText();
        sub_sub = txtSub_sub.getText();
        colect = txtColect.getText();
        // Fin Bosco modificado 02/09/2013
        procueba = txtProcueba.getText().trim();

        email = this.txtEmail.getText().trim(); // Julio 2019
        idProv = this.txtIDProv.getText().trim();
        idTipo = this.cboIdTipo.getSelectedIndex() + 1;
        String UpdateSql;
        PreparedStatement ps;

        try {
            if (!consultarRegistro(procode)) {
                UpdateSql
                        = "CALL InsertarProveedor(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
                ps = conn.prepareStatement(UpdateSql);
                ps.setString(1, procode);
                ps.setString(2, prodesc);
                ps.setString(3, prodir);
                ps.setString(4, protel1);
                ps.setString(5, protel2);
                ps.setString(6, profax);
                ps.setString(7, proapar);
                ps.setInt(8, pronac);
                ps.setInt(9, proplaz);
                ps.setString(10, mayor);
                ps.setString(11, sub_cta);
                ps.setString(12, sub_sub);
                ps.setString(13, colect);
                ps.setString(14, procueba);

                ps.setString(15, email); // Julio 2019
                ps.setInt(16, codigoP);
                ps.setInt(17, codigoC);
                ps.setInt(18, codigoD);
                ps.setString(19,idProv);
                ps.setInt(20, idTipo);
            } else {
                // El saldo, la fecha y el monto de la última compra no se afectan.
                // Esto se debe a que éstos son afectados por los movimientos
                // únicamente.
                UpdateSql
                        = "Update inproved Set "
                        + "prodesc = ?,"
                        + "prodir  = ?,"
                        + "protel1 = ?,"
                        + "protel2 = ?,"
                        + "profax  = ?,"
                        + "proapar = ?,"
                        + "pronac  = ?,"
                        + "proplaz = ?,"
                        + "Mayor   = ?,"
                        + "Sub_cta = ?,"
                        + "Sub_sub = ?,"
                        + "Colect  = ?,"
                        + "procueba = ?, "
                        + "email   = ?, "
                        + "provincia = ?, "
                        + "canton   = ?, "
                        + "distrito = ?, "
                        + "idProv   = ?, "
                        + "idTipo   = ? "
                        + "Where procode = ?";
                ps = conn.prepareStatement(UpdateSql);
                ps.setString(1, prodesc);
                ps.setString(2, prodir);
                ps.setString(3, protel1);
                ps.setString(4, protel2);
                ps.setString(5, profax);
                ps.setString(6, proapar);
                ps.setInt(7, pronac);
                ps.setInt(8, proplaz);
                ps.setString(9, mayor);
                ps.setString(10, sub_cta);
                ps.setString(11, sub_sub);
                ps.setString(12, colect);
                ps.setString(13, procueba);
                ps.setString(14, email);    // Julio 2019
                ps.setInt(15, codigoP);     // Julio 2019
                ps.setInt(16, codigoC);     // Julio 2019
                ps.setInt(17, codigoD);     // Julio 2019
                ps.setString(18, idProv);   // Julio 2019
                ps.setInt(19, idTipo);      // Julio 2019
                ps.setString(20, procode);
            } // end if

            // Aquí no es necesario abrir una transacción
            sqlresult = CMD.update(ps);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,
                    ex.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            b.writeToLog(this.getClass().getName() + "--> " + ex.getMessage(), Bitacora.ERROR);
        } // end try-catch

        if (sqlresult <= 0) {
            JOptionPane.showMessageDialog(null,
                    "El registro no se pudo guardar",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            return;
        } // end if

        try {
            rs = nav.cargarRegistro(5, procode, tabla, "procode");
        } catch (SQLException | SQLInjectionException ex) {
            JOptionPane.showMessageDialog(null,
                    ex.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            b.writeToLog(this.getClass().getName() + "--> " + ex.getMessage(), Bitacora.ERROR);
        }
        registroCargado = (rs != null);

        if (!registroCargado) {
            JOptionPane.showMessageDialog(null,
                    "El registro no se pudo guardar",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            return;
        } // end if

        JOptionPane.showMessageDialog(null,
                "Registro guardado satisfatoriamente",
                "Mensaje",
                JOptionPane.INFORMATION_MESSAGE);
    } // end guardar

    @Override
    public boolean validarDatos() {
        // Valido que la descripción no esté vacía
        if (txtProdesc.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null,
                    "La descripción no puede quedar en blanco",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            txtProdesc.requestFocusInWindow();
            return false;
        } // end if        

        // Reviso que todos los valores numéricos contengan al menos un cero.
        if (txtPromouc.getText().trim().equals("")) {
            txtPromouc.setText("0");
        }

        if (txtProsald.getText().trim().equals("")) {
            txtProsald.setText("0");
        }

        if (txtProplaz.getText().trim().equals("")) {
            txtProplaz.setText("0");
        }

        return true;
    } // end validarDatos

    @Override
    public boolean consultarRegistro(String procode) {
        boolean existe = false;
        try {
            String sqlSent = "SELECT ConsultarProveedor(?)";
            PreparedStatement ps = conn.prepareStatement(sqlSent);
            ps.setString(1, procode);
            //rs2 = stat.executeQuery(sqlSent);
            ResultSet rs2 = ps.executeQuery();
            if (rs2 != null && rs2.first() && rs2.getString(1) != null) {
                existe = true;
            } // end if
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,
                    ex.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            b.writeToLog(this.getClass().getName() + "--> " + ex.getMessage(), Bitacora.ERROR);
        } // end try-catch

        return existe;
    } // end consultarRegistro

    @Override
    public void habilitarObjetos(boolean todos) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void eliminarRegistro(String pArtcode) {
        if (pArtcode == null) {
            return;
        } // end if

        if (JOptionPane.showConfirmDialog(null,
                "¿Está seguro de querer eliminar ese registro?")
                != JOptionPane.YES_OPTION) {
            return;
        } // end if

        String sqlDelete = "CALL EliminarProveedor('" + pArtcode + "')";

        int sqlResult = 0;

        try {
            sqlResult = stat.executeUpdate(sqlDelete);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(btnBorrar,
                    ex.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            b.writeToLog(this.getClass().getName() + "--> " + ex.getMessage(), Bitacora.ERROR);
        }

        if (sqlResult > 0) {
            JOptionPane.showMessageDialog(btnBorrar,
                    sqlResult + " registros eliminados",
                    "Mensaje",
                    JOptionPane.INFORMATION_MESSAGE);
            txtProcode.setText(" ");
        } // end if

    } // end eliminarRegistro

    public void refrescarObjetos() {
        if (txtProcode.getText().trim().equals("")) {
            return;
        } // end if

        try {
            rs = nav.cargarRegistro(5,
                    txtProcode.getText().trim(), tabla, "procode");
            rs.first();

            // Si el registro no existe
            // limpio la descripción para que el usuario pueda digitar
            if (rs.getRow() < 1) {
                txtProdesc.setText("");
                txaProdir.setText("");
                txtProtel1.setText("");
                txtProtel2.setText("");
                txtProfax.setText("");
                txtProapar.setText("");
                chkPronac.setSelected(false);
                txtProplaz.setText("");

                // Bosco modificado 02/09/2013
                //txtProcueco.setText("");
                txtMayor.setText("");
                txtSub_cta.setText("");
                txtSub_sub.setText("");
                txtColect.setText("");
                // Fin Bosco modificado 02/09/2013

                txtProcueba.setText("");

                txtProsald.setText("0.00");
                txtPromouc.setText("0.00");
                txtProfeuc.setText("00/00/0000");
                
                // Bosco agregado 23/06/2019
                this.codigoP = 1;
                this.codigoC = 1;
                this.codigoD = 1;
                this.txtIDProv.setText("");
                this.cboIdTipo.setSelectedIndex(0);
                // Fin Bosco agregado 23/06/2019
            } else {
                cargarObjetos();
            } // end if

        } catch (SQLException | SQLInjectionException ex) {
            JOptionPane.showMessageDialog(null,
                    ex.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            b.writeToLog(this.getClass().getName() + "--> " + ex.getMessage(), Bitacora.ERROR);
        }
    } // end refrescarObjetos

    /**
     * Cargar los datos de la cuenta
     */
    private void cargarCuenta() {
        if (txtMayor.getText().trim().isEmpty()) {
            return;
        }
        if (txtSub_cta.getText().trim().isEmpty()) {
            return;
        }
        if (txtSub_sub.getText().trim().isEmpty()) {
            return;
        }
        if (txtColect.getText().trim().isEmpty()) {
            return;
        }

        // Si la cuenta está completa entonces cargo la clase cuenta
        cuenta = new Cuenta(
                txtMayor.getText(),
                txtSub_cta.getText(),
                txtSub_sub.getText(),
                txtColect.getText(),
                conn);
        if (cuenta.isError()) {
            JOptionPane.showMessageDialog(null,
                    cuenta.getMensaje_error(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            return;
        } // end if

        lblNom_cta.setText(cuenta.getNom_cta());
    } // end cargarCuenta

    /*
     Llenar el combo de provincias y dejar seleccionado el que corresponda.
     */
    private void setProvincias() {
        for (int i = 0; i < provincias.size(); i++) {
            this.cboProvincia.addItem(provincias.get(i).getProvincia());
            if (provincias.get(i).getCodigo() == this.codigoP) {
                this.cboProvincia.setSelectedIndex(i);
            } // end if
        } // end for        
    } // end setProvincias

    private void setCantones() {
        // Limpio la lista
        this.inicio = true;

        if (this.cboCanton.getItemCount() > 0) {
            this.cboCanton.removeAllItems();
        } // end if

        // Al inicio esto està bien pero cuando se elige un cantón debe cambiar codigoC
        for (int i = 0; i < cantones.size(); i++) {
            this.cboCanton.addItem(cantones.get(i).getCanton());
            if (cantones.get(i).getCodigo() == this.codigoC) {
                this.cboCanton.setSelectedIndex(i);
            } // end if
        } // end for
        this.inicio = false;
    } // end setCantones

    private void setDistritos() {
        this.inicio = true;
        this.cboDistrito.removeAllItems();
        for (int i = 0; i < distritos.size(); i++) {
            this.cboDistrito.addItem(distritos.get(i).getDistrito());
            if (distritos.get(i).getCodigo() == this.codigoD) {
                this.cboDistrito.setSelectedIndex(i);
            } // end if
        } // end for
        this.inicio = false;
    }
} // end Inproved

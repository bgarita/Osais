/*
 * AplicacionAjustesInv.java
 *
 * Created on 06/02/2011, 09:50:00 PM
 */

package interfase.transacciones;

import Exceptions.EmptyDataSourceException;
import Mail.Bitacora;
import accesoDatos.CMD;
import accesoDatos.UtilBD;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import logica.utilitarios.Ut;

/**
 *
 * @author Bosco Garita
 */
@SuppressWarnings("serial")
public class AplicacionAjustesInv extends JFrame {

    private final ResultSet  rs;
    private final Statement  stat;
    private Connection conn = null;
    private String bodega;
    private boolean inicio = true;
    private final Bitacora b = new Bitacora();
    
    /** Creates new form
     * @param c
     * @throws java.sql.SQLException
     * @throws Exceptions.EmptyDataSourceException */
    public AplicacionAjustesInv(Connection c) throws SQLException, EmptyDataSourceException {
        initComponents();

        conn = c;

        stat = conn.createStatement(
                ResultSet.TYPE_SCROLL_INSENSITIVE,
                ResultSet.CONCUR_READ_ONLY);
        
        // Cargar las bodegas
        rs = stat.executeQuery("Select * from bodegas");

        if (rs == null || !rs.first()){
            return;
        } // end if

        // Par√°metros: combo, ResultSet, columna, reemplazar
        Ut.fillComboBox(cboBodegas, rs, 2, false);
        inicio = false;
        Calendar cal = GregorianCalendar.getInstance();
        DatMovfech.setDate(cal.getTime());

        cboBodegasActionPerformed(null);
    } // end constructor

    public void setConexion(Connection c){ conn = c; }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel12 = new javax.swing.JLabel();
        cboBodegas = new javax.swing.JComboBox();
        jPanel5 = new javax.swing.JPanel();
        btnGuardar = new javax.swing.JButton();
        cmdCerrar = new javax.swing.JButton();
        txtMovdocu = new javax.swing.JFormattedTextField();
        jLabel1 = new javax.swing.JLabel();
        DatMovfech = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        mnuArchivo = new javax.swing.JMenu();
        mnuGuardar = new javax.swing.JMenuItem();
        mnuSalir = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Aplicar ajustes de inventario");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 51, 255));
        jLabel12.setText("Bodega");

        cboBodegas.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        cboBodegas.setToolTipText("Tipo de documento a consultar");
        cboBodegas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboBodegasActionPerformed(evt);
            }
        });

        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/WZSAVE.png"))); // NOI18N
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        cmdCerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/control-power.png"))); // NOI18N
        cmdCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCerrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(cmdCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(126, 126, 126))
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnGuardar, cmdCerrar});

        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(cmdCerrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnGuardar, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(4, 4, 4))
        );

        txtMovdocu.setColumns(8);
        try {
            txtMovdocu.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("**********")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtMovdocu.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtMovdocu.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMovdocuFocusLost(evt);
            }
        });
        txtMovdocu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMovdocuActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Fecha");

        DatMovfech.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                DatMovfechPropertyChange(evt);
            }
        });

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Documento del ajuste");

        mnuArchivo.setText("Archivo");

        mnuGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/WZSAVE.JPG"))); // NOI18N
        mnuGuardar.setText("Aplicar ajuste");
        mnuGuardar.setPreferredSize(new java.awt.Dimension(200, 25));
        mnuGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuGuardarActionPerformed(evt);
            }
        });
        mnuArchivo.add(mnuGuardar);

        mnuSalir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.CTRL_MASK));
        mnuSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/control-power.png"))); // NOI18N
        mnuSalir.setText("Salir");
        mnuSalir.setPreferredSize(new java.awt.Dimension(150, 21));
        mnuSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuSalirActionPerformed(evt);
            }
        });
        mnuArchivo.add(mnuSalir);

        jMenuBar1.add(mnuArchivo);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.CENTER, layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(DatMovfech, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.CENTER, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cboBodegas, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.CENTER, layout.createSequentialGroup()
                        .addGap(0, 2, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                        .addComponent(txtMovdocu, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel12)
                    .addComponent(cboBodegas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel1)
                    .addComponent(DatMovfech, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel4)
                    .addComponent(txtMovdocu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void mnuSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuSalirActionPerformed
        dispose();
}//GEN-LAST:event_mnuSalirActionPerformed

    private void cboBodegasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboBodegasActionPerformed
        if (inicio) {
            return;
        }
        
        try {
            //Sincronizar el combo con el rs
            if (!Ut.seek(
                    rs,
                    cboBodegas.getSelectedItem().toString(),
                    "descrip")){
                return;
            } // end if
            bodega = rs.getString("bodega");
        } catch (SQLException ex) {
            Logger.getLogger(AplicacionAjustesInv.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, 
                    ex.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            b.writeToLog(this.getClass().getName() + "--> " + ex.getMessage());
            return;
        }
        
        // Se sugiere este n√∫mero de documento
        Calendar cal = GregorianCalendar.getInstance();
        cal.setTime(DatMovfech.getDate());
        int dia = cal.get(Calendar.DAY_OF_MONTH);
        int mes = cal.get(Calendar.MONTH) + 1;
        txtMovdocu.setText("AJ" + bodega + "-" +
                Ut.lpad(dia, "0", 2) +
                Ut.lpad(mes, "0", 2));
    }//GEN-LAST:event_cboBodegasActionPerformed

    // Este m√©todo no afecta el consecutivo de documentos de inventario
    // debido a que estos documentos son completamente distintos y deben
    // ser digitados por el usuario. Ej.: 001250116 (bodega 001, del 25 de enero 2016)
    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // Vuelvo a validar el documento y la fecha
        txtMovdocuFocusLost(null);

        if (!btnGuardar.isEnabled()){
            txtMovdocu.requestFocusInWindow();
            return;
        } // end if

        DatMovfechPropertyChange(null);

        if (!btnGuardar.isEnabled()){
            DatMovfech.requestFocusInWindow();
            return;
        } // end if
        // Fin de validaciones

        // Inicia proceso de aplicaci√≥n del ajuste
        String movdocu = txtMovdocu.getText().trim();
        String facfech = Ut.fechaSQL(DatMovfech.getDate());
        
        String sqlSent;
        ResultSet rsAJ;
        PreparedStatement ps;
        
        if (movdocu.length() > 10){
            JOptionPane.showMessageDialog(null, 
                    "El n√∫mero de documento es m√°s largo de lo permitido.\n" +
                    "Aj√∫stelo a 10 caracteres de longitud.",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            return;
        } // end if
        
        // Este SP siempre devuelve un Result Set
        // con dos campos Error, MensajeErr.
        sqlSent =
                "Call AplicarAjusteInventario(" +
                "'" + bodega  + "'" + "," +
                "'" + movdocu + "'" + "," +
                      facfech + ")";
        

        // Inicia la transacci√≥n
        // 1=Start transaction, 2=Commit, 3=RollBack
        boolean hayTransaccion = false;
        try{
            ps = conn.prepareStatement(sqlSent, 
                    ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_READ_ONLY);
            hayTransaccion = CMD.transaction(conn, CMD.START_TRANSACTION);
            rsAJ = CMD.select(ps);
            
            // Si hubo error realizo el ROLLBAK...
            if (!Ut.goRecord(rsAJ, Ut.FIRST)){
                CMD.transaction(conn, CMD.ROLLBACK);
            } // end if
            
            if (rsAJ.getBoolean("Error")){
                JOptionPane.showMessageDialog(null,
                        rsAJ.getString("MensajeErr"),
                        "Error",
                        JOptionPane.ERROR_MESSAGE);
                CMD.transaction(conn, CMD.ROLLBACK);
            } // endif
            
            //... caso contrario ejecuto el COMMIT

            // Al llegar a este punto significa que todo sali√≥ bien y por
            // lo tanto hay que ejecutar el COMMIT
            CMD.transaction(conn, CMD.COMMIT);
        } catch (SQLException ex){
            try {
                if (hayTransaccion){
                    CMD.transaction(conn, CMD.ROLLBACK);
                } // end if
            } catch (SQLException ex1){
                Logger.getLogger(AplicacionAjustesInv.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, 
                        ex.getMessage(),
                        "Se produjo un error en el control de transacciones.\n" +
                        "El sistema se cerrar√° para proteger la integridad.\n" +
                        "El ajuste no quedar√° aplicado.",
                        JOptionPane.ERROR_MESSAGE);
                b.writeToLog(this.getClass().getName() + "--> " + ex.getMessage());
                System.exit(0);
            }
            Logger.getLogger(AplicacionAjustesInv.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, 
                    ex.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            b.writeToLog(this.getClass().getName() + "--> " + ex.getMessage());
            return;
        } // end try-catch
        

        JOptionPane.showMessageDialog(null,
                "Ajuste aplicado satisfactoriamente.",
                "Mensaje",
                JOptionPane.INFORMATION_MESSAGE);
        // Finaliza proceso de aplicaci√≥n del ajuste
}//GEN-LAST:event_btnGuardarActionPerformed

    private void cmdCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCerrarActionPerformed
        dispose();
}//GEN-LAST:event_cmdCerrarActionPerformed

    private void mnuGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuGuardarActionPerformed
        btnGuardarActionPerformed(evt);
}//GEN-LAST:event_mnuGuardarActionPerformed

    private void txtMovdocuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMovdocuActionPerformed
        txtMovdocu.transferFocus();
}//GEN-LAST:event_txtMovdocuActionPerformed

    private void txtMovdocuFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMovdocuFocusLost
        String documento = txtMovdocu.getText().trim();
        if (ExisteDocumento(documento)){
            JOptionPane.showMessageDialog(null,
                    "El documento ya existe, use otro n√∫mero.",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            btnGuardar.setEnabled(false);
            return;
        } // end if
        btnGuardar.setEnabled(true);
}//GEN-LAST:event_txtMovdocuFocusLost

    private void DatMovfechPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_DatMovfechPropertyChange
        if (inicio) {return;}
        
        String facfech = Ut.fechaSQL(DatMovfech.getDate());

        btnGuardar.setEnabled(true);
        try {
            if (!UtilBD.isValidDate(conn,facfech)){
                JOptionPane.showMessageDialog(null,
                        "No puede utilizar esta fecha.  " +
                        "\nCorresponde a un per√≠odo ya cerrado.",
                        "Validar fecha..",
                        JOptionPane.ERROR_MESSAGE);
                btnGuardar.setEnabled(false);
            } // end if
        } catch (SQLException ex) {
            Logger.getLogger(AplicacionAjustesInv.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null,
                    ex.getMessage(),
                    "Validar fecha..",
                    JOptionPane.ERROR_MESSAGE);
            b.writeToLog(this.getClass().getName() + "--> " + ex.getMessage());
            return;
        }

        // Si el evento viene nulo no ejecuto este m√©todo
        if (evt != null){
            cboBodegasActionPerformed(null);
        } // end if
    }//GEN-LAST:event_DatMovfechPropertyChange


    /**
     * @param c
    */
    public static void main(Connection c) {
        try {
            //JFrame.setDefaultLookAndFeelDecorated(true);
            // Bosco agregado 18/07/2011
            // Integraci√≥n del segundo nivel de seguridad.
            if (!UtilBD.tienePermiso(c,"AplicacionAjustesInv")){
                JOptionPane.showMessageDialog(null,
                        "Usted no est√° autorizado para ejecutar este proceso",
                        "Error - Permisos",
                        JOptionPane.ERROR_MESSAGE);
                return;
            } // end if
        } catch (Exception ex) {
            Logger.getLogger(AplicacionAjustesInv.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, 
                    ex.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        // Fin Bosco agregado 18/07/2011
        try {
            AplicacionAjustesInv run = new AplicacionAjustesInv(c);
            run.setVisible(true);
        } catch (SQLException | EmptyDataSourceException ex) {
             JOptionPane.showMessageDialog(null,
                     ex.getMessage(),
                    "Error", 
                    JOptionPane.ERROR_MESSAGE);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser DatMovfech;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JComboBox cboBodegas;
    private javax.swing.JButton cmdCerrar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JMenu mnuArchivo;
    private javax.swing.JMenuItem mnuGuardar;
    private javax.swing.JMenuItem mnuSalir;
    private javax.swing.JFormattedTextField txtMovdocu;
    // End of variables declaration//GEN-END:variables

    /**
     * Este m√©todo hace un llamado al SP ConsultarDocumento para determinar
     * si el Movdocu digitado ya existe o no.
     * @param Movdocu Movdocu a validar contra el encabezado de documentos de inventario.
     * @return true = el Movdocu ya existe, false = el Movdocu no existe.
     */
    private boolean ExisteDocumento(String Movdocu) {
        Movdocu = "'" + Movdocu.trim() + "'";
        String Movtimo = "'E'";
        String Movtido = "11"; // Ajuste por entrada

        boolean existe;
        try {
            Statement st = conn.createStatement(
                ResultSet.TYPE_SCROLL_INSENSITIVE,
                ResultSet.CONCUR_READ_ONLY);
            ResultSet rsDoc;
            String sqlQuery =
                    "Select ConsultarDocumento(" +
                    Movdocu + "," +
                    Movtimo + "," +
                    Movtido + ")";

            rsDoc = st.executeQuery(sqlQuery);
            rsDoc.first();

            existe = rsDoc.getBoolean(1);

            // Si el documento no existe como entrada trato de ver
            // si existe como salida.
            if (!existe){
                Movtimo = "'S'";
                Movtido = "12"; // Ajuste por salida
                sqlQuery =
                        "Select ConsultarDocumento(" +
                        Movdocu + "," +
                        Movtimo + "," +
                        Movtido + ")";

                rsDoc = st.executeQuery(sqlQuery);
                rsDoc.first();
                existe = rsDoc.getBoolean(1);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,
                    ex.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            existe = true;
            b.writeToLog(this.getClass().getName() + "--> " + ex.getMessage());
        } // end catch
        
        return existe;
    } // ExisteDocumento

    // Este m√©todo queda inutilizado desde ahora porque se traslad√≥
    // a Utilitarios (Bosco 07/02/2011)
    /**
     * Este m√©todo hace un llamado al SP PermitirFecha para determinar
     * si la fecha introducida es permitida en la base de datos.  Esta
     * validaci√≥n revisa la fecha del √∫ltimo cierre mensual.
     * @param fechaSQL Fecha a validar contra el cierre mensual.
     * @return true = la fecha es aceptada, false = la fecha no es aceptada.
     */
    private boolean validarFecha(String fechaSQL) {
        fechaSQL = fechaSQL.trim();
        String sqlQuery = "Select PermitirFecha(" + fechaSQL + ")";
        boolean fechaAceptada = false;

        ResultSet rstmp;
        try {
            Statement st =
                conn.createStatement(
                ResultSet.TYPE_SCROLL_SENSITIVE,
                ResultSet.CONCUR_READ_ONLY);
            
            rstmp = st.executeQuery(sqlQuery);

            rstmp.first();

            fechaAceptada = rstmp.getBoolean(1);

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,
                    ex.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
        } // end catch
        finally{
            return fechaAceptada;
        } // end finally
    } // isValidDate
} // end class

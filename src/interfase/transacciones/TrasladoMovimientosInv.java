/*
 * TrasladoMovimientosInv.java
 *
 * Created on 25/12/2013, 11:36:00 AM
 */

package interfase.transacciones;

import accesoDatos.CMD;
import accesoDatos.UtilBD;
import interfase.otros.Buscador;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import Exceptions.NotUniqueValueException;
import Mail.Bitacora;

/**
 *
 * @author Bosco Garita
 */
@SuppressWarnings("serial")
public class TrasladoMovimientosInv extends JFrame {

    private Connection conn = null;
    
    /** Creates new form */
    public TrasladoMovimientosInv(Connection c) throws SQLException {
        initComponents();
        // Defino el escuchador con una clase anónima para controlar la
        // salida de esta pantalla.  Esto funciona simpre que se haya
        // establecido el siguiente parámetro:
        // setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE)
        // Esta pantalla lo hace en initComponents().
        addWindowListener(new WindowAdapter(){
            @Override
            public void windowClosing(WindowEvent e){
                cmdCerrarActionPerformed(null);
            } // end windowClosing
        } // end class
        ); // end Listener

        conn = c;

    } // end constructor

    public void setConexion(Connection c){ conn = c; }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel12 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        cmdGuardar = new javax.swing.JButton();
        cmdCerrar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtArtcodeDestino = new javax.swing.JTextField();
        txtArtcodeOrigen = new javax.swing.JTextField();
        txtArtdesc = new javax.swing.JTextField();
        txtArtdesc1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txaEtiqueta = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        mnuArchivo = new javax.swing.JMenu();
        mnuGuardar = new javax.swing.JMenuItem();
        mnuSalir = new javax.swing.JMenuItem();
        mnuEdicion = new javax.swing.JMenu();
        mnuBuscar = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Trasladar movimientos de inventario");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 0, 255));
        jLabel12.setText("Código origen");

        cmdGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/WZSAVE.png"))); // NOI18N
        cmdGuardar.setToolTipText("Guardar");
        cmdGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdGuardarActionPerformed(evt);
            }
        });

        cmdCerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/control-power.png"))); // NOI18N
        cmdCerrar.setToolTipText("Salir");
        cmdCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCerrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(26, Short.MAX_VALUE)
                .addComponent(cmdGuardar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmdCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8))
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cmdCerrar, cmdGuardar});

        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmdGuardar)
                    .addComponent(cmdCerrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(50, 50, 50))
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {cmdCerrar, cmdGuardar});

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 102, 0));
        jLabel2.setText("Nuevo destino");

        txtArtcodeDestino.setToolTipText("Buscar");
        txtArtcodeDestino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtArtcodeDestinoActionPerformed(evt);
            }
        });
        txtArtcodeDestino.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtArtcodeDestinoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtArtcodeDestinoFocusLost(evt);
            }
        });

        txtArtcodeOrigen.setToolTipText("Buscar");
        txtArtcodeOrigen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtArtcodeOrigenActionPerformed(evt);
            }
        });
        txtArtcodeOrigen.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtArtcodeOrigenFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtArtcodeOrigenFocusLost(evt);
            }
        });

        txtArtdesc.setEditable(false);
        txtArtdesc.setForeground(new java.awt.Color(0, 0, 255));
        txtArtdesc.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtArtdesc.setFocusable(false);

        txtArtdesc1.setEditable(false);
        txtArtdesc1.setForeground(new java.awt.Color(0, 0, 255));
        txtArtdesc1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtArtdesc1.setFocusable(false);

        txaEtiqueta.setEditable(false);
        txaEtiqueta.setBackground(new java.awt.Color(234, 197, 161));
        txaEtiqueta.setColumns(20);
        txaEtiqueta.setLineWrap(true);
        txaEtiqueta.setRows(5);
        txaEtiqueta.setText("Este proceso traslada todos los movimientos de inventarios de un código a otro.  Es necesario que ambos códigos existan y estén asignados a las mismas bodegas.\nUna vez concluido el proceso puede eliminar el artículo origen si así lo desea.");
        txaEtiqueta.setWrapStyleWord(true);
        txaEtiqueta.setFocusable(false);
        jScrollPane1.setViewportView(txaEtiqueta);

        mnuArchivo.setText("Archivo");

        mnuGuardar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_MASK));
        mnuGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/WZSAVE.JPG"))); // NOI18N
        mnuGuardar.setText("Guardar");
        mnuGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuGuardarActionPerformed(evt);
            }
        });
        mnuArchivo.add(mnuGuardar);

        mnuSalir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.CTRL_MASK));
        mnuSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/control-power.png"))); // NOI18N
        mnuSalir.setText("Salir");
        mnuSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuSalirActionPerformed(evt);
            }
        });
        mnuArchivo.add(mnuSalir);

        jMenuBar1.add(mnuArchivo);

        mnuEdicion.setText("Edición");

        mnuBuscar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.CTRL_MASK));
        mnuBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/binocular.png"))); // NOI18N
        mnuBuscar.setText("Buscar");
        mnuBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuBuscarActionPerformed(evt);
            }
        });
        mnuEdicion.add(mnuBuscar);

        jMenuBar1.add(mnuEdicion);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtArtcodeOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtArtdesc)
                    .addComponent(txtArtcodeDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtArtdesc1, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtArtcodeOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addGap(4, 4, 4)
                .addComponent(txtArtdesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtArtcodeDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(4, 4, 4)
                .addComponent(txtArtdesc1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(571, 379));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void mnuSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuSalirActionPerformed
        dispose();
}//GEN-LAST:event_mnuSalirActionPerformed

    private void cmdGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdGuardarActionPerformed
        String artcodeOrigen, artcodeDestino;
        artcodeOrigen  = txtArtcodeOrigen.getText().trim();
        artcodeDestino = txtArtcodeDestino.getText().trim();

        String errorMessage = "";
        JTextField f = null;

        // Validaciones.
        if (txtArtdesc.getText().trim().isEmpty()){
            errorMessage = "-Artículo origen no existe.";
            f = txtArtcodeOrigen;
        } // end if
        
        if (txtArtdesc1.getText().trim().isEmpty()){
            errorMessage += "\n-Artículo destino no existe.";
            f = txtArtcodeDestino;
        } // end if

        if (artcodeDestino.isEmpty()){
            errorMessage += "\n-Artículo no puede quedar en blanco.";
            if (f == null){
                f = txtArtcodeDestino;
            } // end if
        } // end if

        if (artcodeOrigen.equals(artcodeDestino)){
            errorMessage += "\n-El código origen y el destino son iguales.";
            if (f == null){
                f = txtArtcodeDestino;
            } // end if
        } // end if

        if (!errorMessage.isEmpty()){
            JOptionPane.showMessageDialog(
                    null,
                    errorMessage,
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            if (f != null) {
                f.requestFocusInWindow();
            } // end if
            
            return;
        } // end if

        String sqlSent = "Call TrasladarMovimientosInv(?,?)";
        PreparedStatement ps;
        ResultSet rs;
        
        try{
            // Iniciar la transacción
            CMD.transaction(conn, CMD.START_TRANSACTION);
            
            ps = conn.prepareStatement(sqlSent);

            // Registrar los parámetros de entrada
            ps.setString(1, artcodeOrigen);
            ps.setString(2, artcodeDestino);
            
            CMD.update(ps);
            
            ps.close();
            
            // Recalcular el reservado
            sqlSent = "Call RecalcularReservado(?)";
            ps = conn.prepareStatement(sqlSent);
            
            ps.setString(1, artcodeOrigen);
            CMD.update(ps);
            
            ps.setString(1, artcodeDestino);
            CMD.update(ps);
            
            ps.close();
            
            // Obtener todas las bodegas donde estén los artículos
            sqlSent = "Select bodega, artcode from bodexis where artcode in(?,?)";
            ps = conn.prepareStatement(sqlSent, 
                    ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_READ_ONLY);
            ps.setString(1, artcodeOrigen);
            ps.setString(2, artcodeDestino);
            rs = CMD.select(ps);
            rs.last();
            
            String[][] articulos;
            articulos = new String[rs.getRow()][2];
            
            rs.beforeFirst();
            while (rs.next()){
                articulos[rs.getRow()-1][0] = rs.getString(1); // Bodega
                articulos[rs.getRow()-1][1] = rs.getString(2); // Artículo
            } // end while
            ps.close();
            
            
            sqlSent = "Call RecalcularExistenciaArticuloSinPuntoPartid(?,?)";
            ps = conn.prepareStatement(sqlSent);
            
            for (int i = 0; i < articulos.length; i++){
                ps.setString(1, articulos[i][1]); // artículo
                ps.setString(2, articulos[i][0]); // bodega
                CMD.update(ps);
            } // end for
            ps.close();
            
            CMD.transaction(conn, CMD.COMMIT);
            
            JOptionPane.showMessageDialog(
                 null,
                 "Movimientos trasladados satisfactoriamente.",
                 "Mensaje",
                 JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException ex) {
            Logger.getLogger(TrasladoMovimientosInv.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog( 
                     null,
                     ex.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            new Bitacora().writeToLog(this.getClass().getName() + "--> " + ex.getMessage());
            try {
                CMD.transaction(conn, CMD.ROLLBACK);
            } catch (SQLException ex1) {
                Logger.getLogger(TrasladoMovimientosInv.class.getName()).log(Level.SEVERE, null, ex1);
                JOptionPane.showMessageDialog(
                     null,
                     ex1.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
                new Bitacora().writeToLog(this.getClass().getName() + "--> " + ex1.getMessage());
            } // end try-catch interno
            
        } // end try-catch externo
}//GEN-LAST:event_cmdGuardarActionPerformed

    private void cmdCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCerrarActionPerformed
        dispose();
}//GEN-LAST:event_cmdCerrarActionPerformed

    private void mnuGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuGuardarActionPerformed
        cmdGuardarActionPerformed(evt);
}//GEN-LAST:event_mnuGuardarActionPerformed
    
    private void txtArtcodeOrigenFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtArtcodeOrigenFocusGained
        txtArtcodeOrigen.selectAll();
    }//GEN-LAST:event_txtArtcodeOrigenFocusGained

    private void mnuBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuBuscarActionPerformed
        Buscador bd;

        bd = new Buscador(new java.awt.Frame(), true,
            "inarticu","artcode,artdesc","artdesc",txtArtcodeOrigen,conn);
        bd.setTitle("Buscar artículos de inventario");
        bd.lblBuscar.setText("Descripción:");
        bd.setVisible(true);
        txtArtcodeOrigenActionPerformed(null);
        bd.dispose();
}//GEN-LAST:event_mnuBuscarActionPerformed

    private void txtArtcodeOrigenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtArtcodeOrigenActionPerformed
        txtArtcodeOrigen.setText(txtArtcodeOrigen.getText().toUpperCase());
        String artcode = txtArtcodeOrigen.getText().trim();
        String condicion = "artcode = " + "'" + artcode + "'";
        try {
            txtArtdesc.setText(
                    UtilBD.getDBString(conn,"inarticu",condicion,"artdesc"));
        } catch (NotUniqueValueException | SQLException ex) {
            Logger.getLogger(TrasladoMovimientosInv.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(
                    null,
                    ex.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            new Bitacora().writeToLog(this.getClass().getName() + "--> " + ex.getMessage());
            return;
        }
        txtArtcodeOrigen.transferFocus();
    }//GEN-LAST:event_txtArtcodeOrigenActionPerformed

    private void txtArtcodeDestinoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtArtcodeDestinoFocusGained
        txtArtcodeDestino.selectAll();
    }//GEN-LAST:event_txtArtcodeDestinoFocusGained

    private void txtArtcodeDestinoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtArtcodeDestinoFocusLost
        txtArtcodeDestino.setText(txtArtcodeDestino.getText().toUpperCase());
    }//GEN-LAST:event_txtArtcodeDestinoFocusLost

    private void txtArtcodeDestinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtArtcodeDestinoActionPerformed
        txtArtcodeDestino.setText(txtArtcodeDestino.getText().toUpperCase());
        String artcode = txtArtcodeDestino.getText().trim();
        String condicion = "artcode = " + "'" + artcode + "'";
        try {
            txtArtdesc1.setText(
                    UtilBD.getDBString(conn,"inarticu",condicion,"artdesc"));
        } catch (NotUniqueValueException | SQLException ex) {
            Logger.getLogger(TrasladoMovimientosInv.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(
                    null,
                    ex.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            new Bitacora().writeToLog(this.getClass().getName() + "--> " + ex.getMessage());
            return;
        }
        txtArtcodeDestino.transferFocus();
    }//GEN-LAST:event_txtArtcodeDestinoActionPerformed

    private void txtArtcodeOrigenFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtArtcodeOrigenFocusLost
        txtArtcodeOrigen.setText(txtArtcodeOrigen.getText().toUpperCase());
        
    }//GEN-LAST:event_txtArtcodeOrigenFocusLost


    /**
     * @param c
    */
    public static void main(Connection c) {
        try {
            if (!UtilBD.tienePermiso(c,"TrasladoMovimientosInv")){
                JOptionPane.showMessageDialog(null,
                        "Usted no está autorizado para ejecutar este proceso",
                        "Error - Permisos",
                        JOptionPane.ERROR_MESSAGE);
                return;
            } // end if
        } catch (Exception ex) {
            Logger.getLogger(TrasladoMovimientosInv.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, 
                    ex.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        //JFrame.setDefaultLookAndFeelDecorated(true);
        try {
            TrasladoMovimientosInv run = new TrasladoMovimientosInv(c);
            run.setVisible(true);
        } catch (SQLException ex) {
             JOptionPane.showMessageDialog(null,
                     ex.getMessage(),
                    "Error", 
                    JOptionPane.ERROR_MESSAGE);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmdCerrar;
    private javax.swing.JButton cmdGuardar;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenu mnuArchivo;
    private javax.swing.JMenuItem mnuBuscar;
    private javax.swing.JMenu mnuEdicion;
    private javax.swing.JMenuItem mnuGuardar;
    private javax.swing.JMenuItem mnuSalir;
    private javax.swing.JTextArea txaEtiqueta;
    private javax.swing.JTextField txtArtcodeDestino;
    private javax.swing.JTextField txtArtcodeOrigen;
    private javax.swing.JTextField txtArtdesc;
    private javax.swing.JTextField txtArtdesc1;
    // End of variables declaration//GEN-END:variables
} // end class

package interfase.transacciones;

import Mail.Bitacora;
import accesoDatos.CMD;
import logica.contabilidad.PeriodoContable;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import logica.contabilidad.CoactualizCat;

/**
 *
 * @author bosco
 */
public class CoAplicaMov extends javax.swing.JFrame {
    private static final long serialVersionUID = 12L;
    
    private final Connection conn;
    
    private final PeriodoContable pc;

    /**
     * Creates new form CoAplicaMov
     * @param c
     */
    public CoAplicaMov(Connection c) {
        initComponents();
        this.conn = c;
        
        pc = new PeriodoContable(conn);
        
        this.datFecha1.setDate(pc.getFecha_in());
        this.datFecha2.setDate(pc.getFecha_fi());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        datFecha1 = new com.toedter.calendar.JDateChooser();
        datFecha2 = new com.toedter.calendar.JDateChooser();
        btnActualizar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Aplicar movimientos");

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(37, 20, 241));
        jLabel1.setText("ACTUALIZACIÓN DE MOVIMIENTOS");

        jLabel2.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel2.setText("Del");

        jLabel3.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel3.setText("Al");

        btnActualizar.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnCancelar.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel2)
                    .addComponent(datFecha1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel3)
                    .addComponent(datFecha2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(20, 20, 20))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(76, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(66, 66, 66))
            .addGroup(layout.createSequentialGroup()
                .addGap(107, 107, 107)
                .addComponent(btnActualizar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCancelar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnActualizar, btnCancelar});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(datFecha1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(datFecha2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(66, 66, 66)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnActualizar)
                    .addComponent(btnCancelar)))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        boolean huboError = false;
        java.awt.Cursor cur = new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR);
        this.setCursor(cur);
        
        try {
            // Inicia la transacción
            CMD.transaction(conn, CMD.START_TRANSACTION);
        } catch (SQLException ex) {
            Logger.getLogger(CoAplicaMov.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, 
                    ex.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            new Bitacora().writeToLog(this.getClass().getName() + "--> " + ex.getMessage());
            return;
        } // end try-catch
        
        // Poner todas las cuentas de movimientos en cero
        try {
            String sqlSent = 
                    "Update cocatalogo Set db_mes = 0, cr_mes = 0 Where nivel = 1";
            PreparedStatement ps = conn.prepareStatement(sqlSent);
            CMD.update(ps);
            ps.close();
        } catch (SQLException ex) {
            Logger.getLogger(CoAplicaMov.class.getName()).log(Level.SEVERE, null, ex);
            huboError = true;
            JOptionPane.showMessageDialog(null, 
                    ex.getMessage(), 
                    "Error", 
                    JOptionPane.ERROR_MESSAGE);
            new Bitacora().writeToLog(this.getClass().getName() + "--> " + ex.getMessage());
        } // end try-catch
        
        if (huboError){
            try {
                CMD.transaction(conn, CMD.ROLLBACK);
            } catch (SQLException ex) {
                Logger.getLogger(CoAplicaMov.class.getName()).log(Level.SEVERE, null, ex);
                // Si se produce un error aquí lo más sabio es salir del sistema
                // para proteger la integridad.
                JOptionPane.showMessageDialog(null, 
                        "Ocurrió un error a lo interno del motor de base de datos.\n" +
                        "El sistema se cerrará para proteger su integridad.", 
                        "Error", 
                        JOptionPane.ERROR_MESSAGE);
                new Bitacora().writeToLog(this.getClass().getName() + "--> " + ex.getMessage());
                System.exit(1);
            } // end try-catch
            return;
        } // end if
        
        CoactualizCat actuCat = new CoactualizCat(conn);
        actuCat.setMayorizar(true);
        
        boolean exito = 
                actuCat.actualizarCuentasMov(
                datFecha1.getDate(), datFecha2.getDate(), "", (short)0, "+");
        
        String mensaje = actuCat.getMensaje_err();
        if (exito){
            mensaje = "Proceso completado satisfactoriamente";
            try {
                CMD.transaction(conn, CMD.COMMIT);
            } catch (SQLException ex) {
                Logger.getLogger(CoAplicaMov.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, 
                        "Ocurrió un error a lo interno del motor de base de datos.\n" +
                        "El sistema se cerrará para proteger su integridad.", 
                        "Error", 
                        JOptionPane.ERROR_MESSAGE);
                new Bitacora().writeToLog(this.getClass().getName() + "--> " + ex.getMessage());
                System.exit(1);
            } // end try-catch
        } // end if
        
        actuCat.close();
        
        JOptionPane.showMessageDialog(null, 
                mensaje,
                (exito ? "Mensaje":"Error"),
                (exito ? JOptionPane.INFORMATION_MESSAGE:JOptionPane.ERROR_MESSAGE));
        dispose();
        this.setCursor(null);
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    /**
     * @param c
     */
    public static void main(final Connection c) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CoAplicaMov.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CoAplicaMov.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CoAplicaMov.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CoAplicaMov.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new CoAplicaMov(c).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnCancelar;
    private com.toedter.calendar.JDateChooser datFecha1;
    private com.toedter.calendar.JDateChooser datFecha2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables
}

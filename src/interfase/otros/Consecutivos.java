/*
 * Consecutivos.java
 *
 * Created on 15/05/2011, 02:05:00 PM by Bosco Garita
 * Actualización de consecutivos
 * 
 * Modificado Bosco Garita 13/07/2014 6:32 PM consecutivo de órdenes de compra
 * Modificado Bosco Garita 19/04/2015 11:30 AM consecutivo de recibos de caja
 * Modificado Bosco Garita 24/01/2016 07:47 PM cambio de tabla para consecutivo de documentos de inventario
 */

package interfase.otros;

import Mail.Bitacora;
import accesoDatos.CMD;
import accesoDatos.UtilBD;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import logica.utilitarios.Ut;

/**
 *
 * @author Bosco Garita
 */
@SuppressWarnings("serial")
public class Consecutivos extends javax.swing.JFrame {
    private Connection conn = null;
    private int 
            facnume,    // Facturas
            formulario, // Formulario pre impreso (factura)
            recnume,    // Recibos de cuentas por cobrar
            ncred,      // Notas de crédito de CXC
            ndeb,       // Notas de débito de CXC
            recnume1,   // Recibos de CXP
            pronume,    // Proformas
            recnumeca;  // Recibos de caja
    
    private String docinv, ultordec;
    private final Bitacora b = new Bitacora();
    

    /** Creates new form
     * @param c */
    public Consecutivos(Connection c) {
        initComponents();
        conn        = c;
        // Bosco agregado 28/09/2013
        facnume      = 0;
        formulario   = 0;
        recnume      = 0;
        ncred        = 0;
        ndeb         = 0;
        recnume1     = 0;
        pronume      = 0;
        
        cargarConsecutivos();
    } // end constructor
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGuardar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        panelGeneral = new javax.swing.JTabbedPane();
        panelCXC = new javax.swing.JPanel();
        lblFacnume = new javax.swing.JLabel();
        txtFacnume = new javax.swing.JFormattedTextField();
        lblFormulario = new javax.swing.JLabel();
        txtFormulario = new javax.swing.JFormattedTextField();
        lblReciboCXC = new javax.swing.JLabel();
        txtRecnume = new javax.swing.JFormattedTextField();
        lblfacnd = new javax.swing.JLabel();
        txtNcred = new javax.swing.JFormattedTextField();
        lblfacnd2 = new javax.swing.JLabel();
        txtNdeb = new javax.swing.JFormattedTextField();
        lblProforma = new javax.swing.JLabel();
        txtPronume = new javax.swing.JFormattedTextField();
        panelCXP = new javax.swing.JPanel();
        lblReciboCXP = new javax.swing.JLabel();
        txtRecnume1 = new javax.swing.JFormattedTextField();
        lblReciboCXP1 = new javax.swing.JLabel();
        txtUltordenc = new javax.swing.JFormattedTextField();
        jPanel1 = new javax.swing.JPanel();
        lblMovdocu = new javax.swing.JLabel();
        txtDocinv = new javax.swing.JFormattedTextField();
        jPanel2 = new javax.swing.JPanel();
        lblReciboCaja = new javax.swing.JLabel();
        txtRecnumeca = new javax.swing.JFormattedTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        mnuGuardar = new javax.swing.JMenuItem();
        mnuSalir = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Consecutivos");
        setLocationByPlatform(true);

        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/WZSAVE.png"))); // NOI18N
        btnGuardar.setToolTipText("Guardar registro");
        btnGuardar.setMaximumSize(new java.awt.Dimension(93, 29));
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/WZCLOSE.png"))); // NOI18N
        btnSalir.setToolTipText("Salir");
        btnSalir.setMaximumSize(new java.awt.Dimension(93, 29));
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        lblFacnume.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblFacnume.setText("Última factura");

        txtFacnume.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        txtFacnume.setColumns(10);
        txtFacnume.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        txtFacnume.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtFacnume.setText("0");
        txtFacnume.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFacnumeActionPerformed(evt);
            }
        });
        txtFacnume.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtFacnumeFocusGained(evt);
            }
        });

        lblFormulario.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblFormulario.setText("Último formulario");

        txtFormulario.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        txtFormulario.setColumns(10);
        txtFormulario.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        txtFormulario.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtFormulario.setText("0");
        txtFormulario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFormularioActionPerformed(evt);
            }
        });
        txtFormulario.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtFormularioFocusGained(evt);
            }
        });

        lblReciboCXC.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblReciboCXC.setText("Último recibo CXC");

        txtRecnume.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        txtRecnume.setColumns(10);
        txtRecnume.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        txtRecnume.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtRecnume.setText("0");
        txtRecnume.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRecnumeActionPerformed(evt);
            }
        });
        txtRecnume.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtRecnumeFocusGained(evt);
            }
        });

        lblfacnd.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblfacnd.setText("Última Nota C");

        txtNcred.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        txtNcred.setColumns(10);
        txtNcred.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        txtNcred.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtNcred.setText("0");
        txtNcred.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNcredActionPerformed(evt);
            }
        });
        txtNcred.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNcredFocusGained(evt);
            }
        });

        lblfacnd2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblfacnd2.setText("Última Nota D");

        txtNdeb.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        txtNdeb.setColumns(10);
        txtNdeb.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        txtNdeb.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtNdeb.setText("0");
        txtNdeb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNdebActionPerformed(evt);
            }
        });
        txtNdeb.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNdebFocusGained(evt);
            }
        });

        lblProforma.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblProforma.setText("Última proforma");

        txtPronume.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        txtPronume.setColumns(10);
        txtPronume.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        txtPronume.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtPronume.setText("0");
        txtPronume.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPronumeActionPerformed(evt);
            }
        });
        txtPronume.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPronumeFocusGained(evt);
            }
        });

        javax.swing.GroupLayout panelCXCLayout = new javax.swing.GroupLayout(panelCXC);
        panelCXC.setLayout(panelCXCLayout);
        panelCXCLayout.setHorizontalGroup(
            panelCXCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCXCLayout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addGroup(panelCXCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblFacnume)
                    .addComponent(lblFormulario)
                    .addComponent(lblfacnd)
                    .addComponent(lblReciboCXC)
                    .addComponent(lblfacnd2)
                    .addComponent(lblProforma))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelCXCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtFacnume, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFormulario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtRecnume, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNcred, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNdeb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPronume, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(65, 65, 65))
        );
        panelCXCLayout.setVerticalGroup(
            panelCXCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCXCLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelCXCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblFacnume)
                    .addComponent(txtFacnume, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelCXCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFormulario)
                    .addComponent(txtFormulario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelCXCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblReciboCXC)
                    .addComponent(txtRecnume, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelCXCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblfacnd)
                    .addComponent(txtNcred, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelCXCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblfacnd2)
                    .addComponent(txtNdeb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelCXCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblProforma)
                    .addComponent(txtPronume, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(68, Short.MAX_VALUE))
        );

        panelGeneral.addTab("Cuentas por cobrar", panelCXC);

        lblReciboCXP.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblReciboCXP.setText("Último recibo CXP");

        txtRecnume1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        txtRecnume1.setColumns(10);
        txtRecnume1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        txtRecnume1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtRecnume1.setText("0");
        txtRecnume1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtRecnume1FocusGained(evt);
            }
        });
        txtRecnume1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRecnume1ActionPerformed(evt);
            }
        });

        lblReciboCXP1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblReciboCXP1.setText("Última orden de compra");

        txtUltordenc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        txtUltordenc.setColumns(10);
        txtUltordenc.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        txtUltordenc.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtUltordenc.setText("0");
        txtUltordenc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUltordencActionPerformed(evt);
            }
        });
        txtUltordenc.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtUltordencFocusGained(evt);
            }
        });

        javax.swing.GroupLayout panelCXPLayout = new javax.swing.GroupLayout(panelCXP);
        panelCXP.setLayout(panelCXPLayout);
        panelCXPLayout.setHorizontalGroup(
            panelCXPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelCXPLayout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addGroup(panelCXPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblReciboCXP)
                    .addComponent(lblReciboCXP1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelCXPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtRecnume1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUltordenc, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(65, 65, 65))
        );
        panelCXPLayout.setVerticalGroup(
            panelCXPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCXPLayout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addGroup(panelCXPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblReciboCXP)
                    .addComponent(txtRecnume1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelCXPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblReciboCXP1)
                    .addComponent(txtUltordenc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(95, Short.MAX_VALUE))
        );

        panelGeneral.addTab("Cuentas por pagar", panelCXP);

        lblMovdocu.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblMovdocu.setText("Último Documento");

        txtDocinv.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        txtDocinv.setColumns(10);
        txtDocinv.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        txtDocinv.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtDocinv.setText("0");
        txtDocinv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDocinvActionPerformed(evt);
            }
        });
        txtDocinv.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDocinvFocusGained(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addComponent(lblMovdocu)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtDocinv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMovdocu)
                    .addComponent(txtDocinv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(119, Short.MAX_VALUE))
        );

        panelGeneral.addTab("Inventarios", jPanel1);

        lblReciboCaja.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblReciboCaja.setText("Último recibo caja");

        txtRecnumeca.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        txtRecnumeca.setColumns(10);
        txtRecnumeca.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        txtRecnumeca.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtRecnumeca.setText("0");
        txtRecnumeca.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtRecnumecaFocusGained(evt);
            }
        });
        txtRecnumeca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRecnumecaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(lblReciboCaja)
                .addGap(8, 8, 8)
                .addComponent(txtRecnumeca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(51, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(118, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblReciboCaja)
                    .addComponent(txtRecnumeca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(81, 81, 81))
        );

        panelGeneral.addTab("Caja", jPanel2);

        jMenu1.setText("Archivo");

        mnuGuardar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_MASK));
        mnuGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/disk.png"))); // NOI18N
        mnuGuardar.setText("Guardar");
        mnuGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuGuardarActionPerformed(evt);
            }
        });
        jMenu1.add(mnuGuardar);

        mnuSalir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.CTRL_MASK));
        mnuSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/control-power.png"))); // NOI18N
        mnuSalir.setText("Salir");
        mnuSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuSalirActionPerformed(evt);
            }
        });
        jMenu1.add(mnuSalir);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(210, 210, 210)
                .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelGeneral, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelGeneral, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 25, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void mnuGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuGuardarActionPerformed
        btnGuardarActionPerformed(evt);
    }//GEN-LAST:event_mnuGuardarActionPerformed

    private void mnuSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuSalirActionPerformed
        dispose();
}//GEN-LAST:event_mnuSalirActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        mnuSalirActionPerformed(null);
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // Verificar si el número cambió para ejecutar el SP
        short tipo;
        String sqlSent;
        PreparedStatement ps;
        ResultSet rs;
        boolean huboError = false;
        boolean hayTran = false;
        try{
            CMD.transaction(conn, CMD.START_TRANSACTION);
            hayTran = true;
            sqlSent = "Call CambiarConsecutivo(?,?)";
            // Facturas
            if (Integer.parseInt(txtFacnume.getText().trim()) != facnume){
                facnume = Integer.parseInt(txtFacnume.getText().trim());
                tipo = 1;
                ps = conn.prepareStatement(sqlSent);
                ps.setInt(1, facnume);
                ps.setInt(2, tipo);
                rs = CMD.select(ps);
                if (UtilBD.goRecord(rs, UtilBD.FIRST) && rs.getBoolean("HayError")){
                    JOptionPane.showMessageDialog(
                            null,
                            rs.getString("ErrorMessage"),
                            "Error",
                            JOptionPane.ERROR_MESSAGE);
                    huboError = true;
                } // end
                ps.close();
            } // end if

            // Formularios
            if (Integer.parseInt(txtFormulario.getText().trim()) != formulario){
                formulario = Integer.parseInt(txtFormulario.getText().trim());
                tipo = 2;
                ps = conn.prepareStatement(sqlSent);
                ps.setInt(1, formulario);
                ps.setInt(2, tipo);
                rs = CMD.select(ps);
                if (UtilBD.goRecord(rs, UtilBD.FIRST) && rs.getBoolean("HayError")){
                    JOptionPane.showMessageDialog(
                            null,
                            rs.getString("ErrorMessage"),
                            "Error",
                            JOptionPane.ERROR_MESSAGE);
                    huboError = true;
                } // end
                ps.close();
            } // end if

            // Recibos
            if (Integer.parseInt(txtRecnume.getText().trim()) != recnume){
                recnume = Integer.parseInt(txtRecnume.getText().trim());
                tipo = 3;
                ps = conn.prepareStatement(sqlSent);
                ps.setInt(1, recnume);
                ps.setInt(2, tipo);
                rs = CMD.select(ps);
                if (UtilBD.goRecord(rs, UtilBD.FIRST) && rs.getBoolean("HayError")){
                    JOptionPane.showMessageDialog(
                            null,
                            rs.getString("ErrorMessage"),
                            "Error",
                            JOptionPane.ERROR_MESSAGE);
                    huboError = true;
                } // end
                ps.close();
            } // end if

            // Notas de crédito
            if (Integer.parseInt(txtNcred.getText().trim()) != ncred){
                ncred = Integer.parseInt(txtNcred.getText().trim());
                tipo = 4;
                ps = conn.prepareStatement(sqlSent);
                ps.setInt(1, ncred);
                ps.setInt(2, tipo);
                rs = CMD.select(ps);
                if (UtilBD.goRecord(rs, UtilBD.FIRST) && rs.getBoolean("HayError")){
                    JOptionPane.showMessageDialog(
                            null,
                            rs.getString("ErrorMessage"),
                            "Error",
                            JOptionPane.ERROR_MESSAGE);
                    huboError = true;
                } // end
                ps.close();
            } // end if

            // Notas de débito
            if (Integer.parseInt(txtNdeb.getText().trim()) != ndeb){
                ndeb = Integer.parseInt(txtNdeb.getText().trim());
                tipo = 5;
                ps = conn.prepareStatement(sqlSent);
                ps.setInt(1, ndeb);
                ps.setInt(2, tipo);
                rs = CMD.select(ps);
                if (UtilBD.goRecord(rs, UtilBD.FIRST) && rs.getBoolean("HayError")){
                    JOptionPane.showMessageDialog(
                            null,
                            rs.getString("ErrorMessage"),
                            "Error",
                            JOptionPane.ERROR_MESSAGE);
                    huboError = true;
                } // end
                ps.close();
            } // end if

            // Recibos CXP
            if (Integer.parseInt(txtRecnume1.getText().trim()) != recnume1){
                recnume1 = Integer.parseInt(txtRecnume1.getText().trim());
                tipo = 6;
                ps = conn.prepareStatement(sqlSent);
                ps.setInt(1, recnume1);
                ps.setInt(2, tipo);
                rs = CMD.select(ps);
                if (UtilBD.goRecord(rs, UtilBD.FIRST) && rs.getBoolean("HayError")){
                    JOptionPane.showMessageDialog(
                            null,
                            rs.getString("ErrorMessage"),
                            "Error",
                            JOptionPane.ERROR_MESSAGE);
                    huboError = true;
                } // end
                ps.close();
            } // end if

            // Proformas -- Por ahora esto no está implementado 16/02/2013
            if (Integer.parseInt(txtPronume.getText().trim()) != pronume){
                pronume = Integer.parseInt(txtPronume.getText().trim());
                tipo = 7;
                ps = conn.prepareStatement(sqlSent);
                ps.setInt(1, pronume);
                ps.setInt(2, tipo);
                rs = CMD.select(ps);
                if (UtilBD.goRecord(rs, UtilBD.FIRST) && rs.getBoolean("HayError")){
                    JOptionPane.showMessageDialog(
                            null,
                            rs.getString("ErrorMessage"),
                            "Error",
                            JOptionPane.ERROR_MESSAGE);
                    huboError = true;
                } // end
                ps.close();
            } // end if

            // Documentos de inventario
            if (!txtDocinv.getText().trim().equals(docinv.trim())){
                docinv = txtDocinv.getText().trim();
                tipo = 8;
                int doc = Integer.parseInt(docinv.trim());
                ps = conn.prepareStatement(sqlSent);
                ps.setInt(1, doc);
                ps.setInt(2, tipo);
                rs = CMD.select(ps);
                if (UtilBD.goRecord(rs, UtilBD.FIRST) && rs.getBoolean("HayError")){
                    JOptionPane.showMessageDialog(
                            null,
                            rs.getString("ErrorMessage"),
                            "Error",
                            JOptionPane.ERROR_MESSAGE);
                    huboError = true;
                } // end
                ps.close();
            } // end if
            
            // Bosco agregado 13/06/2014
            // Órdenes de compra
            if (!txtUltordenc.getText().trim().equals(ultordec.trim())){
                ultordec = txtUltordenc.getText().trim();
                tipo = 9;
                ps = conn.prepareStatement(sqlSent);
                ps.setString(1, ultordec);
                ps.setInt(2, tipo);
                rs = CMD.select(ps);
                if (UtilBD.goRecord(rs, UtilBD.FIRST) && rs.getBoolean("HayError")){
                    JOptionPane.showMessageDialog(
                            null,
                            rs.getString("ErrorMessage"),
                            "Error",
                            JOptionPane.ERROR_MESSAGE);
                    huboError = true;
                } // end
                ps.close();
            } // end if
            
            // Bosco agregado 19/04/2015
            // Recibos de caja
            if (Integer.parseInt(txtRecnumeca.getText().trim()) != recnumeca){
                recnumeca = Integer.parseInt(txtRecnumeca.getText().trim());
                tipo = 10;
                ps = conn.prepareStatement(sqlSent);
                ps.setInt(1, recnumeca);
                ps.setInt(2, tipo);
                rs = CMD.select(ps);
                if (UtilBD.goRecord(rs, UtilBD.FIRST) && rs.getBoolean("HayError")){
                    JOptionPane.showMessageDialog(
                            null,
                            rs.getString("ErrorMessage"),
                            "Error",
                            JOptionPane.ERROR_MESSAGE);
                    huboError = true;
                } // end
                ps.close();
            } // end if
            CMD.transaction(conn, CMD.COMMIT);
            hayTran = false;
        } catch(SQLException | NumberFormatException | NullPointerException ex){
            huboError = true;
            JOptionPane.showMessageDialog(
                    null,
                    ex.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            b.writeToLog(this.getClass().getName() + "--> " + ex.getMessage(), Bitacora.ERROR);
            if (hayTran){
                try {
                    CMD.transaction(conn, CMD.ROLLBACK);
                } catch (SQLException ex1) {
                    Logger.getLogger(Consecutivos.class.getName()).log(Level.SEVERE, null, ex1);
                }
            }
        } // end try-catch
        finally{
            cargarConsecutivos();
            if (!huboError){
                JOptionPane.showMessageDialog(
                    null,
                    "Consecutivo(s) actualizado(s) satisfactoriamente",
                    "Mensaje",
                    JOptionPane.INFORMATION_MESSAGE);
            } // end if
        } // en finally
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void txtRecnumecaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRecnumecaActionPerformed
        txtRecnumeca.transferFocus();
    }//GEN-LAST:event_txtRecnumecaActionPerformed

    private void txtRecnumecaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtRecnumecaFocusGained
        txtRecnumeca.selectAll();
    }//GEN-LAST:event_txtRecnumecaFocusGained

    private void txtDocinvFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDocinvFocusGained
        txtDocinv.selectAll();
    }//GEN-LAST:event_txtDocinvFocusGained

    private void txtDocinvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDocinvActionPerformed
        txtDocinv.transferFocus();
    }//GEN-LAST:event_txtDocinvActionPerformed

    private void txtUltordencFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtUltordencFocusGained
        txtUltordenc.selectAll();
    }//GEN-LAST:event_txtUltordencFocusGained

    private void txtUltordencActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUltordencActionPerformed
        txtUltordenc.transferFocus();
    }//GEN-LAST:event_txtUltordencActionPerformed

    private void txtRecnume1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRecnume1ActionPerformed
        txtRecnume1.transferFocus();
    }//GEN-LAST:event_txtRecnume1ActionPerformed

    private void txtRecnume1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtRecnume1FocusGained
        txtRecnume1.selectAll();
    }//GEN-LAST:event_txtRecnume1FocusGained

    private void txtPronumeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPronumeFocusGained
        txtPronume.selectAll();
    }//GEN-LAST:event_txtPronumeFocusGained

    private void txtPronumeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPronumeActionPerformed
        txtPronume.transferFocus();
    }//GEN-LAST:event_txtPronumeActionPerformed

    private void txtNdebFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNdebFocusGained
        txtNdeb.selectAll();
    }//GEN-LAST:event_txtNdebFocusGained

    private void txtNdebActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNdebActionPerformed
        txtNdeb.transferFocus();
    }//GEN-LAST:event_txtNdebActionPerformed

    private void txtNcredFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNcredFocusGained
        txtNcred.selectAll();
    }//GEN-LAST:event_txtNcredFocusGained

    private void txtNcredActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNcredActionPerformed
        txtNcred.transferFocus();
    }//GEN-LAST:event_txtNcredActionPerformed

    private void txtRecnumeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtRecnumeFocusGained
        txtRecnume.selectAll();
    }//GEN-LAST:event_txtRecnumeFocusGained

    private void txtRecnumeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRecnumeActionPerformed
        txtRecnume.transferFocus();
    }//GEN-LAST:event_txtRecnumeActionPerformed

    private void txtFormularioFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFormularioFocusGained
        txtFormulario.selectAll();
    }//GEN-LAST:event_txtFormularioFocusGained

    private void txtFormularioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFormularioActionPerformed
        txtFormulario.transferFocus();
    }//GEN-LAST:event_txtFormularioActionPerformed

    private void txtFacnumeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFacnumeFocusGained
        txtFacnume.selectAll();
    }//GEN-LAST:event_txtFacnumeFocusGained

    private void txtFacnumeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFacnumeActionPerformed
        txtFacnume.transferFocus();
    }//GEN-LAST:event_txtFacnumeActionPerformed

    /**
     * @param c
    */
    public static void main(Connection c) {
        try {
            // Bosco agregado 18/07/2011
            // Integración del segundo nivel de seguridad.
            if (!UtilBD.tienePermiso(c,"Consecutivos")){
                JOptionPane.showMessageDialog(null,
                        "Usted no está autorizado para ejecutar este proceso",
                        "Error - Permisos",
                        JOptionPane.ERROR_MESSAGE);
                return;
            } // Fin Bosco agregado 18/07/2011
            // Fin Bosco agregado 18/07/2011
        } catch (Exception ex) {
            Logger.getLogger(Consecutivos.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, 
                    ex.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }

        Consecutivos run = new Consecutivos(c);
        run.setVisible(true);            
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblFacnume;
    private javax.swing.JLabel lblFormulario;
    private javax.swing.JLabel lblMovdocu;
    private javax.swing.JLabel lblProforma;
    private javax.swing.JLabel lblReciboCXC;
    private javax.swing.JLabel lblReciboCXP;
    private javax.swing.JLabel lblReciboCXP1;
    private javax.swing.JLabel lblReciboCaja;
    private javax.swing.JLabel lblfacnd;
    private javax.swing.JLabel lblfacnd2;
    private javax.swing.JMenuItem mnuGuardar;
    private javax.swing.JMenuItem mnuSalir;
    private javax.swing.JPanel panelCXC;
    private javax.swing.JPanel panelCXP;
    private javax.swing.JTabbedPane panelGeneral;
    private javax.swing.JFormattedTextField txtDocinv;
    private javax.swing.JFormattedTextField txtFacnume;
    private javax.swing.JFormattedTextField txtFormulario;
    private javax.swing.JFormattedTextField txtNcred;
    private javax.swing.JFormattedTextField txtNdeb;
    private javax.swing.JFormattedTextField txtPronume;
    private javax.swing.JFormattedTextField txtRecnume;
    private javax.swing.JFormattedTextField txtRecnume1;
    private javax.swing.JFormattedTextField txtRecnumeca;
    private javax.swing.JFormattedTextField txtUltordenc;
    // End of variables declaration//GEN-END:variables
    private void cargarConsecutivos(){
        ResultSet rs;

        // Cargar los consecutivos
        String sqlSent = 
                "Select "        + 
                "   facnume,"    + 
                "   formulario," + 
                "   recnume,"    + 
                "   ncred,"      + 
                "   ndeb,"       + 
                "   recnume1,"   + 
                "   pronume,"    +
                "   (Select docinv from inconsecutivo) as docinv," +
                "   ultordenc,"  +  // Bosco agregado 13/07/2014
                "   recnumeca "  +  // Bosco agregado 19/04/2015
                "From config";
        try{
            PreparedStatement ps = conn.prepareStatement(sqlSent);
            rs = CMD.select(ps);
            if (!UtilBD.goRecord(rs, UtilBD.FIRST)){
                return;
            } // end if

            // Cargo el valor original en variables
            this.facnume    = rs.getInt("facnume");
            this.formulario = rs.getInt("formulario");
            this.recnume    = rs.getInt("recnume");
            this.ncred      = rs.getInt("ncred");
            this.ndeb       = rs.getInt("ndeb");
            this.recnume1   = rs.getInt("recnume1");
            this.pronume    = rs.getInt("pronume");
            this.docinv     = rs.getString("docinv");
            this.ultordec   = rs.getString("ultordenc"); // Bosco agregado 13/06/2014
            this.recnumeca  = rs.getInt("recnumeca");    // Bosco agregado 19/04/2015

            // Cargo el mismo valor en controles para que el usuario pueda modificarlos
            txtFacnume.setText(rs.getString("facnume"));
            txtFormulario.setText(rs.getString("formulario"));
            txtRecnume.setText(rs.getString("recnume"));
            txtNcred.setText(rs.getString("ncred"));
            txtNdeb.setText(rs.getString("ndeb"));
            txtRecnume1.setText(rs.getString("recnume1"));
            txtPronume.setText(rs.getString("pronume"));
            txtDocinv.setText(rs.getString("docinv"));
            txtUltordenc.setText(rs.getString("ultordenc")); // Bosco agregado 13/06/2014
            txtRecnumeca.setText(rs.getString("recnumeca")); // Bosco agregado 19/04/2015
            
            // Bosco agregado 28/09/2013
            ps.close();
        } catch(SQLException ex){
            JOptionPane.showMessageDialog(
                    null,
                    ex.getMessage(),
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
            b.writeToLog(this.getClass().getName() + "--> " + ex.getMessage(), Bitacora.ERROR);
            return;
        } // end try-catch
        

        if (this.docinv == null || this.docinv.trim().isEmpty()){
            this.docinv = "0";
            txtDocinv.setText(this.docinv);
        } // end if
        
        // Bosco agregado 13/06/2014
        if (this.ultordec == null || this.ultordec.trim().isEmpty()){
            this.ultordec = "0";
            txtUltordenc.setText(this.ultordec);
        } // end if
        // Fin Bosco agregado 13/06/2014
    }
} // end class